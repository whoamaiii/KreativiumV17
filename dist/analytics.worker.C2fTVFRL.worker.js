function rv(n,e){return e.forEach(function(t){t&&typeof t!="string"&&!Array.isArray(t)&&Object.keys(t).forEach(function(s){if(s!=="default"&&!(s in n)){var o=Object.getOwnPropertyDescriptor(t,s);Object.defineProperty(n,s,o.get?o:{enumerable:!0,get:function(){return t[s]}})}})}),Object.freeze(n)}function jt(n){const e=Object.prototype.toString.call(n);return n instanceof Date||typeof n=="object"&&e==="[object Date]"?new n.constructor(+n):typeof n=="number"||e==="[object Number]"||typeof n=="string"||e==="[object String]"?new Date(n):new Date(NaN)}function Ss(n,e){return n instanceof Date?new n.constructor(e):new Date(e)}function iv(n,e){const t=jt(n);return isNaN(e)?Ss(n,NaN):(e&&t.setDate(t.getDate()+e),t)}const hg=6048e5,av=864e5;let cv={};function Nc(){return cv}function Hr(n,e){const t=Nc(),s=e?.weekStartsOn??e?.locale?.options?.weekStartsOn??t.weekStartsOn??t.locale?.options?.weekStartsOn??0,o=jt(n),r=o.getDay(),i=(r<s?7:0)+r-s;return o.setDate(o.getDate()-i),o.setHours(0,0,0,0),o}function Ya(n){return Hr(n,{weekStartsOn:1})}function dg(n){const e=jt(n),t=e.getFullYear(),s=Ss(n,0);s.setFullYear(t+1,0,4),s.setHours(0,0,0,0);const o=Ya(s),r=Ss(n,0);r.setFullYear(t,0,4),r.setHours(0,0,0,0);const i=Ya(r);return e.getTime()>=o.getTime()?t+1:e.getTime()>=i.getTime()?t:t-1}function af(n){const e=jt(n);return e.setHours(0,0,0,0),e}function cf(n){const e=jt(n),t=new Date(Date.UTC(e.getFullYear(),e.getMonth(),e.getDate(),e.getHours(),e.getMinutes(),e.getSeconds(),e.getMilliseconds()));return t.setUTCFullYear(e.getFullYear()),+n-+t}function pg(n,e){const t=af(n),s=af(e),o=+t-cf(t),r=+s-cf(s);return Math.round((o-r)/av)}function lv(n){const e=dg(n),t=Ss(n,0);return t.setFullYear(e,0,4),t.setHours(0,0,0,0),Ya(t)}function uv(n){return n instanceof Date||typeof n=="object"&&Object.prototype.toString.call(n)==="[object Date]"}function hv(n){if(!uv(n)&&typeof n!="number")return!1;const e=jt(n);return!isNaN(Number(e))}function dv(n,e){const t=jt(n),s=jt(e),o=lf(t,s),r=Math.abs(pg(t,s));t.setDate(t.getDate()-o*r);const i=+(lf(t,s)===-o),a=o*(r-i);return a===0?0:a}function lf(n,e){const t=n.getFullYear()-e.getFullYear()||n.getMonth()-e.getMonth()||n.getDate()-e.getDate()||n.getHours()-e.getHours()||n.getMinutes()-e.getMinutes()||n.getSeconds()-e.getSeconds()||n.getMilliseconds()-e.getMilliseconds();return t<0?-1:t>0?1:t}function pv(n){const e=jt(n),t=Ss(n,0);return t.setFullYear(e.getFullYear(),0,1),t.setHours(0,0,0,0),t}const fv={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}},mv=(n,e,t)=>{let s;const o=fv[n];return typeof o=="string"?s=o:e===1?s=o.one:s=o.other.replace("{{count}}",e.toString()),t?.addSuffix?t.comparison&&t.comparison>0?"in "+s:s+" ago":s};function iu(n){return(e={})=>{const t=e.width?String(e.width):n.defaultWidth;return n.formats[t]||n.formats[n.defaultWidth]}}const gv={full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},xv={full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},yv={full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},bv={date:iu({formats:gv,defaultWidth:"full"}),time:iu({formats:xv,defaultWidth:"full"}),dateTime:iu({formats:yv,defaultWidth:"full"})},wv={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"},vv=(n,e,t,s)=>wv[n];function kr(n){return(e,t)=>{const s=t?.context?String(t.context):"standalone";let o;if(s==="formatting"&&n.formattingValues){const i=n.defaultFormattingWidth||n.defaultWidth,a=t?.width?String(t.width):i;o=n.formattingValues[a]||n.formattingValues[i]}else{const i=n.defaultWidth,a=t?.width?String(t.width):n.defaultWidth;o=n.values[a]||n.values[i]}const r=n.argumentCallback?n.argumentCallback(e):e;return o[r]}}const Cv={narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},Iv={narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},$v={narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},Sv={narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},kv={narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},Tv={narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},Nv=(n,e)=>{const t=Number(n),s=t%100;if(s>20||s<10)switch(s%10){case 1:return t+"st";case 2:return t+"nd";case 3:return t+"rd"}return t+"th"},Ev={ordinalNumber:Nv,era:kr({values:Cv,defaultWidth:"wide"}),quarter:kr({values:Iv,defaultWidth:"wide",argumentCallback:n=>n-1}),month:kr({values:$v,defaultWidth:"wide"}),day:kr({values:Sv,defaultWidth:"wide"}),dayPeriod:kr({values:kv,defaultWidth:"wide",formattingValues:Tv,defaultFormattingWidth:"wide"})};function Tr(n){return(e,t={})=>{const s=t.width,o=s&&n.matchPatterns[s]||n.matchPatterns[n.defaultMatchWidth],r=e.match(o);if(!r)return null;const i=r[0],a=s&&n.parsePatterns[s]||n.parsePatterns[n.defaultParseWidth],c=Array.isArray(a)?Dv(a,h=>h.test(i)):Rv(a,h=>h.test(i));let l;l=n.valueCallback?n.valueCallback(c):c,l=t.valueCallback?t.valueCallback(l):l;const u=e.slice(i.length);return{value:l,rest:u}}}function Rv(n,e){for(const t in n)if(Object.prototype.hasOwnProperty.call(n,t)&&e(n[t]))return t}function Dv(n,e){for(let t=0;t<n.length;t++)if(e(n[t]))return t}function Av(n){return(e,t={})=>{const s=e.match(n.matchPattern);if(!s)return null;const o=s[0],r=e.match(n.parsePattern);if(!r)return null;let i=n.valueCallback?n.valueCallback(r[0]):r[0];i=t.valueCallback?t.valueCallback(i):i;const a=e.slice(o.length);return{value:i,rest:a}}}const Fv=/^(\d+)(th|st|nd|rd)?/i,Ov=/\d+/i,Mv={narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},_v={any:[/^b/i,/^(a|c)/i]},Lv={narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},Pv={any:[/1/i,/2/i,/3/i,/4/i]},zv={narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},Bv={narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},Vv={narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},Wv={narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},Uv={narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},Gv={any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},Hv={ordinalNumber:Av({matchPattern:Fv,parsePattern:Ov,valueCallback:n=>parseInt(n,10)}),era:Tr({matchPatterns:Mv,defaultMatchWidth:"wide",parsePatterns:_v,defaultParseWidth:"any"}),quarter:Tr({matchPatterns:Lv,defaultMatchWidth:"wide",parsePatterns:Pv,defaultParseWidth:"any",valueCallback:n=>n+1}),month:Tr({matchPatterns:zv,defaultMatchWidth:"wide",parsePatterns:Bv,defaultParseWidth:"any"}),day:Tr({matchPatterns:Vv,defaultMatchWidth:"wide",parsePatterns:Wv,defaultParseWidth:"any"}),dayPeriod:Tr({matchPatterns:Uv,defaultMatchWidth:"any",parsePatterns:Gv,defaultParseWidth:"any"})},qv={code:"en-US",formatDistance:mv,formatLong:bv,formatRelative:vv,localize:Ev,match:Hv,options:{weekStartsOn:0,firstWeekContainsDate:1}};function jv(n){const e=jt(n);return pg(e,pv(e))+1}function Kv(n){const e=jt(n),t=+Ya(e)-+lv(e);return Math.round(t/hg)+1}function fg(n,e){const t=jt(n),s=t.getFullYear(),o=Nc(),r=e?.firstWeekContainsDate??e?.locale?.options?.firstWeekContainsDate??o.firstWeekContainsDate??o.locale?.options?.firstWeekContainsDate??1,i=Ss(n,0);i.setFullYear(s+1,0,r),i.setHours(0,0,0,0);const a=Hr(i,e),c=Ss(n,0);c.setFullYear(s,0,r),c.setHours(0,0,0,0);const l=Hr(c,e);return t.getTime()>=a.getTime()?s+1:t.getTime()>=l.getTime()?s:s-1}function Xv(n,e){const t=Nc(),s=e?.firstWeekContainsDate??e?.locale?.options?.firstWeekContainsDate??t.firstWeekContainsDate??t.locale?.options?.firstWeekContainsDate??1,o=fg(n,e),r=Ss(n,0);return r.setFullYear(o,0,s),r.setHours(0,0,0,0),Hr(r,e)}function Yv(n,e){const t=jt(n),s=+Hr(t,e)-+Xv(t,e);return Math.round(s/hg)+1}function Me(n,e){const t=n<0?"-":"",s=Math.abs(n).toString().padStart(e,"0");return t+s}const ds={y(n,e){const t=n.getFullYear(),s=t>0?t:1-t;return Me(e==="yy"?s%100:s,e.length)},M(n,e){const t=n.getMonth();return e==="M"?String(t+1):Me(t+1,2)},d(n,e){return Me(n.getDate(),e.length)},a(n,e){const t=n.getHours()/12>=1?"pm":"am";switch(e){case"a":case"aa":return t.toUpperCase();case"aaa":return t;case"aaaaa":return t[0];case"aaaa":default:return t==="am"?"a.m.":"p.m."}},h(n,e){return Me(n.getHours()%12||12,e.length)},H(n,e){return Me(n.getHours(),e.length)},m(n,e){return Me(n.getMinutes(),e.length)},s(n,e){return Me(n.getSeconds(),e.length)},S(n,e){const t=e.length,s=n.getMilliseconds(),o=Math.trunc(s*Math.pow(10,t-3));return Me(o,e.length)}},Ro={midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},uf={G:function(n,e,t){const s=n.getFullYear()>0?1:0;switch(e){case"G":case"GG":case"GGG":return t.era(s,{width:"abbreviated"});case"GGGGG":return t.era(s,{width:"narrow"});case"GGGG":default:return t.era(s,{width:"wide"})}},y:function(n,e,t){if(e==="yo"){const s=n.getFullYear(),o=s>0?s:1-s;return t.ordinalNumber(o,{unit:"year"})}return ds.y(n,e)},Y:function(n,e,t,s){const o=fg(n,s),r=o>0?o:1-o;if(e==="YY"){const i=r%100;return Me(i,2)}return e==="Yo"?t.ordinalNumber(r,{unit:"year"}):Me(r,e.length)},R:function(n,e){const t=dg(n);return Me(t,e.length)},u:function(n,e){const t=n.getFullYear();return Me(t,e.length)},Q:function(n,e,t){const s=Math.ceil((n.getMonth()+1)/3);switch(e){case"Q":return String(s);case"QQ":return Me(s,2);case"Qo":return t.ordinalNumber(s,{unit:"quarter"});case"QQQ":return t.quarter(s,{width:"abbreviated",context:"formatting"});case"QQQQQ":return t.quarter(s,{width:"narrow",context:"formatting"});case"QQQQ":default:return t.quarter(s,{width:"wide",context:"formatting"})}},q:function(n,e,t){const s=Math.ceil((n.getMonth()+1)/3);switch(e){case"q":return String(s);case"qq":return Me(s,2);case"qo":return t.ordinalNumber(s,{unit:"quarter"});case"qqq":return t.quarter(s,{width:"abbreviated",context:"standalone"});case"qqqqq":return t.quarter(s,{width:"narrow",context:"standalone"});case"qqqq":default:return t.quarter(s,{width:"wide",context:"standalone"})}},M:function(n,e,t){const s=n.getMonth();switch(e){case"M":case"MM":return ds.M(n,e);case"Mo":return t.ordinalNumber(s+1,{unit:"month"});case"MMM":return t.month(s,{width:"abbreviated",context:"formatting"});case"MMMMM":return t.month(s,{width:"narrow",context:"formatting"});case"MMMM":default:return t.month(s,{width:"wide",context:"formatting"})}},L:function(n,e,t){const s=n.getMonth();switch(e){case"L":return String(s+1);case"LL":return Me(s+1,2);case"Lo":return t.ordinalNumber(s+1,{unit:"month"});case"LLL":return t.month(s,{width:"abbreviated",context:"standalone"});case"LLLLL":return t.month(s,{width:"narrow",context:"standalone"});case"LLLL":default:return t.month(s,{width:"wide",context:"standalone"})}},w:function(n,e,t,s){const o=Yv(n,s);return e==="wo"?t.ordinalNumber(o,{unit:"week"}):Me(o,e.length)},I:function(n,e,t){const s=Kv(n);return e==="Io"?t.ordinalNumber(s,{unit:"week"}):Me(s,e.length)},d:function(n,e,t){return e==="do"?t.ordinalNumber(n.getDate(),{unit:"date"}):ds.d(n,e)},D:function(n,e,t){const s=jv(n);return e==="Do"?t.ordinalNumber(s,{unit:"dayOfYear"}):Me(s,e.length)},E:function(n,e,t){const s=n.getDay();switch(e){case"E":case"EE":case"EEE":return t.day(s,{width:"abbreviated",context:"formatting"});case"EEEEE":return t.day(s,{width:"narrow",context:"formatting"});case"EEEEEE":return t.day(s,{width:"short",context:"formatting"});case"EEEE":default:return t.day(s,{width:"wide",context:"formatting"})}},e:function(n,e,t,s){const o=n.getDay(),r=(o-s.weekStartsOn+8)%7||7;switch(e){case"e":return String(r);case"ee":return Me(r,2);case"eo":return t.ordinalNumber(r,{unit:"day"});case"eee":return t.day(o,{width:"abbreviated",context:"formatting"});case"eeeee":return t.day(o,{width:"narrow",context:"formatting"});case"eeeeee":return t.day(o,{width:"short",context:"formatting"});case"eeee":default:return t.day(o,{width:"wide",context:"formatting"})}},c:function(n,e,t,s){const o=n.getDay(),r=(o-s.weekStartsOn+8)%7||7;switch(e){case"c":return String(r);case"cc":return Me(r,e.length);case"co":return t.ordinalNumber(r,{unit:"day"});case"ccc":return t.day(o,{width:"abbreviated",context:"standalone"});case"ccccc":return t.day(o,{width:"narrow",context:"standalone"});case"cccccc":return t.day(o,{width:"short",context:"standalone"});case"cccc":default:return t.day(o,{width:"wide",context:"standalone"})}},i:function(n,e,t){const s=n.getDay(),o=s===0?7:s;switch(e){case"i":return String(o);case"ii":return Me(o,e.length);case"io":return t.ordinalNumber(o,{unit:"day"});case"iii":return t.day(s,{width:"abbreviated",context:"formatting"});case"iiiii":return t.day(s,{width:"narrow",context:"formatting"});case"iiiiii":return t.day(s,{width:"short",context:"formatting"});case"iiii":default:return t.day(s,{width:"wide",context:"formatting"})}},a:function(n,e,t){const o=n.getHours()/12>=1?"pm":"am";switch(e){case"a":case"aa":return t.dayPeriod(o,{width:"abbreviated",context:"formatting"});case"aaa":return t.dayPeriod(o,{width:"abbreviated",context:"formatting"}).toLowerCase();case"aaaaa":return t.dayPeriod(o,{width:"narrow",context:"formatting"});case"aaaa":default:return t.dayPeriod(o,{width:"wide",context:"formatting"})}},b:function(n,e,t){const s=n.getHours();let o;switch(s===12?o=Ro.noon:s===0?o=Ro.midnight:o=s/12>=1?"pm":"am",e){case"b":case"bb":return t.dayPeriod(o,{width:"abbreviated",context:"formatting"});case"bbb":return t.dayPeriod(o,{width:"abbreviated",context:"formatting"}).toLowerCase();case"bbbbb":return t.dayPeriod(o,{width:"narrow",context:"formatting"});case"bbbb":default:return t.dayPeriod(o,{width:"wide",context:"formatting"})}},B:function(n,e,t){const s=n.getHours();let o;switch(s>=17?o=Ro.evening:s>=12?o=Ro.afternoon:s>=4?o=Ro.morning:o=Ro.night,e){case"B":case"BB":case"BBB":return t.dayPeriod(o,{width:"abbreviated",context:"formatting"});case"BBBBB":return t.dayPeriod(o,{width:"narrow",context:"formatting"});case"BBBB":default:return t.dayPeriod(o,{width:"wide",context:"formatting"})}},h:function(n,e,t){if(e==="ho"){let s=n.getHours()%12;return s===0&&(s=12),t.ordinalNumber(s,{unit:"hour"})}return ds.h(n,e)},H:function(n,e,t){return e==="Ho"?t.ordinalNumber(n.getHours(),{unit:"hour"}):ds.H(n,e)},K:function(n,e,t){const s=n.getHours()%12;return e==="Ko"?t.ordinalNumber(s,{unit:"hour"}):Me(s,e.length)},k:function(n,e,t){let s=n.getHours();return s===0&&(s=24),e==="ko"?t.ordinalNumber(s,{unit:"hour"}):Me(s,e.length)},m:function(n,e,t){return e==="mo"?t.ordinalNumber(n.getMinutes(),{unit:"minute"}):ds.m(n,e)},s:function(n,e,t){return e==="so"?t.ordinalNumber(n.getSeconds(),{unit:"second"}):ds.s(n,e)},S:function(n,e){return ds.S(n,e)},X:function(n,e,t){const s=n.getTimezoneOffset();if(s===0)return"Z";switch(e){case"X":return df(s);case"XXXX":case"XX":return qs(s);case"XXXXX":case"XXX":default:return qs(s,":")}},x:function(n,e,t){const s=n.getTimezoneOffset();switch(e){case"x":return df(s);case"xxxx":case"xx":return qs(s);case"xxxxx":case"xxx":default:return qs(s,":")}},O:function(n,e,t){const s=n.getTimezoneOffset();switch(e){case"O":case"OO":case"OOO":return"GMT"+hf(s,":");case"OOOO":default:return"GMT"+qs(s,":")}},z:function(n,e,t){const s=n.getTimezoneOffset();switch(e){case"z":case"zz":case"zzz":return"GMT"+hf(s,":");case"zzzz":default:return"GMT"+qs(s,":")}},t:function(n,e,t){const s=Math.trunc(n.getTime()/1e3);return Me(s,e.length)},T:function(n,e,t){const s=n.getTime();return Me(s,e.length)}};function hf(n,e=""){const t=n>0?"-":"+",s=Math.abs(n),o=Math.trunc(s/60),r=s%60;return r===0?t+String(o):t+String(o)+e+Me(r,2)}function df(n,e){return n%60===0?(n>0?"-":"+")+Me(Math.abs(n)/60,2):qs(n,e)}function qs(n,e=""){const t=n>0?"-":"+",s=Math.abs(n),o=Me(Math.trunc(s/60),2),r=Me(s%60,2);return t+o+e+r}const pf=(n,e)=>{switch(n){case"P":return e.date({width:"short"});case"PP":return e.date({width:"medium"});case"PPP":return e.date({width:"long"});case"PPPP":default:return e.date({width:"full"})}},mg=(n,e)=>{switch(n){case"p":return e.time({width:"short"});case"pp":return e.time({width:"medium"});case"ppp":return e.time({width:"long"});case"pppp":default:return e.time({width:"full"})}},Jv=(n,e)=>{const t=n.match(/(P+)(p+)?/)||[],s=t[1],o=t[2];if(!o)return pf(n,e);let r;switch(s){case"P":r=e.dateTime({width:"short"});break;case"PP":r=e.dateTime({width:"medium"});break;case"PPP":r=e.dateTime({width:"long"});break;case"PPPP":default:r=e.dateTime({width:"full"});break}return r.replace("{{date}}",pf(s,e)).replace("{{time}}",mg(o,e))},Zv={p:mg,P:Jv},Qv=/^D+$/,eC=/^Y+$/,tC=["D","DD","YY","YYYY"];function nC(n){return Qv.test(n)}function sC(n){return eC.test(n)}function oC(n,e,t){const s=rC(n,e,t);if(console.warn(s),tC.includes(n))throw new RangeError(s)}function rC(n,e,t){const s=n[0]==="Y"?"years":"days of the month";return`Use \`${n.toLowerCase()}\` instead of \`${n}\` (in \`${e}\`) for formatting ${s} to the input \`${t}\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`}const iC=/[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g,aC=/P+p+|P+|p+|''|'(''|[^'])+('|$)|./g,cC=/^'([^]*?)'?$/,lC=/''/g,uC=/[a-zA-Z]/;function hC(n,e,t){const s=Nc(),o=s.locale??qv,r=s.firstWeekContainsDate??s.locale?.options?.firstWeekContainsDate??1,i=s.weekStartsOn??s.locale?.options?.weekStartsOn??0,a=jt(n);if(!hv(a))throw new RangeError("Invalid time value");let c=e.match(aC).map(u=>{const h=u[0];if(h==="p"||h==="P"){const d=Zv[h];return d(u,o.formatLong)}return u}).join("").match(iC).map(u=>{if(u==="''")return{isToken:!1,value:"'"};const h=u[0];if(h==="'")return{isToken:!1,value:dC(u)};if(uf[h])return{isToken:!0,value:u};if(h.match(uC))throw new RangeError("Format string contains an unescaped latin alphabet character `"+h+"`");return{isToken:!1,value:u}});o.localize.preprocessor&&(c=o.localize.preprocessor(a,c));const l={firstWeekContainsDate:r,weekStartsOn:i,locale:o};return c.map(u=>{if(!u.isToken)return u.value;const h=u.value;(sC(h)||nC(h))&&oC(h,e,String(n));const d=uf[h[0]];return d(a,h,o.localize,l)}).join("")}function dC(n){const e=n.match(cC);return e?e[1].replace(lC,"'"):n}function Vo(n,e){return iv(n,-e)}const pC={BASE_URL:"/",DEV:!1,MODE:"production",PROD:!0,SSR:!1,VITE_ENABLE_GEMMA_DEMO:"true",VITE_GEMMA_BASE_URL:"http://127.0.0.1:8000"};let fC=class Mr{config;static instance;constructor(){const e=(()=>{try{return pC}catch{return}})(),t=!!(e&&e.PROD);this.config={level:t?3:0,enableConsole:!t,enableRemote:!1}}static getInstance(){return Mr.instance||(Mr.instance=new Mr),Mr.instance}init(e){this.config.level=e}setLogLevel(e){this.config.level=e}shouldLog(e){return e>=this.config.level}formatMessage(e){return`[${new Date().toISOString()}] [${e}]`}debug(e,...t){this.shouldLog(0)&&this.config.enableConsole&&console.log(this.formatMessage("DEBUG"),e,...t)}info(e,...t){this.shouldLog(1)&&this.config.enableConsole&&console.info(this.formatMessage("INFO"),e,...t)}warn(e,...t){this.shouldLog(2)&&this.config.enableConsole&&console.warn(this.formatMessage("WARN"),e,...t)}error(e,...t){if(this.shouldLog(3)){this.config.enableConsole&&console.error(this.formatMessage("ERROR"),e,...t);const s=t.map(o=>o instanceof Error?{message:o.message,stack:o.stack,name:o.name}:o);this.config.enableRemote&&this.config.remoteEndpoint&&this.sendToRemote(e,s)}}async sendToRemote(e,t){try{await fetch(this.config.remoteEndpoint,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({timestamp:new Date().toISOString(),level:"ERROR",message:e,data:t,userAgent:navigator.userAgent,url:window.location.href})})}catch{}}configure(e){this.config={...this.config,...e}}};const at=fC.getInstance(),wn={schemaVersion:"2.3.0",features:{enableStructuredInsights:!1,enableSummaryFacade:!0},featureEngineering:{timeEncoding:{variant:"sixFeatureV1"},normalization:{clampToUnit:!0,minVariance:1e-9}},patternAnalysis:{minDataPoints:3,correlationThreshold:.25,highIntensityThreshold:4,concernFrequencyThreshold:.3,emotionConsistencyThreshold:.4,moderateNegativeThreshold:.4},enhancedAnalysis:{minSampleSize:5,trendThreshold:.02,predictionConfidenceThreshold:.6,anomalyThreshold:2.5,anomalySeverityLevels:{medium:2.5,high:3},huber:{delta:1.345,maxIter:50,tol:1e-6},qualityTargets:{pointsTarget:30,timeSpanDaysTarget:21},correlationSignificance:{high:.7,moderate:.5,low:.3},riskAssessment:{stressIntensityThreshold:4,stressEmotions:["anxious","frustrated","overwhelmed","angry"]}},timeWindows:{defaultAnalysisDays:30,recentDataDays:7,shortTermDays:14,longTermDays:90},alertSensitivity:{level:"medium",emotionIntensityMultiplier:1,frequencyMultiplier:1,anomalyMultiplier:1},cache:{ttl:600*1e3,maxSize:50,invalidateOnConfigChange:!0},insights:{MIN_SESSIONS_FOR_FULL_ANALYTICS:5,HIGH_CONFIDENCE_PATTERN_THRESHOLD:.6,MAX_PATTERNS_TO_SHOW:2,MAX_CORRELATIONS_TO_SHOW:2,MAX_PREDICTIONS_TO_SHOW:2,RECENT_EMOTION_COUNT:7,POSITIVE_EMOTION_TREND_THRESHOLD:.6,NEGATIVE_EMOTION_TREND_THRESHOLD:.3},confidence:{THRESHOLDS:{EMOTION_ENTRIES:10,SENSORY_ENTRIES:10,TRACKING_ENTRIES:5,DAYS_SINCE_LAST_ENTRY:7},WEIGHTS:{EMOTION:.3,SENSORY:.3,TRACKING:.4,RECENCY_BOOST:.1}},healthScore:{WEIGHTS:{PATTERNS:20,CORRELATIONS:20,PREDICTIONS:20,ANOMALIES:20,MINIMUM_DATA:20}},analytics:{MIN_TRACKING_FOR_CORRELATION:3,MIN_TRACKING_FOR_ENHANCED:2,ANALYSIS_PERIOD_DAYS:30},taxonomy:{positiveEmotions:["happy","calm","excited","content","peaceful","cheerful","relaxed","optimistic"]}},mC={conservative:{name:"Conservative",description:"Higher thresholds, fewer alerts, more data required",config:{...wn,schemaVersion:"2.3.0",patternAnalysis:{...wn.patternAnalysis,minDataPoints:5,correlationThreshold:.4,concernFrequencyThreshold:.4},enhancedAnalysis:{...wn.enhancedAnalysis,anomalyThreshold:3,minSampleSize:8},alertSensitivity:{level:"low",emotionIntensityMultiplier:.8,frequencyMultiplier:.8,anomalyMultiplier:.8}}},balanced:{name:"Balanced",description:"Default settings, balanced sensitivity",config:{...wn,schemaVersion:"2.3.0"}},sensitive:{name:"Sensitive",description:"Lower thresholds, more alerts, less data required",config:{...wn,schemaVersion:"2.3.0",patternAnalysis:{...wn.patternAnalysis,minDataPoints:2,correlationThreshold:.15,concernFrequencyThreshold:.2},enhancedAnalysis:{...wn.enhancedAnalysis,anomalyThreshold:2,minSampleSize:3},alertSensitivity:{level:"high",emotionIntensityMultiplier:1.2,frequencyMultiplier:1.2,anomalyMultiplier:1.2}}}};class Po{static instance;config;listeners=[];storageKey="sensory-compass-analytics-config";constructor(){this.config=this.loadConfig()}static getInstance(){return Po.instance||(Po.instance=new Po),Po.instance}getConfig(){return{...this.config}}updateConfig(e){this.config=this.deepMerge(this.config,e),this.saveConfig(),this.notifyListeners()}setPreset(e){const t=mC[e];t&&(this.config={...t.config},this.saveConfig(),this.notifyListeners())}resetToDefaults(){this.config={...wn},this.saveConfig(),this.notifyListeners()}subscribe(e){return this.listeners.push(e),()=>{this.listeners=this.listeners.filter(t=>t!==e)}}exportConfig(){return JSON.stringify(this.config,null,2)}importConfig(e){try{const t=JSON.parse(e);return this.validateConfig(t)?(this.config=t,this.saveConfig(),this.notifyListeners(),!0):!1}catch(t){return at.error("Failed to import configuration:",t),!1}}loadConfig(){try{if(typeof window>"u"||typeof localStorage>"u")return{...wn};const e=localStorage.getItem(this.storageKey);if(e){const t=JSON.parse(e);if(this.validateConfig(t))return t}}catch(e){at.error("Failed to load analytics configuration:",e)}return{...wn}}saveConfig(){try{if(typeof window<"u"&&typeof localStorage<"u")try{localStorage.setItem(this.storageKey,JSON.stringify(this.config))}catch(e){try{localStorage.removeItem(this.storageKey)}catch{}at.error("Failed to save analytics configuration:",e)}}catch(e){at.error("Failed to save analytics configuration:",e)}}notifyListeners(){const e={...this.config};this.listeners.forEach(t=>t(e))}deepMerge(e,t){const s=JSON.parse(JSON.stringify(e)),o=(r,i)=>{Object.keys(i).forEach(a=>{const c=i[a],l=r[a];c!=null&&(typeof c=="object"&&!Array.isArray(c)&&l&&typeof l=="object"&&!Array.isArray(l)?o(l,c):r[a]=c)})};return o(s,t),s}validateConfig(e){if(!e||typeof e!="object")return!1;const t=e;return typeof t.schemaVersion=="string"&&!!t.featureEngineering&&!!t.patternAnalysis&&!!t.enhancedAnalysis&&!!t.timeWindows&&!!t.alertSensitivity&&!!t.cache&&!!t.insights&&!!t.confidence&&!!t.healthScore&&!!t.analytics&&!!t.taxonomy}}const Ie=Po.getInstance(),Gt={...wn,POSITIVE_EMOTIONS:new Set(["happy","calm","excited","content","peaceful","cheerful","relaxed","optimistic"])};class gC{config;constructor(){this.config=Ie.getConfig(),Ie.subscribe(e=>{this.config=e})}analyzeEmotionPatterns(e,t){const s=t||this.config.timeWindows.defaultAnalysisDays;if(e.length<this.config.patternAnalysis.minDataPoints)return[];const o=[],r=Vo(new Date,s),i=e.filter(m=>m.timestamp>=r),a=this.config.patternAnalysis.highIntensityThreshold*(1/this.config.alertSensitivity.emotionIntensityMultiplier),c=this.config.patternAnalysis.concernFrequencyThreshold*(1/this.config.alertSensitivity.frequencyMultiplier),l=i.filter(m=>m.intensity>=a&&["anxious","frustrated","angry","overwhelmed","sad"].includes(m.emotion.toLowerCase())),u=Math.max(1,this.config.patternAnalysis.highIntensityThreshold-1),h=i.filter(m=>m.intensity>=u&&["anxious","frustrated","angry","overwhelmed","sad"].includes(m.emotion.toLowerCase()));l.length/i.length>c&&o.push({type:"emotion",pattern:"high-intensity-negative",confidence:Math.min(l.length/i.length,1),frequency:l.length,description:`High-intensity negative emotions detected in ${Math.round(l.length/i.length*100)}% of recent sessions`,recommendations:["Consider implementing calming strategies before intense activities","Monitor environmental triggers that may contribute to stress","Discuss coping mechanisms with student"],dataPoints:i.length,timeframe:`${s} days`});const d=i.reduce((m,g)=>(m[g.emotion.toLowerCase()]=(m[g.emotion.toLowerCase()]||0)+1,m),{});let p,f=0;for(const[m,g]of Object.entries(d))g>f&&(f=g,p=[m,g]);return p&&p[1]/i.length>this.config.patternAnalysis.emotionConsistencyThreshold&&o.push({type:"emotion",pattern:"consistent-emotion",confidence:p[1]/i.length,frequency:p[1],description:`Consistent ${p[0]} emotion pattern detected`,recommendations:this.getEmotionRecommendations(p[0]),dataPoints:i.length,timeframe:`${s} days`}),l.length===0&&h.length/i.length>this.config.patternAnalysis.moderateNegativeThreshold&&o.push({type:"emotion",pattern:"moderate-negative-trend",confidence:h.length/i.length,frequency:h.length,description:`Moderate negative emotions detected in ${Math.round(h.length/i.length*100)}% of recent sessions`,recommendations:["Monitor for potential stress escalation","Implement preventive calming strategies","Consider environmental adjustments"],dataPoints:i.length,timeframe:`${s} days`}),o}analyzeSensoryPatterns(e,t){const s=t||this.config.timeWindows.defaultAnalysisDays;if(e.length<this.config.patternAnalysis.minDataPoints)return[];const o=[],r=Vo(new Date,s),i=e.filter(g=>g.timestamp>=r),a=i.filter(g=>g.response.toLowerCase().includes("seeking")||g.response.toLowerCase().includes("craving")),c=i.filter(g=>g.response.toLowerCase().includes("avoiding")||g.response.toLowerCase().includes("covering")),l=1+this.config.patternAnalysis.concernFrequencyThreshold,u=this.config.patternAnalysis.concernFrequencyThreshold,h=c.length>0,d=a.length>0,p=Math.max(1,i.length),f=a.length/p,m=c.length/p;return h&&a.length/Math.max(1,c.length)>l?o.push({type:"sensory",pattern:"sensory-seeking",confidence:a.length/i.length,frequency:a.length,description:"Strong sensory-seeking pattern identified",recommendations:["Provide scheduled sensory breaks","Offer fidget tools and movement opportunities","Consider sensory-rich learning activities"],dataPoints:i.length,timeframe:`${s} days`}):d&&c.length/Math.max(1,a.length)>l?o.push({type:"sensory",pattern:"sensory-avoiding",confidence:c.length/i.length,frequency:c.length,description:"Strong sensory-avoiding pattern identified",recommendations:["Provide quiet, low-stimulation spaces","Use noise-canceling headphones when appropriate","Gradually introduce sensory experiences"],dataPoints:i.length,timeframe:`${s} days`}):!h&&d&&f>=u?o.push({type:"sensory",pattern:"sensory-seeking",confidence:f,frequency:a.length,description:"Prevalent sensory-seeking behavior observed",recommendations:["Provide scheduled sensory breaks","Offer fidget tools and movement opportunities","Consider sensory-rich learning activities"],dataPoints:i.length,timeframe:`${s} days`}):!d&&h&&m>=u&&o.push({type:"sensory",pattern:"sensory-avoiding",confidence:m,frequency:c.length,description:"Prevalent sensory-avoiding behavior observed",recommendations:["Provide quiet, low-stimulation spaces","Use noise-canceling headphones when appropriate","Gradually introduce sensory experiences"],dataPoints:i.length,timeframe:`${s} days`}),o}analyzeEnvironmentalCorrelations(e){if(e.length<this.config.patternAnalysis.minDataPoints)return[];const t=[],s=e.filter(a=>a.environmentalData?.roomConditions?.noiseLevel&&a.emotions.length>0).map(a=>({noise:a.environmentalData.roomConditions.noiseLevel,avgEmotionIntensity:a.emotions.reduce((c,l)=>c+l.intensity,0)/a.emotions.length}));if(s.length>=this.config.patternAnalysis.minDataPoints){const a=s.map(p=>p.noise).filter(p=>typeof p=="number"&&!isNaN(p)),c=s.map(p=>p.avgEmotionIntensity).filter(p=>typeof p=="number"&&!isNaN(p)),l=Math.min(a.length,c.length),u=a.slice(0,l),h=c.slice(0,l),d=this.calculateCorrelation(u,h);Math.abs(d)>this.config.patternAnalysis.correlationThreshold&&t.push({factor1:"Noise Level",factor2:"Emotion Intensity",correlation:d,significance:this.getSignificance(Math.abs(d)),description:d>0?"Higher noise levels correlate with more intense emotions":"Lower noise levels correlate with more intense emotions",recommendations:d>0?["Consider noise reduction strategies","Provide quiet spaces during intense activities"]:["Monitor for overstimulation in quiet environments"]})}const r=e.filter(a=>a.environmentalData?.roomConditions?.lighting&&a.emotions.length>0).map(a=>({lighting:a.environmentalData.roomConditions.lighting,positiveEmotions:a.emotions.filter(c=>(this.config.taxonomy?.positiveEmotions||[]).includes(c.emotion.toLowerCase())).length/a.emotions.length})).reduce((a,c)=>{const l=String(c.lighting??"unknown");return a[l]||(a[l]=[]),a[l].push(c.positiveEmotions),a},{}),i=Object.entries(r).map(([a,c])=>{const l=(c||[]).filter(d=>typeof d=="number"&&!isNaN(d)),u=l.length,h=u>0?l.reduce((d,p)=>d+p,0)/u:0;return{lighting:a,average:h,count:u}}).filter(a=>a.count>=this.config.patternAnalysis.minDataPoints).sort((a,c)=>c.average-a.average);if(i.length>1){const a=i[0],c=i[i.length-1];a.average-c.average>this.config.patternAnalysis.concernFrequencyThreshold&&t.push({factor1:"Lighting Conditions",factor2:"Positive Emotions",correlation:.5,significance:"moderate",description:`${a.lighting} lighting shows highest positive emotion rates (${Math.round(a.average*100)}%)`,recommendations:[`Optimize for ${a.lighting} lighting when possible`,`Minimize exposure to ${c.lighting} lighting during challenging activities`]})}return t}generateTriggerAlerts(e,t,s,o){const r=[],i=Vo(new Date,this.config.timeWindows.recentDataDays),a=e.filter(p=>p.timestamp>=i),c=s.filter(p=>p.timestamp>=i),l=this.config.patternAnalysis.highIntensityThreshold*(1/this.config.alertSensitivity.emotionIntensityMultiplier),u=a.filter(p=>p.intensity>=l&&["anxious","frustrated","overwhelmed","angry"].includes(p.emotion.toLowerCase()));u.length>=this.config.patternAnalysis.minDataPoints&&r.push({id:globalThis?.crypto?.randomUUID?.()||`alert-${Math.random().toString(36).slice(2)}-${Date.now()}`,type:"concern",severity:"high",title:"High Stress Pattern Detected",description:`${u.length} high-intensity stress responses recorded in the past ${this.config.timeWindows.recentDataDays} days`,recommendations:["Schedule a check-in with the student","Review current stressors and triggers","Implement additional calming strategies","Consider environmental modifications"],timestamp:new Date,studentId:o,dataPoints:a.length});const h=a.filter(p=>(this.config.taxonomy?.positiveEmotions||[]).includes(p.emotion.toLowerCase())&&p.intensity>=this.config.patternAnalysis.highIntensityThreshold);return h.length>=this.config.patternAnalysis.minDataPoints&&a.length>=this.config.patternAnalysis.minDataPoints&&r.push({id:globalThis?.crypto?.randomUUID?.()||`alert-${Math.random().toString(36).slice(2)}-${Date.now()}`,type:"improvement",severity:"low",title:"Positive Progress Noted",description:`Strong positive emotional responses observed in ${Math.round(h.length/a.length*100)}% of recent sessions`,recommendations:["Continue current successful strategies","Document what is working well","Consider sharing success with student and family"],timestamp:new Date,studentId:o,dataPoints:a.length}),this.analyzeEnvironmentalCorrelations(c).forEach(p=>{p.significance==="high"&&Math.abs(p.correlation)>this.config.patternAnalysis.correlationThreshold*2&&r.push({id:globalThis?.crypto?.randomUUID?.()||`alert-${Math.random().toString(36).slice(2)}-${Date.now()}`,type:"pattern",severity:"medium",title:"Environmental Pattern Identified",description:p.description,recommendations:p.recommendations||[],timestamp:new Date,studentId:o,dataPoints:c.length})}),r}calculateCorrelation(e,t){const s=e.length;if(s===0||s!==t.length)return 0;const o=e.reduce((h,d)=>h+d,0),r=t.reduce((h,d)=>h+d,0),i=e.map((h,d)=>h*t[d]).reduce((h,d)=>h+d,0),a=e.map(h=>h*h).reduce((h,d)=>h+d,0),c=t.map(h=>h*h).reduce((h,d)=>h+d,0),l=s*i-o*r,u=Math.sqrt((s*a-o*o)*(s*c-r*r));return u===0?0:l/u}getSignificance(e){const t=this.config.patternAnalysis.correlationThreshold,s=this.config.patternAnalysis.correlationThreshold*2;return e<t?"low":e<s?"moderate":"high"}getEmotionRecommendations(e){return{anxious:["Introduce mindfulness and breathing exercises","Create predictable routines and schedules","Provide advance notice of changes"],frustrated:["Break tasks into smaller, manageable steps","Offer choice and control opportunities","Teach problem-solving strategies"],happy:["Continue activities that promote positive engagement","Document successful strategies for future use","Build on current strengths"],calm:["Maintain current supportive environment","Use as a baseline for comparison","Gradually introduce new challenges"]}[e.toLowerCase()]||["Monitor patterns and adjust strategies as needed","Consult with support team for specialized approaches"]}}const ka=new gC;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xC=1e-7,yC=1e-4;class gg{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class bh{refCount(e){return Ut("refCount")}incRef(e){return Ut("incRef")}timerAvailable(){return!0}time(e){return Ut("time")}read(e){return Ut("read")}readSync(e){return Ut("readSync")}readToGPU(e,t){return Ut("readToGPU")}numDataIds(){return Ut("numDataIds")}disposeData(e,t){return Ut("disposeData")}write(e,t,s){return Ut("write")}move(e,t,s,o,r){return Ut("move")}createTensorFromGPUData(e,t,s){return Ut("createTensorFromGPUData")}memory(){return Ut("memory")}floatPrecision(){return Ut("floatPrecision")}epsilon(){return this.floatPrecision()===32?xC:yC}dispose(){return Ut("dispose")}}function Ut(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bC(n){let e=n.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,Oo(n,e,t)}function oo(n,e,t){return Math.max(n,Math.min(e,t))}function wh(n){return n%2===0?n:n+1}function Oo(n,e,t){const s=n[e];n[e]=n[t],n[t]=s}function wC(n){let e=0;for(let t=0;t<n.length;t++)e+=n[t];return e}function k(n,e){if(!n)throw new Error(typeof e=="string"?e:e())}function vh(n,e,t=""){k(Re(n,e),()=>t+` Shapes ${n} and ${e} must match`)}function Ch(n){k(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function j(n){if(n.length===0)return 1;let e=n[0];for(let t=1;t<n.length;t++)e*=n[t];return e}function Re(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==e[t])return!1;return!0}function Xo(n){return n%1===0}function Ru(n){const e=Math.ceil(Math.sqrt(n));return[e,Math.ceil(n/e)]}function Wo(n,e){return e<=n.length?n:n+" ".repeat(e-n.length)}function ff(n,e=o=>0,t,s){return new Promise((o,r)=>{let i=0;const a=()=>{if(n()){o();return}i++;const c=e(i);if(t!=null&&i>=t){r();return}s!=null?s(a,c):setTimeout(a,c)};a()})}function xg(n,e){let t=1,s=-1;for(let r=0;r<n.length;++r)if(n[r]>=0)t*=n[r];else if(n[r]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${r}`);s=r}else if(n[r]<0)throw Error(`Shapes can not be < 0. Found ${n[r]} at dim ${r}`);if(s===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${n}`);return n}if(t===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);const o=n.slice();return o[s]=e/t,o}function ve(n,e){const t=e.length;return n=n==null?e.map((s,o)=>o):[].concat(n),k(n.every(s=>s>=-t&&s<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${n}`),k(n.every(s=>Xo(s)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(s=>s<0?t+s:s)}function As(n,e){const t=[],s=[],o=e!=null&&Array.isArray(e)&&e.length===0,r=e==null||o?null:ve(e,n).sort();let i=0;for(let a=0;a<n.length;++a){if(r!=null){if(r[i]===a&&n[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${n[a]}' is not 1`);(r[i]==null||r[i]>a)&&n[a]===1&&(t.push(n[a]),s.push(a)),r[i]<=a&&i++}n[a]!==1&&(t.push(n[a]),s.push(a))}return{newShape:t,keptDims:s}}function $t(n,e){return Ze(n,e)}function Ze(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else if(n==="string")t=new Array(e);else throw new Error(`Unknown data type ${n}`);return t}function vC(n,e){for(let t=0;t<n.length;t++){const s=n[t];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${e} being uploaded contains ${s}.`)}}function CC(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function yg(n,e){return!(e==="complex64"||e==="float32"&&n!=="complex64"||e==="int32"&&n!=="float32"&&n!=="complex64"||e==="bool"&&n==="bool")}function Ja(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function IC(n){if(n==null)return 0;let e=0;return n.forEach(t=>e+=t.length),e}function ri(n){return typeof n=="string"||n instanceof String}function $C(n){return typeof n=="boolean"}function Du(n){return typeof n=="number"}function lr(n){return Array.isArray(n)?lr(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":Du(n)?"float32":ri(n)?"string":$C(n)?"bool":"float32"}function Au(n){return!!(n&&n.constructor&&n.call&&n.apply)}function Fu(n,e){for(let t=e;t<n;++t)if(n%t===0)return t;return n}function ce(n){const e=n.length;if(e<2)return[];const t=new Array(e-1);t[e-2]=n[e-1];for(let s=e-3;s>=0;--s)t[s]=t[s+1]*n[s+1];return t}function bg(n,e,t,s=!1){const o=new Array;if(e.length===1){const r=e[0]*(s?2:1);for(let i=0;i<r;i++)o[i]=t[n+i]}else{const r=e[0],i=e.slice(1),a=i.reduce((c,l)=>c*l)*(s?2:1);for(let c=0;c<r;c++)o[c]=bg(n+c*a,i,t,s)}return o}function $n(n,e,t=!1){if(n.length===0)return e[0];const s=n.reduce((o,r)=>o*r)*(t?2:1);if(s===0)return[];if(s!==e.length)throw new Error(`[${n}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return bg(0,n,e,t)}function SC(n,e){if(Array.isArray(n))return n;if(e==="float32")return n instanceof Float32Array?n:new Float32Array(n);if(e==="int32")return n instanceof Int32Array?n:new Int32Array(n);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(n));throw new Error(`Unknown dtype ${e}`)}function Ih(n,e){const t=St(n,e);for(let s=0;s<t.length;s++)t[s]=1;return t}function St(n,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${e}`)}function wg(n,e){const t=n.reduce((s,o)=>s*o,1);if(e==null||e==="float32")return $n(n,new Float32Array(t));if(e==="int32")return $n(n,new Int32Array(t));if(e==="bool")return $n(n,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function os(n){n.forEach(e=>{k(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function Ln(n,e,t){if(e===0)return 0;if(e===1)return n[0];let s=n[n.length-1];for(let o=0;o<n.length-1;++o)s+=t[o]*n[o];return s}function ur(n,e,t){if(e===0)return[];if(e===1)return[n];const s=new Array(e);for(let o=0;o<s.length-1;++o)s[o]=Math.floor(n/t[o]),n-=s[o]*t[o];return s[s.length-1]=n,s}function $h(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mf="tfjsflags";class kC{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=TC,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(W().getBool("IS_TEST")||W().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,s){if(this.flagRegistry[e]={evaluationFn:t,setHook:s},this.urlFlags[e]!=null){const o=this.urlFlags[e];W().getBool("IS_TEST")||W().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${o}.`),this.set(e,o)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if($h(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);mf in e&&e[mf].split(",").forEach(s=>{const[o,r]=s.split(":");this.urlFlags[o]=EC(o,r)})}}function TC(n){const e={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...s)=>(NC(e,s[0],s[1]),s.join("="))),e}function NC(n,e,t){n[decodeURIComponent(e)]=decodeURIComponent(t||"")}function EC(n,e){const t=e.toLowerCase();return t==="true"||t==="false"?t==="true":`${+t}`===t?+t:e}function W(){return vg}let vg=null;function RC(n){vg=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let au;function Cg(){if(au==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");au=n}return au}function DC(){const n=Cg();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function Sh(n,e){const t=DC();if(t.has(n))return t.get(n);{const s=e();return t.set(n,s),t.get(n)}}const Ec="Abs",ii="Acos",ai="Acosh",hr="Add",kh="AddN",Th="All",Nh="Any",Rc="ArgMax",Dc="ArgMin",ci="Asin",li="Asinh",ui="Atan",hi="Atanh",di="Atan2",Ac="AvgPool",Eh="AvgPoolGrad",Fc="AvgPool3D",Rh="AvgPool3DGrad",Oc="BatchMatMul",Mc="BatchToSpaceND",Dh="Bincount",Ah="BitwiseAnd",AC="BroadcastTo",Ig="BroadcastArgs",pi="Cast",fi="Ceil",mi="ClipByValue",Fh="Complex",_c="ComplexAbs",Lc="Concat",Pc="Conv2D",Oh="Conv2DBackpropFilter",zc="Conv2DBackpropInput",Bc="Conv3D",Mh="Conv3DBackpropFilterV2",_h="Conv3DBackpropInputV2",gi="Cos",xi="Cosh",Lh="Cumprod",Vc="Cumsum",Ph="CropAndResize",zh="DenseBincount",Bh="DepthToSpace",Wc="DepthwiseConv2dNative",Vh="DepthwiseConv2dNativeBackpropFilter",Wh="DepthwiseConv2dNativeBackpropInput",$g="Diag",Uc="Dilation2D",Ou="Dilation2DBackpropInput",Mu="Dilation2DBackpropFilter",FC="Draw",yi="RealDiv",Uh="Einsum",bi="Elu",Gh="EluGrad",wi="Erf",Gc="Equal",vi="Exp",Hc="ExpandDims",Ci="Expm1",Hh="FFT",qh="Fill",jh="FlipLeftRight",Ii="Floor",$i="FloorDiv",qc="FusedBatchNorm",jc="GatherV2",Sg="GatherNd",Kc="Greater",Si="GreaterEqual",ki="Identity",Kh="IFFT",Xh="Imag",Ti="IsFinite",Ni="IsInf",Ei="IsNan",Xc="LeakyRelu",Yc="Less",Jc="LessEqual",kg="LinSpace",Ri="Log",Di="Log1p",Zc="LogicalAnd",Qc="LogicalNot",el="LogicalOr",OC="LogSoftmax",tl="LRN",Yh="LRNGrad",nl="Max",Ai="Maximum",sl="MaxPool",Jh="MaxPoolGrad",ol="MaxPool3D",Zh="MaxPool3DGrad",Tg="MaxPoolWithArgmax",rl="Mean",il="Min",Fi="Minimum",al="MirrorPad",Oi="Mod",Ng="Multinomial",Mi="Multiply",cl="Neg",ll="NotEqual",Qh="NonMaxSuppressionV3",ed="NonMaxSuppressionV4",td="NonMaxSuppressionV5",ul="OnesLike",hl="OneHot",dl="Pack",pl="PadV2",_i="Pow",fl="Prelu",ml="Prod",Eg="RaggedGather",Rg="RaggedRange",Dg="RaggedTensorToTensor",nd="Range",sd="Real",Li="Reciprocal",Pi="Relu",gl="Reshape",xl="ResizeNearestNeighbor",od="ResizeNearestNeighborGrad",yl="ResizeBilinear",rd="ResizeBilinearGrad",zi="Relu6",bl="Reverse",Bi="Round",Vi="Rsqrt",Ag="ScatterNd",Fg="TensorScatterUpdate",Og="SearchSorted",wl="Select",Wi="Selu",vl="Slice",Ui="Sin",Gi="Sinh",Hi="Sign",qi="Sigmoid",ji="Softplus",Ki="Sqrt",Cl="Sum",Il="SpaceToBatchND",$l="SplitV",Sl="Softmax",Mg="SparseFillEmptyRows",_g="SparseReshape",Lg="SparseSegmentMean",Pg="SparseSegmentSum",zg="SparseToDense",Xi="SquaredDifference",id="Square",ad="StaticRegexReplace",cd="StridedSlice",Bg="StringNGrams",Vg="StringSplit",Wg="StringToHashBucketFast",Yi="Sub",Ji="Tan",Zi="Tanh",Qi="Tile",ld="TopK",ud="Transform",Uo="Transpose",hd="Unique",kl="Unpack",Tl="UnsortedSegmentSum",Nl="ZerosLike",ea="Step",MC="FromPixels",dd="RotateWithOffset",Za="_FusedMatMul",Qa="FusedConv2D",Ug="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zt(...n){W().getBool("IS_TEST")||W().getBool("PROD")||console.warn(...n)}function _C(...n){W().getBool("IS_TEST")||W().getBool("PROD")||console.log(...n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ec=Sh("kernelRegistry",()=>new Map),_u=Sh("gradRegistry",()=>new Map);function gf(n,e){const t=Hg(n,e);return ec.get(t)}function xf(n){return _u.get(n)}function yf(n){const e=ec.entries(),t=[];for(;;){const{done:s,value:o}=e.next();if(s)break;const[r,i]=o,[a]=r.split("_");a===n&&t.push(i)}return t}function Gg(n){const{kernelName:e,backendName:t}=n,s=Hg(e,t);ec.has(s)&&Zt(`The kernel '${e}' for backend '${t}' is already registered`),ec.set(s,n)}function LC(n){const{kernelName:e}=n;_u.has(e)&&W().getBool("DEBUG")&&Zt(`Overriding the gradient for '${e}'`),_u.set(e,n)}function Hg(n,e){return`${e}_${n}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qg(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}function PC(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}function zC(n){if(Object.prototype.hasOwnProperty.call(n,"__esModule"))return n;var e=n.default;if(typeof e=="function"){var t=function s(){var o=!1;try{o=this instanceof s}catch{}return o?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};t.prototype=e.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(n).forEach(function(s){var o=Object.getOwnPropertyDescriptor(n,s);Object.defineProperty(t,s,o.get?o:{enumerable:!0,get:function(){return n[s]}})}),t}var cu,bf;function BC(){if(bf)return cu;bf=1,cu=e;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function e(S,C,R){this.low=S|0,this.high=C|0,this.unsigned=!!R}e.prototype.__isLong__,Object.defineProperty(e.prototype,"__isLong__",{value:!0});function t(S){return(S&&S.__isLong__)===!0}e.isLong=t;var s={},o={};function r(S,C){var R,F,z;return C?(S>>>=0,(z=0<=S&&S<256)&&(F=o[S],F)?F:(R=a(S,(S|0)<0?-1:0,!0),z&&(o[S]=R),R)):(S|=0,(z=-128<=S&&S<128)&&(F=s[S],F)?F:(R=a(S,S<0?-1:0,!1),z&&(s[S]=R),R))}e.fromInt=r;function i(S,C){if(isNaN(S))return C?y:x;if(C){if(S<0)return y;if(S>=f)return T}else{if(S<=-m)return N;if(S+1>=m)return I}return S<0?i(-S,C).neg():a(S%p|0,S/p|0,C)}e.fromNumber=i;function a(S,C,R){return new e(S,C,R)}e.fromBits=a;var c=Math.pow;function l(S,C,R){if(S.length===0)throw Error("empty string");if(S==="NaN"||S==="Infinity"||S==="+Infinity"||S==="-Infinity")return x;if(typeof C=="number"?(R=C,C=!1):C=!!C,R=R||10,R<2||36<R)throw RangeError("radix");var F;if((F=S.indexOf("-"))>0)throw Error("interior hyphen");if(F===0)return l(S.substring(1),C,R).neg();for(var z=i(c(R,8)),M=x,B=0;B<S.length;B+=8){var H=Math.min(8,S.length-B),P=parseInt(S.substring(B,B+H),R);if(H<8){var U=i(c(R,H));M=M.mul(U).add(i(P))}else M=M.mul(z),M=M.add(i(P))}return M.unsigned=C,M}e.fromString=l;function u(S,C){return typeof S=="number"?i(S,C):typeof S=="string"?l(S,C):a(S.low,S.high,typeof C=="boolean"?C:S.unsigned)}e.fromValue=u;var h=65536,d=1<<24,p=h*h,f=p*p,m=f/2,g=r(d),x=r(0);e.ZERO=x;var y=r(0,!0);e.UZERO=y;var w=r(1);e.ONE=w;var b=r(1,!0);e.UONE=b;var v=r(-1);e.NEG_ONE=v;var I=a(-1,2147483647,!1);e.MAX_VALUE=I;var T=a(-1,-1,!0);e.MAX_UNSIGNED_VALUE=T;var N=a(0,-2147483648,!1);e.MIN_VALUE=N;var $=e.prototype;return $.toInt=function(){return this.unsigned?this.low>>>0:this.low},$.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},$.toString=function(C){if(C=C||10,C<2||36<C)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(N)){var R=i(C),F=this.div(R),z=F.mul(R).sub(this);return F.toString(C)+z.toInt().toString(C)}else return"-"+this.neg().toString(C);for(var M=i(c(C,6),this.unsigned),B=this,H="";;){var P=B.div(M),U=B.sub(P.mul(M)).toInt()>>>0,G=U.toString(C);if(B=P,B.isZero())return G+H;for(;G.length<6;)G="0"+G;H=""+G+H}},$.getHighBits=function(){return this.high},$.getHighBitsUnsigned=function(){return this.high>>>0},$.getLowBits=function(){return this.low},$.getLowBitsUnsigned=function(){return this.low>>>0},$.getNumBitsAbs=function(){if(this.isNegative())return this.eq(N)?64:this.neg().getNumBitsAbs();for(var C=this.high!=0?this.high:this.low,R=31;R>0&&(C&1<<R)==0;R--);return this.high!=0?R+33:R+1},$.isZero=function(){return this.high===0&&this.low===0},$.eqz=$.isZero,$.isNegative=function(){return!this.unsigned&&this.high<0},$.isPositive=function(){return this.unsigned||this.high>=0},$.isOdd=function(){return(this.low&1)===1},$.isEven=function(){return(this.low&1)===0},$.equals=function(C){return t(C)||(C=u(C)),this.unsigned!==C.unsigned&&this.high>>>31===1&&C.high>>>31===1?!1:this.high===C.high&&this.low===C.low},$.eq=$.equals,$.notEquals=function(C){return!this.eq(C)},$.neq=$.notEquals,$.ne=$.notEquals,$.lessThan=function(C){return this.comp(C)<0},$.lt=$.lessThan,$.lessThanOrEqual=function(C){return this.comp(C)<=0},$.lte=$.lessThanOrEqual,$.le=$.lessThanOrEqual,$.greaterThan=function(C){return this.comp(C)>0},$.gt=$.greaterThan,$.greaterThanOrEqual=function(C){return this.comp(C)>=0},$.gte=$.greaterThanOrEqual,$.ge=$.greaterThanOrEqual,$.compare=function(C){if(t(C)||(C=u(C)),this.eq(C))return 0;var R=this.isNegative(),F=C.isNegative();return R&&!F?-1:!R&&F?1:this.unsigned?C.high>>>0>this.high>>>0||C.high===this.high&&C.low>>>0>this.low>>>0?-1:1:this.sub(C).isNegative()?-1:1},$.comp=$.compare,$.negate=function(){return!this.unsigned&&this.eq(N)?N:this.not().add(w)},$.neg=$.negate,$.add=function(C){t(C)||(C=u(C));var R=this.high>>>16,F=this.high&65535,z=this.low>>>16,M=this.low&65535,B=C.high>>>16,H=C.high&65535,P=C.low>>>16,U=C.low&65535,G=0,K=0,Y=0,X=0;return X+=M+U,Y+=X>>>16,X&=65535,Y+=z+P,K+=Y>>>16,Y&=65535,K+=F+H,G+=K>>>16,K&=65535,G+=R+B,G&=65535,a(Y<<16|X,G<<16|K,this.unsigned)},$.subtract=function(C){return t(C)||(C=u(C)),this.add(C.neg())},$.sub=$.subtract,$.multiply=function(C){if(this.isZero())return x;if(t(C)||(C=u(C)),n){var R=n.mul(this.low,this.high,C.low,C.high);return a(R,n.get_high(),this.unsigned)}if(C.isZero())return x;if(this.eq(N))return C.isOdd()?N:x;if(C.eq(N))return this.isOdd()?N:x;if(this.isNegative())return C.isNegative()?this.neg().mul(C.neg()):this.neg().mul(C).neg();if(C.isNegative())return this.mul(C.neg()).neg();if(this.lt(g)&&C.lt(g))return i(this.toNumber()*C.toNumber(),this.unsigned);var F=this.high>>>16,z=this.high&65535,M=this.low>>>16,B=this.low&65535,H=C.high>>>16,P=C.high&65535,U=C.low>>>16,G=C.low&65535,K=0,Y=0,X=0,ee=0;return ee+=B*G,X+=ee>>>16,ee&=65535,X+=M*G,Y+=X>>>16,X&=65535,X+=B*U,Y+=X>>>16,X&=65535,Y+=z*G,K+=Y>>>16,Y&=65535,Y+=M*U,K+=Y>>>16,Y&=65535,Y+=B*P,K+=Y>>>16,Y&=65535,K+=F*G+z*U+M*P+B*H,K&=65535,a(X<<16|ee,K<<16|Y,this.unsigned)},$.mul=$.multiply,$.divide=function(C){if(t(C)||(C=u(C)),C.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&C.low===-1&&C.high===-1)return this;var R=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,C.low,C.high);return a(R,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?y:x;var F,z,M;if(this.unsigned){if(C.unsigned||(C=C.toUnsigned()),C.gt(this))return y;if(C.gt(this.shru(1)))return b;M=y}else{if(this.eq(N)){if(C.eq(w)||C.eq(v))return N;if(C.eq(N))return w;var B=this.shr(1);return F=B.div(C).shl(1),F.eq(x)?C.isNegative()?w:v:(z=this.sub(C.mul(F)),M=F.add(z.div(C)),M)}else if(C.eq(N))return this.unsigned?y:x;if(this.isNegative())return C.isNegative()?this.neg().div(C.neg()):this.neg().div(C).neg();if(C.isNegative())return this.div(C.neg()).neg();M=x}for(z=this;z.gte(C);){F=Math.max(1,Math.floor(z.toNumber()/C.toNumber()));for(var H=Math.ceil(Math.log(F)/Math.LN2),P=H<=48?1:c(2,H-48),U=i(F),G=U.mul(C);G.isNegative()||G.gt(z);)F-=P,U=i(F,this.unsigned),G=U.mul(C);U.isZero()&&(U=w),M=M.add(U),z=z.sub(G)}return M},$.div=$.divide,$.modulo=function(C){if(t(C)||(C=u(C)),n){var R=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,C.low,C.high);return a(R,n.get_high(),this.unsigned)}return this.sub(this.div(C).mul(C))},$.mod=$.modulo,$.rem=$.modulo,$.not=function(){return a(~this.low,~this.high,this.unsigned)},$.and=function(C){return t(C)||(C=u(C)),a(this.low&C.low,this.high&C.high,this.unsigned)},$.or=function(C){return t(C)||(C=u(C)),a(this.low|C.low,this.high|C.high,this.unsigned)},$.xor=function(C){return t(C)||(C=u(C)),a(this.low^C.low,this.high^C.high,this.unsigned)},$.shiftLeft=function(C){return t(C)&&(C=C.toInt()),(C&=63)===0?this:C<32?a(this.low<<C,this.high<<C|this.low>>>32-C,this.unsigned):a(0,this.low<<C-32,this.unsigned)},$.shl=$.shiftLeft,$.shiftRight=function(C){return t(C)&&(C=C.toInt()),(C&=63)===0?this:C<32?a(this.low>>>C|this.high<<32-C,this.high>>C,this.unsigned):a(this.high>>C-32,this.high>=0?0:-1,this.unsigned)},$.shr=$.shiftRight,$.shiftRightUnsigned=function(C){if(t(C)&&(C=C.toInt()),C&=63,C===0)return this;var R=this.high;if(C<32){var F=this.low;return a(F>>>C|R<<32-C,R>>>C,this.unsigned)}else return C===32?a(R,0,this.unsigned):a(R>>>C-32,0,this.unsigned)},$.shru=$.shiftRightUnsigned,$.shr_u=$.shiftRightUnsigned,$.toSigned=function(){return this.unsigned?a(this.low,this.high,!1):this},$.toUnsigned=function(){return this.unsigned?this:a(this.low,this.high,!0)},$.toBytes=function(C){return C?this.toBytesLE():this.toBytesBE()},$.toBytesLE=function(){var C=this.high,R=this.low;return[R&255,R>>>8&255,R>>>16&255,R>>>24,C&255,C>>>8&255,C>>>16&255,C>>>24]},$.toBytesBE=function(){var C=this.high,R=this.low;return[C>>>24,C>>>16&255,C>>>8&255,C&255,R>>>24,R>>>16&255,R>>>8&255,R&255]},e.fromBytes=function(C,R,F){return F?e.fromBytesLE(C,R):e.fromBytesBE(C,R)},e.fromBytesLE=function(C,R){return new e(C[0]|C[1]<<8|C[2]<<16|C[3]<<24,C[4]|C[5]<<8|C[6]<<16|C[7]<<24,R)},e.fromBytesBE=function(C,R){return new e(C[4]<<24|C[5]<<16|C[6]<<8|C[7],C[0]<<24|C[1]<<16|C[2]<<8|C[3],R)},cu}var jg=BC(),Kg=PC(jg),VC=rv({__proto__:null,default:Kg},[jg]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xs=Kg||VC;function El(n){return Xs.fromString(n,!0,16)}const Xg=El("c3a5c85c97cb3127"),js=El("b492b66fbe98f273"),Dt=El("9ae16a3b2f90404f");function Lu(n){return n.xor(n.shru(47))}function Yg(n,e,t){const s=n.slice(e,e+t);return Xs.fromBytes(Array.from(s),!0,!0)}function Be(n,e){return Yg(n,e,8)}function wf(n,e){return Yg(n,e,4)}function mt(n,e){return e===0?n:n.shru(e).or(n.shl(64-e))}function vs(n,e,t=El("9ddfea08eb382d69")){let s=n.xor(e).mul(t);s=s.xor(s.shru(47));let o=e.xor(s).mul(t);return o=o.xor(o.shru(47)),o=o.mul(t),o}function WC(n,e,t,s,o,r){o=o.add(n),r=mt(r.add(o).add(s),21);const i=o;return o=o.add(e),o=o.add(t),r=r.add(mt(o,44)),[o.add(s),r.add(i)]}function Ta(n,e,t,s){return WC(Be(n,e),Be(n,e+8),Be(n,e+16),Be(n,e+24),t,s)}function UC(n,e=n.length){if(e>=8){const t=Dt.add(e*2),s=Be(n,0).add(Dt),o=Be(n,e-8),r=mt(o,37).mul(t).add(s),i=mt(s,25).add(o).mul(t);return vs(r,i,t)}if(e>=4){const t=Dt.add(e*2),s=wf(n,0);return vs(s.shl(3).add(e),wf(n,e-4),t)}if(e>0){const t=n[0],s=n[e>>1],o=n[e-1],r=t+(s<<8),i=e+(o<<2);return Lu(Dt.mul(r).xor(Xg.mul(i))).mul(Dt)}return Dt}function GC(n,e=n.length){const t=Dt.add(e*2),s=Be(n,0).mul(js),o=Be(n,8),r=Be(n,e-8).mul(t),i=Be(n,e-16).mul(Dt);return vs(mt(s.add(o),43).add(mt(r,30)).add(i),s.add(mt(o.add(Dt),18)).add(r),t)}function HC(n,e=n.length){const t=Dt.add(e*2),s=Be(n,0).mul(Dt),o=Be(n,8),r=Be(n,e-8).mul(t),i=Be(n,e-16).mul(Dt),a=mt(s.add(o),43).add(mt(r,30)).add(i),c=vs(a,s.add(mt(o.add(Dt),18)).add(r),t),l=Be(n,16).mul(t),u=Be(n,24),h=a.add(Be(n,e-32)).mul(t),d=c.add(Be(n,e-24)).mul(t);return vs(mt(l.add(u),43).add(mt(h,30)).add(d),l.add(mt(u.add(s),18)).add(h),t)}function qC(n,e=n.length){const t=Xs.fromNumber(81,!0);if(e<=32)return e<=16?UC(n,e):GC(n,e);if(e<=64)return HC(n,e);let s=t,o=t.mul(js).add(113),r=Lu(o.mul(Dt).add(113)).mul(Dt),i=[Xs.UZERO,Xs.UZERO],a=[Xs.UZERO,Xs.UZERO];s=s.mul(Dt).add(Be(n,0));let c=0;const l=(e-1>>6)*64,u=l+(e-1&63)-63;do s=mt(s.add(o).add(i[0]).add(Be(n,c+8)),37).mul(js),o=mt(o.add(i[1]).add(Be(n,c+48)),42).mul(js),s=s.xor(a[1]),o=o.add(i[0]).add(Be(n,c+40)),r=mt(r.add(a[0]),33).mul(js),i=Ta(n,c,i[1].mul(js),s.add(a[0])),a=Ta(n,c+32,r.add(a[1]),o.add(Be(n,c+16))),[r,s]=[s,r],c+=64;while(c!==l);const h=js.add(r.and(255).shl(1));return c=u,a[0]=a[0].add(e-1&63),i[0]=i[0].add(a[0]),a[0]=a[0].add(i[0]),s=mt(s.add(o).add(i[0]).add(Be(n,c+8)),37).mul(h),o=mt(o.add(i[1]).add(Be(n,c+48)),42).mul(h),s=s.xor(a[1].mul(9)),o=o.add(i[0].mul(9).add(Be(n,c+40))),r=mt(r.add(a[0]),33).mul(h),i=Ta(n,c,i[1].mul(h),s.add(a[0])),a=Ta(n,c+32,r.add(a[1]),o.add(Be(n,c+16))),[r,s]=[s,r],vs(vs(i[0],a[0],h).add(Lu(o).mul(Xg)).add(r),vs(i[1],a[1],h).add(s),h)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fs(n,e){return e==="string"?Cs(n):wo([n],e)}function jC(n,e){return n instanceof Float32Array&&e==="float32"||n instanceof Int32Array&&e==="int32"||n instanceof Uint8Array&&e==="bool"}function wo(n,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=ro(n)),W().getBool("DEBUG")&&vC(n,e),jC(n,e))return n;if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool"){const t=new Uint8Array(n.length);for(let s=0;s<t.length;++s)Math.round(n[s])!==0&&(t[s]=1);return t}else throw new Error(`Unknown data type ${e}`)}function _t(){return W().platform.now()}function Cs(n,e="utf-8"){return e=e||"utf-8",W().platform.encode(n,e)}function ks(n,e="utf-8"){return e=e||"utf-8",W().platform.decode(n,e)}function dn(n){return W().platform.isTypedArray!=null?W().platform.isTypedArray(n):qg(n)}function ro(n,e=[],t=!1){if(e==null&&(e=[]),typeof n=="boolean"||typeof n=="number"||typeof n=="string"||$h(n)||n==null||dn(n)&&t)e.push(n);else if(Array.isArray(n)||dn(n))for(let s=0;s<n.length;++s)ro(n[s],e,t);else{let s=-1;for(const o of Object.keys(n))/^([1-9]+[0-9]*|0)$/.test(o)&&(s=Math.max(s,Number(o)));for(let o=0;o<=s;o++)ro(n[o],e,t)}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KC{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new YC)}profileKernel(e,t,s){let o;const r=()=>{o=s()};let i;const a=_t();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(r);else{r();for(const l of o)l.dataSync();i=Promise.resolve({kernelMs:_t()-a})}if(W().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let l=0;l<o.length;l++){const u=o[l];u.data().then(h=>{XC(h,u.dtype,e)})}return{kernelName:e,outputs:o,inputs:t,timeMs:i.then(l=>l.kernelMs),extraInfo:i.then(l=>l.getExtraProfileInfo!=null?l.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:s,timeMs:o,inputs:r,extraInfo:i}=e;s.forEach(a=>{Promise.all([a.data(),o,i]).then(c=>{this.logger.logKernelProfile(t,a,c[0],c[1],r,c[2])})})}}function XC(n,e,t){if(e!=="float32")return!1;for(let s=0;s<n.length;s++){const o=n[s];if(isNaN(o)||!isFinite(o))return console.warn(`Found ${o} in the result of '${t}'`),!0}return!1}class YC{logKernelProfile(e,t,s,o,r,i){const a=typeof o=="number"?Wo(`${o}ms`,9):o.error,c=Wo(e,25),l=t.rank,u=t.size,h=Wo(t.shape.toString(),14);let d="";for(const p in r){const f=r[p];if(f!=null){const m=f.shape||t.shape,g=m.length;d+=`${p}: ${g}D ${g>0?m:""} `}}console.log(`%c${c}	%c${a}	%c${l}D ${h}	%c${u}	%c${d}	%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JC(n,e,t){const s={},o={};for(let c=0;c<e.length;c++)s[e[c].id]=!0;for(let c=0;c<n.length;c++){const l=n[c],u=l.inputs;for(const h in u){const d=u[h];let p=!1;for(let f=0;f<e.length;f++)if(s[d.id]){l.outputs.forEach(m=>s[m.id]=!0),p=!0,o[l.id]=!0;break}if(p)break}}const r={};r[t.id]=!0;const i={};for(let c=n.length-1;c>=0;c--){const l=n[c],u=l.inputs;for(let h=0;h<l.outputs.length;h++)if(r[l.outputs[h].id]){for(const d in u)r[u[d].id]=!0,i[l.id]=!0;break}}const a=[];for(let c=0;c<n.length;c++){const l=n[c];if(o[l.id]&&i[l.id]){const u={};for(const d in l.inputs){const p=l.inputs[d];s[p.id]&&(u[d]=p)}const h=Object.assign({},l);h.inputs=u,h.outputs=l.outputs,a.push(h)}}return a}function ZC(n,e,t,s){for(let o=e.length-1;o>=0;o--){const r=e[o],i=[];if(r.outputs.forEach(c=>{const l=n[c.id];l!=null?i.push(l):i.push(null)}),r.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${r.kernelName}.`);const a=r.gradient(i);for(const c in r.inputs){if(!(c in a))throw new Error(`Cannot backprop through input ${c}. Available gradients found: ${Object.keys(a)}.`);const l=t(()=>a[c]());if(l.dtype!=="float32")throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input ${c} must have 'float32' dtype, but has '${l.dtype}'`);const u=r.inputs[c];if(!Re(l.shape,u.shape))throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input '${c}' has shape '${l.shape}', which does not match the shape of the input '${u.shape}'`);if(n[u.id]==null)n[u.id]=l;else{const h=n[u.id];n[u.id]=s(h,l),h.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vf=20,Nr=3,lu=7;function QC(n,e,t,s){const o=ce(e),r=eI(n,e,t,o),i=e.length,a=Va(n,e,t,o,r),c=["Tensor"];return s&&(c.push(`  dtype: ${t}`),c.push(`  rank: ${i}`),c.push(`  shape: [${e}]`),c.push("  values:")),c.push(a.map(l=>"    "+l).join(`
`)),c.join(`
`)}function eI(n,e,t,s){const o=j(e),r=s[s.length-1],i=new Array(r).fill(0),a=e.length,c=t==="complex64"?Lr(n):n;if(a>1)for(let l=0;l<o/r;l++){const u=l*r;for(let h=0;h<r;h++)i[h]=Math.max(i[h],_r(c[u+h],0,t).length)}return i}function _r(n,e,t){let s;return Array.isArray(n)?s=`${parseFloat(n[0].toFixed(lu))} + ${parseFloat(n[1].toFixed(lu))}j`:ri(n)?s=`'${n}'`:t==="bool"?s=Jg(n):s=parseFloat(n.toFixed(lu)).toString(),Wo(s,e)}function Jg(n){return n===0?"false":"true"}function Va(n,e,t,s,o,r=!0){const i=t==="complex64"?2:1,a=e[0],c=e.length;if(c===0){if(t==="complex64"){const m=Lr(n);return[_r(m[0],0,t)]}return t==="bool"?[Jg(n[0])]:[n[0].toString()]}if(c===1){if(a>vf){const g=Nr*i;let x=Array.from(n.slice(0,g)),y=Array.from(n.slice((a-Nr)*i,a*i));return t==="complex64"&&(x=Lr(x),y=Lr(y)),["["+x.map((w,b)=>_r(w,o[b],t)).join(", ")+", ..., "+y.map((w,b)=>_r(w,o[a-Nr+b],t)).join(", ")+"]"]}return["["+(t==="complex64"?Lr(n):Array.from(n)).map((g,x)=>_r(g,o[x],t)).join(", ")+"]"]}const l=e.slice(1),u=s.slice(1),h=s[0]*i,d=[];if(a>vf){for(let m=0;m<Nr;m++){const g=m*h,x=g+h;d.push(...Va(n.slice(g,x),l,t,u,o,!1))}d.push("...");for(let m=a-Nr;m<a;m++){const g=m*h,x=g+h;d.push(...Va(n.slice(g,x),l,t,u,o,m===a-1))}}else for(let m=0;m<a;m++){const g=m*h,x=g+h;d.push(...Va(n.slice(g,x),l,t,u,o,m===a-1))}const p=c===2?",":"";d[0]="["+(a>0?d[0]+p:"");for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+p;let f=`,
`;for(let m=2;m<c;m++)f+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(r?"":f),d}function Lr(n){const e=[];for(let t=0;t<n.length;t+=2)e.push([n[t],n[t+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wt{constructor(e,t,s){if(this.dtype=t,this.shape=e.slice(),this.size=j(e),s!=null){const o=s.length;k(o===this.size,()=>`Length of values '${o}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||Ze(t,this.size),this.strides=ce(e)}set(e,...t){t.length===0&&(t=[0]),k(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const s=this.locToIndex(t);this.values[s]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(const o of e){if(o<0||o>=this.shape[t]){const r=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(r)}t++}let s=e[e.length-1];for(let o=0;o<e.length-1;++o)s+=this.strides[o]*e[o];return this.values[s]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let s=0;s<e.length-1;++s)t+=this.strides[s]*e[s];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const t=new Array(this.shape.length);for(let s=0;s<t.length-1;++s)t[s]=Math.floor(e/this.strides[s]),e-=t[s]*this.strides[s];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return vn().makeTensor(this.values,this.shape,this.dtype)}}let vn=null,Mo=null;function tI(n){vn=n}function nI(n){Mo=n}class it{constructor(e,t,s,o){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=j(e),this.strides=ce(e),this.dataId=s,this.id=o,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Mo.buffer(this.shape,this.dtype,e)}bufferSync(){return Mo.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return $n(this.shape,e,this.dtype==="complex64")}arraySync(){return $n(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=vn().read(this.dataId);if(this.dtype==="string"){const t=await e;try{return t.map(s=>ks(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),vn().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=vn().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>ks(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await vn().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),vn().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Mo.print(this,e)}clone(){return this.throwIfDisposed(),Mo.clone(this)}toString(e=!1){const t=this.dataSync();return QC(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Mo.cast(this,e)}variable(e=!0,t,s){return this.throwIfDisposed(),vn().makeVariable(this,e,t,s)}}Object.defineProperty(it,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function q(){return Sh("Tensor",()=>it)}q();class tc extends it{constructor(e,t,s,o){super(e.shape,e.dtype,e.dataId,o),this.trainable=t,this.name=s}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Re(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);vn().disposeTensor(this),this.dataId=e.dataId,vn().incRef(this,null)}dispose(){vn().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(tc,Symbol.hasInstance,{value:n=>n instanceof it&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Cf;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(Cf||(Cf={}));var Pu;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(Pu||(Pu={}));var zu;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(zu||(zu={}));var Bu;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(Bu||(Bu={}));var Vu;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(Vu||(Vu={}));const sI={float32:Bu,int32:Pu,bool:zu,complex64:Vu};function Kt(n,e){if(n==="string"||e==="string"){if(n==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${n} with ${e}`)}return sI[n][e]}function pd(n){return Kt(n,"int32")}function Zg(n){return n!=null&&typeof n=="object"&&"texture"in n&&n.texture instanceof WebGLTexture}function Qg(n){return typeof GPUBuffer<"u"&&n!=null&&typeof n=="object"&&"buffer"in n&&n.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function et(n,e){if(n.dtype===e.dtype)return[n,e];const t=Kt(n.dtype,e.dtype);return[n.cast(t),e.cast(t)]}function ex(n){const e=[];return tx(n,e,new Set),e}function tx(n,e,t){if(n==null)return;if(n instanceof it){e.push(n);return}if(!oI(n))return;const s=n;for(const o in s){const r=s[o];t.has(r)||(t.add(r),tx(r,e,t))}}function oI(n){return Array.isArray(n)||typeof n=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uu(n){return n.kernelName!=null}class If{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Yo{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new If}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,s=1){return e in this.registryFactory?(Zt(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:s},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:t,asyncInit:s}=this.initializeBackend(e);if(!(s?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new KC(this.backendInstance),!0}setupRegisteredKernels(){yf(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){yf(e).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const s=t.factory();if(s&&!(s instanceof bh)&&typeof s.then=="function"){const o=++this.pendingBackendInitId,r=s.then(i=>o<this.pendingBackendInitId?!1:(this.registry[e]=i,this.pendingBackendInit=null,!0)).catch(i=>(o<this.pendingBackendInitId||(this.pendingBackendInit=null,Zt(`Initialization of backend ${e} failed`),Zt(i.stack||i.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}else return this.registry[e]=s,{success:!0,asyncInit:!1}}catch(s){return Zt(`Initialization of backend ${e} failed`),Zt(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t],{success:o,asyncInit:r}=this.initializeBackend(s);if(r||o)return{name:s,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const s=this.state.tensorInfo.get(t),o=s.backend,r=this.readSync(t),i=o.refCount(t);o.disposeData(t,!0),s.backend=e,e.move(t,r,s.shape,s.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let s=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}let o;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(o),()=>(o=t(),o instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),o))}scopedRun(e,t,s){e();try{const o=s();return t(),o}catch(o){throw t(),o}}nextTensorId(){return Yo.nextTensorId++}nextVariableId(){return Yo.nextVariableId++}clone(e){const t=O.runKernel(ki,{x:e}),s={x:e},o=i=>({x:()=>{const a="float32",c={x:i},l={dtype:a};return O.runKernel(pi,c,l)}}),r=[];return this.addTapeNode(this.state.activeScope.name,s,[t],o,r,{}),t}runKernel(e,t,s){if(this.backendName==null&&this.backend,!(gf(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,s){const o=this.backend.numDataIds();let r=0;s.forEach(c=>{r+=c.dtype==="complex64"?3:1});const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=o-t-r-i;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e){let t,s=[];const o=this.isTapeOn(),r=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let a;this.backendName==null&&this.backend;let c;const l=uu(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(uu(e)){const{kernelName:f,inputs:m,attrs:g}=e;this.backendName==null&&this.backend;const x=gf(f,this.backendName);k(x!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),a=()=>{const y=this.backend.numDataIds();c=x.kernelFunc({inputs:m,attrs:g,backend:this.backend});const w=Array.isArray(c)?c:[c];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,y,w);const b=w.map(v=>v.rank!=null?v:this.makeTensorFromTensorInfo(v));if(o){const v=this.getTensorsForGradient(f,m,b);s=this.saveTensorsForBackwardMode(v)}return b}}else{const{forwardFunc:f}=e,m=g=>{o&&(s=g.map(x=>this.keep(this.clone(x))))};a=()=>{const g=this.backend.numDataIds();c=this.tidy(()=>f(this.backend,m));const x=Array.isArray(c)?c:[c];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,g,x),x}}const{inputs:u,attrs:h}=e,d=uu(e)?null:e.backwardsFunc;let p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=a():(p=this.profiler.profileKernel(l,u,()=>a()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs)}),o&&this.addTapeNode(l,u,t,d,s,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map(f=>u[f]!=null?u[f].shape:null),outputShapes:t.map(f=>f.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(c)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(e,t,s){const o=xf(e);if(o!=null){const r=o.inputsToSave||[],i=o.outputsToSave||[];let a;o.saveAllInputs?(k(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(t).map(l=>t[l])):a=r.map(l=>t[l]);const c=s.filter((l,u)=>i[u]);return a.concat(c)}return[]}makeTensor(e,t,s,o){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",o=o||this.backend;let r=e;s==="string"&&ri(e[0])&&(r=e.map(c=>Cs(c)));const i=o.write(r,t,s),a=new it(t,s,i,this.nextTensorId());if(this.trackTensor(a,o),s==="string"){const c=this.state.tensorInfo.get(i),l=IC(r);this.state.numBytes+=l-c.bytes,c.bytes=l}return a}makeTensorFromDataId(e,t,s,o){s=s||"float32";const r={dataId:e,shape:t,dtype:s};return this.makeTensorFromTensorInfo(r,o)}makeTensorFromTensorInfo(e,t){const{dataId:s,shape:o,dtype:r}=e,i=new it(o,r,s,this.nextTensorId());return this.trackTensor(i,t),i}makeVariable(e,t=!0,s,o){s=s||this.nextVariableId().toString(),o!=null&&o!==e.dtype&&(e=e.cast(o));const r=new tc(e,t,s,this.nextTensorId());if(this.state.registeredVariables[r.name]!=null)throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let s=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(s=e.size*Ja(e.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:s})),e instanceof tc||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const s=e.size*Ja(e.dtype);this.state.numBytes-=s}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(o=>o.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const o of this.state.activeProfile.kernels)o.kernelTimeMs=await o.kernelTimeMs,o.extraInfo=await o.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,s,o,r,i){const a={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:s,saved:r},c=xf(e);c!=null&&(o=c.gradFunc),o!=null&&(a.gradient=l=>(l=l.map((u,h)=>{if(u==null){const d=s[h],p=St(d.size,d.dtype);return this.makeTensor(p,d.shape,d.dtype)}return u}),o(l.length>1?l:l[0],r,i))),this.state.activeTape.push(a)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=ex(e),s=new Set(t.map(r=>r.id));for(let r=0;r<this.state.activeScope.track.length;r++){const i=this.state.activeScope.track[r];!i.kept&&!s.has(i.id)&&i.dispose()}const o=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(r=>{!r.kept&&r.scopeId===o.id&&this.track(r)})}gradients(e,t,s,o=!1){if(k(t.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));k(r instanceof it,()=>"The result y returned by f() must be a tensor.");const i=JC(this.state.activeTape,t,r);if(!o&&i.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const a={};a[r.id]=s??rI(r.shape),ZC(a,i,l=>this.tidy(l),iI);const c=t.map(l=>a[l.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(l=>{for(const u of l.saved)u.dispose()}),this.state.activeTape=null),{value:r,grads:c}})}customGrad(e){return k(Au(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{k(t.every(a=>a instanceof it),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const o={};t.forEach((a,c)=>{o[c]=a});const r=(a,c)=>(s=e(...t,c),k(s.value instanceof it,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),k(Au(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),i=(a,c)=>{const l=s.gradFunc(a,c),u=Array.isArray(l)?l:[l];k(u.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),k(u.every(d=>d instanceof it),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const h={};return u.forEach((d,p)=>{h[p]=()=>d}),h};return this.runKernelFunc({forwardFunc:r,backwardsFunc:i,inputs:o})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=_t(),s=await this.backend.time(e);return s.wallMs=_t()-t,s}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new If;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}Yo.nextTensorId=0;Yo.nextVariableId=0;function rI(n){const e=Ih(j(n),"float32");return O.makeTensor(e,n,"float32")}function nx(){const n=Cg();if(n._tfengine==null){const e=new kC(n);n._tfengine=new Yo(e)}return RC(n._tfengine.ENV),tI(()=>n._tfengine),n._tfengine}const O=nx();function iI(n,e){const t={a:n,b:e};return O.runKernel(hr,t)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aI(){return typeof navigator<"u"&&navigator!=null}function sx(n){if(n||aI()){if(n||(n=navigator),n.product==="ReactNative")return!0;const e=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!e){const t=n;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function ox(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bt=W();Bt.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Bt.registerFlag("IS_BROWSER",()=>ox());Bt.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Bt.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Bt.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));Bt.registerFlag("PROD",()=>!1);Bt.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Bt.getBool("DEBUG"));Bt.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Bt.registerFlag("IS_TEST",()=>!1);Bt.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>Bt.getBool("DEBUG"));Bt.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Bt.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);Bt.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ta(n,e){let t=n;if(dn(n))return e==="string"?[]:[n.length];if(Zg(n)){const o=n.channels||"RGBA";return[n.height,n.width*o.length]}else if(Qg(n))return[n.buffer.size/(e==null?4:Ja(e))];if(!Array.isArray(n))return[];const s=[];for(;Array.isArray(t)||dn(t)&&e!=="string";)s.push(t.length),t=t[0];return Array.isArray(n)&&W().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&rx(n,s,[]),s}function rx(n,e,t){if(t=t||[],!Array.isArray(n)&&!dn(n)){k(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}k(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${n.length} elements`),k(n.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${n.length} elements`);const s=e.slice(1);for(let o=0;o<n.length;++o)rx(n[o],s,t.concat(o))}function $f(n,e,t,s){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==e||n==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${s}' must be ${n} tensor, but got ${e} tensor`)}}function E(n,e,t,s="numeric"){if(n instanceof q())return $f(s,n.dtype,e,t),n;let o=lr(n);if(o!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(o=s),$f(s,o,e,t),n==null||!dn(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const c=n==null?"null":n.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${c}'`)}const r=ta(n,o);!dn(n)&&!Array.isArray(n)&&(n=[n]);const a=o!=="string"?wo(n,o):ro(n,[],!0);return O.makeTensor(a,r,o)}function ix(n,e,t,s="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((r,i)=>E(r,`${e}[${i}]`,t,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cI="__op";function L(n){const e=Object.keys(n);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0];const s=n[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+cI;const o=(...r)=>{O.startScope(t);try{const i=s(...r);return $h(i)&&console.error("Cannot return a Promise inside of tidy."),O.endScope(i),i}catch(i){throw O.endScope(null),i}};return Object.defineProperty(o,"name",{value:t,configurable:!0}),o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lI(n,e){const t=E(n,"real","complex"),s=E(e,"imag","complex");vh(t.shape,s.shape,`real and imag shapes, ${t.shape} and ${s.shape}, must match in call to tf.complex().`);const o={real:t,imag:s};return O.runKernel(Fh,o)}const io=L({complex_:lI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function na(n,e,t,s){if(s==null)s=lr(n);else if(s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Qg(n)||Zg(n)){if(s!=="float32"&&s!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return O.backend.createTensorFromGPUData(n,e||t,s)}if(!dn(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){os(e);const o=j(e),r=j(t);k(o===r,()=>`Based on the provided shape, [${e}], the tensor should have ${o} values but has ${r}`);for(let i=0;i<t.length;++i){const a=t[i],c=i===t.length-1?a!==j(e.slice(i)):!0;k(t[i]===e[i]||!c,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!dn(n)&&!Array.isArray(n)&&(n=[n]),e=e||t,n=s!=="string"?wo(n,s):ro(n,[],!0),O.makeTensor(n,e,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wr(n,e,t){const s=ta(n,t);return na(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nc={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class Os{static join(e){return new Os(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,e==null||(e instanceof Array||(e=[e]),e=e.map(s=>dn(s)?s.buffer:s),e.length===0))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let s=0;s<e.length;s++){const o=e[s];s!==e.length-1&&o.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const r=t+o.byteLength;this.shards.push({buffer:o,start:t,end:r}),t=r}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const s=this.findShardForByte(e);if(s===-1)throw new Error(`Could not find start shard for byte ${e}`);const o=t-e,r=new ArrayBuffer(o),i=new Uint8Array(r);let a=0;for(let c=s;c<this.shards.length;c++){const l=this.shards[c],h=e+a-l.start,d=a,f=Math.min(t,l.end)-l.start,m=new Uint8Array(l.buffer,h,f-h);if(i.set(m,d),a+=m.length,t<l.end)break}return r}findShardForByte(e){if(this.shards.length===0||e<0||e>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(o){return e<o.start?-1:e>=o.end?1:0}if(t(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const s=uI(this.shards,t);return s===-1?-1:(this.previousShardIndex=s,this.previousShardIndex)}}function uI(n,e){let t=0,s=n.length;for(;t<=s;){const o=Math.floor((s-t)/2)+t,r=e(n[o]);if(r===0)return o;r<0?s=o:t=o+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dn(){return O}function Sf(){return O.memory()}function V(n,e){return O.tidy(n,e)}function be(n){ex(n).forEach(t=>t.dispose())}function Pn(n){return O.keep(n)}function ax(n,e,t=1){return O.registerBackend(n,e,t)}function hI(){return O.backend}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jo=4;async function kf(n,e){const t=[],s=[],o=Array.isArray(n)?n.map(i=>i.name):Object.keys(n);for(let i=0;i<o.length;++i){const a=o[i],c=Array.isArray(n)?n[i].tensor:n[a];if(c.dtype!=="float32"&&c.dtype!=="int32"&&c.dtype!=="bool"&&c.dtype!=="string"&&c.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${c.dtype}`);const l={name:a,shape:c.shape,dtype:c.dtype};if(c.dtype==="string"){const u=new Promise(async h=>{const d=await c.bytes(),p=d.reduce((g,x)=>g+x.length,0)+Jo*d.length,f=new Uint8Array(p);let m=0;for(let g=0;g<d.length;g++){const x=d[g],y=new Uint8Array(new Uint32Array([x.length]).buffer);f.set(y,m),m+=Jo,f.set(x,m),m+=x.length}h(f)});s.push(u)}else s.push(c.data());e!=null&&(l.group=e),t.push(l)}const r=await Promise.all(s);return{data:mI(r),specs:t}}function dI(n,e){const t=new Os(n),s={};let o=0;for(const r of e){const i=pI(r,(a,c)=>t.slice(o+a,o+c));s[r.name]=fI(r,t.slice(o,o+i)),o+=i}return s}function pI(n,e){const t=j(n.shape);let s;if("quantization"in n){const o=n.quantization;s=nc[o.dtype]}else if(n.dtype==="string"){let o=0;for(let r=0;r<t;r++)o+=Jo+new Uint32Array(e(o,o+Jo))[0];return o}else s=nc[n.dtype];return t*s}function fI(n,e){const t=n.name,s=n.dtype,o=n.shape,r=j(o);let i,a=0;if("quantization"in n){const c=n.quantization;if(c.dtype==="uint8"||c.dtype==="uint16"){if(!("min"in c&&"scale"in c))throw new Error(`Weight ${n.name} with quantization ${c.dtype} doesn't have corresponding metadata min and scale.`)}else if(c.dtype==="float16"){if(s!=="float32")throw new Error(`Weight ${n.name} is quantized with ${c.dtype} which only supports weights of type float32 not ${s}.`)}else throw new Error(`Weight ${n.name} has unknown quantization dtype ${c.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const l=nc[c.dtype],u=c.dtype==="uint8"?new Uint8Array(e):new Uint16Array(e);if(s==="float32")if(c.dtype==="uint8"||c.dtype==="uint16"){i=new Float32Array(u.length);for(let h=0;h<u.length;h++){const d=u[h];i[h]=d*c.scale+c.min}}else if(c.dtype==="float16")i=SI()(u);else throw new Error(`Unsupported quantization type ${c.dtype} for weight type float32.`);else if(s==="int32"){if(c.dtype!=="uint8"&&c.dtype!=="uint16")throw new Error(`Unsupported quantization type ${c.dtype} for weight type int32.`);i=new Int32Array(u.length);for(let h=0;h<u.length;h++){const d=u[h];i[h]=Math.round(d*c.scale+c.min)}}else throw new Error(`Unsupported dtype in weight '${t}': ${s}`);a+=r*l}else if(s==="string"){const c=j(n.shape);i=[];for(let l=0;l<c;l++){const u=new Uint32Array(e.slice(a,a+Jo))[0];a+=Jo;const h=new Uint8Array(e.slice(a,a+u));i.push(h),a+=u}}else{const c=nc[s];if(s==="float32")i=new Float32Array(e);else if(s==="int32")i=new Int32Array(e);else if(s==="bool")i=new Uint8Array(e);else if(s==="complex64"){i=new Float32Array(e);const l=new Float32Array(i.length/2),u=new Float32Array(i.length/2);for(let f=0;f<l.length;f++)l[f]=i[f*2],u[f]=i[f*2+1];const h=Wr(l,o,"float32"),d=Wr(u,o,"float32"),p=io(h,d);return h.dispose(),d.dispose(),p}else throw new Error(`Unsupported dtype in weight '${t}': ${s}`);a+=r*c}return Wr(i,o,s)}function mI(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let e=0;const t=[];n.forEach(r=>{if(e+=r.byteLength,t.push(r.byteLength===r.buffer.byteLength?r:new r.constructor(r)),!(r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${r.constructor.name}`)});const s=new Uint8Array(e);let o=0;return t.forEach(r=>{s.set(new Uint8Array(r.buffer),o),o+=r.byteLength}),s.buffer}const fd=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function Tf(n){return fd?Buffer.byteLength(n,"utf8"):new Blob([n]).size}function gI(n){if(fd)return Buffer.from(n).toString("base64");const e=new Uint8Array(n);let t="";for(let s=0,o=e.length;s<o;s++)t+=String.fromCharCode(e[s]);return btoa(t)}function xI(n){if(fd){const s=Buffer.from(n,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const e=atob(n),t=new Uint8Array(e.length);for(let s=0;s<e.length;++s)t.set([e.charCodeAt(s)],s);return t.buffer}function yI(n){return Os.join(n)}function bI(n,e){const t={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:e};return n.signature!=null&&(t.signature=n.signature),n.userDefinedMetadata!=null&&(t.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(t.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(t.initializerSignature=n.initializerSignature),n.trainingConfig!=null&&(t.trainingConfig=n.trainingConfig),t}function wI(n,e,t){const s={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(n.trainingConfig!=null&&(s.trainingConfig=n.trainingConfig),n.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!t)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=e,s.weightData=t}return n.signature!=null&&(s.signature=n.signature),n.userDefinedMetadata!=null&&(s.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(s.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(s.initializerSignature=n.initializerSignature),s}async function vI(n,e){let t,s;return n.weightsManifest!=null&&([t,s]=await e(n.weightsManifest)),wI(n,t,s)}function md(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:Tf(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:Tf(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:new Os(n.weightData).byteLength}}function Nf(n){const e=[];for(const t of n)e.push(...t.weights);return e}function CI(){const n=t=>{let s=t<<13,o=0;for(;(s&8388608)===0;)o-=8388608,s<<=1;return s&=-8388609,o+=947912704,s|o},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=n(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function II(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let e=1;e<31;e++)n[e]=e<<23;for(let e=33;e<63;e++)n[e]=2147483648+(e-32<<23);return n}function $I(){const n=new Uint32Array(64);for(let e=0;e<64;e++)n[e]=1024;return n[0]=n[32]=0,n}function SI(){const n=CI(),e=II(),t=$I();return s=>{const o=new ArrayBuffer(4*s.length),r=new Uint32Array(o);for(let i=0;i<s.length;i++){const a=s[i],c=n[t[a>>10]+(a&1023)]+e[a>>10];r[i]=c}return new Float32Array(o)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ft{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return ft.instance==null&&(ft.instance=new ft),ft.instance}static registerSaveRouter(e){ft.getInstance().saveRouters.push(e)}static registerLoadRouter(e){ft.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return ft.getHandlers(e,"save")}static getLoadHandlers(e,t){return ft.getHandlers(e,"load",t)}static getHandlers(e,t,s){const o=[];return(t==="load"?ft.getInstance().loadRouters:ft.getInstance().saveRouters).forEach(i=>{const a=i(e,s);a!==null&&o.push(a)}),o}}const kI=n=>ft.getSaveHandlers(n),TI=(n,e)=>ft.getLoadHandlers(n,e);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wu="tensorflowjs",Uu=1,Zs="models_store",ys="model_info_store";function cx(){if(!W().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,e=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function Gu(n){const e=n.result;e.createObjectStore(Zs,{keyPath:"modelPath"}),e.createObjectStore(ys,{keyPath:"modelPath"})}class ao{constructor(e){if(this.indexedDB=cx(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((s,o)=>{const r=this.indexedDB.open(Wu,Uu);r.onupgradeneeded=()=>Gu(r),r.onsuccess=()=>{const i=r.result;if(t==null){const a=i.transaction(Zs,"readonly"),l=a.objectStore(Zs).get(this.modelPath);l.onsuccess=()=>{if(l.result==null)return i.close(),o(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(l.result.modelArtifacts)},l.onerror=u=>(i.close(),o(l.error)),a.oncomplete=()=>i.close()}else{t.weightData=Os.join(t.weightData);const a=md(t),c=i.transaction(ys,"readwrite");let l=c.objectStore(ys),u;try{u=l.put({modelPath:this.modelPath,modelArtifactsInfo:a})}catch(d){return o(d)}let h;u.onsuccess=()=>{h=i.transaction(Zs,"readwrite");const d=h.objectStore(Zs);let p;try{p=d.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:a})}catch(f){return o(f)}p.onsuccess=()=>s({modelArtifactsInfo:a}),p.onerror=f=>{l=c.objectStore(ys);const m=l.delete(this.modelPath);m.onsuccess=()=>(i.close(),o(p.error)),m.onerror=g=>(i.close(),o(p.error))}},u.onerror=d=>(i.close(),o(u.error)),c.oncomplete=()=>{h==null?i.close():h.oncomplete=()=>i.close()}}},r.onerror=i=>o(r.error)})}}ao.URL_SCHEME="indexeddb://";const lx=n=>W().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(ao.URL_SCHEME)?NI(n.slice(ao.URL_SCHEME.length)):null;ft.registerSaveRouter(lx);ft.registerLoadRouter(lx);function NI(n){return new ao(n)}function EI(n){return n.startsWith(ao.URL_SCHEME)?n.slice(ao.URL_SCHEME.length):n}class RI{constructor(){this.indexedDB=cx()}async listModels(){return new Promise((e,t)=>{const s=this.indexedDB.open(Wu,Uu);s.onupgradeneeded=()=>Gu(s),s.onsuccess=()=>{const o=s.result,r=o.transaction(ys,"readonly"),a=r.objectStore(ys).getAll();a.onsuccess=()=>{const c={};for(const l of a.result)c[l.modelPath]=l.modelArtifactsInfo;e(c)},a.onerror=c=>(o.close(),t(a.error)),r.oncomplete=()=>o.close()},s.onerror=o=>t(s.error)})}async removeModel(e){return e=EI(e),new Promise((t,s)=>{const o=this.indexedDB.open(Wu,Uu);o.onupgradeneeded=()=>Gu(o),o.onsuccess=()=>{const r=o.result,i=r.transaction(ys,"readwrite"),a=i.objectStore(ys),c=a.get(e);let l;c.onsuccess=()=>{if(c.result==null)return r.close(),s(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const u=a.delete(e),h=()=>{l=r.transaction(Zs,"readwrite");const p=l.objectStore(Zs).delete(e);p.onsuccess=()=>t(c.result.modelArtifactsInfo),p.onerror=f=>s(c.error)};u.onsuccess=h,u.onerror=d=>(h(),r.close(),s(c.error))}},c.onerror=u=>(r.close(),s(c.error)),i.oncomplete=()=>{l==null?r.close():l.oncomplete=()=>r.close()}},o.onerror=r=>s(o.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zn="/",_o="tensorflowjs_models",ux="info",DI="model_topology",AI="weight_specs",FI="weight_data",OI="model_metadata";function hx(n){return{info:[_o,n,ux].join(Zn),topology:[_o,n,DI].join(Zn),weightSpecs:[_o,n,AI].join(Zn),weightData:[_o,n,FI].join(Zn),modelMetadata:[_o,n,OI].join(Zn)}}function dx(n){for(const e of Object.values(n))window.localStorage.removeItem(e)}function MI(n){const e=n.split(Zn);if(e.length<3)throw new Error(`Invalid key format: ${n}`);return e.slice(1,e.length-1).join(Zn)}function _I(n){return n.startsWith(co.URL_SCHEME)?n.slice(co.URL_SCHEME.length):n}class co{constructor(e){if(!W().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=hx(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),s=JSON.stringify(e.weightSpecs),o=md(e),r=Os.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(o)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,gI(r));const i={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(i)),{modelArtifactsInfo:o}}catch{throw dx(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${o.modelTopologyBytes}, weightSpecsBytes=${o.weightSpecsBytes}, weightDataBytes=${o.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=s;const o=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(o==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=o;const r=this.LS.getItem(this.keys.modelMetadata);if(r!=null){const a=JSON.parse(r);t.format=a.format,t.generatedBy=a.generatedBy,t.convertedBy=a.convertedBy,a.signature!=null&&(t.signature=a.signature),a.userDefinedMetadata!=null&&(t.userDefinedMetadata=a.userDefinedMetadata),a.modelInitializer!=null&&(t.modelInitializer=a.modelInitializer),a.initializerSignature!=null&&(t.initializerSignature=a.initializerSignature),a.trainingConfig!=null&&(t.trainingConfig=a.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(i==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=xI(i),t}}co.URL_SCHEME="localstorage://";const px=n=>W().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(co.URL_SCHEME)?LI(n.slice(co.URL_SCHEME.length)):null;ft.registerSaveRouter(px);ft.registerLoadRouter(px);function LI(n){return new co(n)}class PI{constructor(){k(W().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),k(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=_o+Zn,s=Zn+ux;for(let o=0;o<this.LS.length;++o){const r=this.LS.key(o);if(r.startsWith(t)&&r.endsWith(s)){const i=MI(r);e[i]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){e=_I(e);const t=hx(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(t.info));return dx(t),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ef="://";class An{constructor(){this.managers={}}static getInstance(){return An.instance==null&&(An.instance=new An),An.instance}static registerManager(e,t){k(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Ef)&&(e=e.slice(0,e.indexOf(Ef))),k(e.length>0,()=>"scheme must not be an empty string.");const s=An.getInstance();k(s.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),s.managers[e]=t}static getManager(e){const t=An.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(An.getInstance().managers)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zI{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!W().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{if(s.source===window&&s.data.name===this.messageName){s.stopPropagation();const o=this.functionRefs[s.data.index];o(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return qg(e)}}if(W().get("IS_BROWSER")){W().setPlatform("browser",new zI);try{An.registerManager(co.URL_SCHEME,new PI)}catch{}try{An.registerManager(ao.URL_SCHEME,new RI)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BI={importFetch:()=>require("node-fetch")};let hu;class VI{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return W().global.fetch!=null?W().global.fetch(e,t):(hu==null&&(hu=BI.importFetch()),hu(e,t))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}W().get("IS_NODE")&&!W().get("IS_BROWSER")&&W().setPlatform("node",new VI);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function we(n,e="float32",t){return e=e||"float32",os(n),new wt(n,e,t)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WI(n,e){const t=E(n,"x","cast");if(!CC(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:t},o={dtype:e};return O.runKernel(pi,s,o)}const se=L({cast_:WI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UI(n){const t={x:E(n,"x","clone","string_or_numeric")};return O.runKernel(ki,t)}const eo=L({clone_:UI});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GI(n,e=!1){console.log(n.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */nx();const HI={buffer:we,cast:se,clone:eo,print:GI};nI(HI);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qI(n,e){let t=E(n,"a","add"),s=E(e,"b","add");[t,s]=et(t,s);const o={a:t,b:s};return O.runKernel(hr,o)}const Z=L({add_:qI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jI(n,e){let t=E(n,"a","floorDiv"),s=E(e,"b","floorDiv");[t,s]=et(t,s);const o={a:t,b:s};return O.runKernel($i,o)}const fx=L({floorDiv_:jI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KI(n,e){let t=E(n,"a","div"),s=E(e,"b","div");if([t,s]=et(t,s),t.dtype==="int32"&&s.dtype==="int32")return fx(t,s);const o={a:t,b:s},r={};return O.runKernel(yi,o,r)}const ue=L({div_:KI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XI(n,e){let t=E(n,"a","mul"),s=E(e,"b","mul");[t,s]=et(t,s);const o={a:t,b:s};return O.runKernel(Mi,o)}const A=L({mul_:XI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YI(n){const e=E(n,"x","abs");if(e.dtype==="complex64"){const t={x:e};return O.runKernel(_c,t)}else{const t={x:e};return O.runKernel(Ec,t)}}const Rt=L({abs_:YI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JI(n){const t={x:E(n,"x","acos")};return O.runKernel(ii,t)}const ZI=L({acos_:JI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QI(n){const t={x:E(n,"x","acosh")};return O.runKernel(ai,t)}const e$=L({acosh_:QI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t$(n,e=null,t=!1){const o={x:E(n,"x","all","bool")},r={axis:e,keepDims:t};return O.runKernel(Th,o,r)}const mx=L({all_:t$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n$(n,e=null,t=!1){const o={x:E(n,"x","any","bool")},r={axis:e,keepDims:t};return O.runKernel(Nh,o,r)}const Hu=L({any_:n$});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s$(n,e=0){const s={x:E(n,"x","argMax")},o={axis:e};return O.runKernel(Rc,s,o)}const qr=L({argMax_:s$});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o$(n,e=0){const s={x:E(n,"x","argMin")},o={axis:e};return O.runKernel(Dc,s,o)}const r$=L({argMin_:o$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i$(n){const t={x:E(n,"x","asin")};return O.runKernel(ci,t)}const a$=L({asin_:i$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c$(n){const t={x:E(n,"x","asinh")};return O.runKernel(li,t)}const l$=L({asinh_:c$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u$(n){const t={x:E(n,"x","atan")};return O.runKernel(ui,t)}const h$=L({atan_:u$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d$(n,e){let t=E(n,"a","atan2"),s=E(e,"b","atan2");[t,s]=et(t,s);const o={a:t,b:s};return O.runKernel(di,o)}const p$=L({atan2_:d$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f$(n){const t={x:E(n,"x","atanh")};return O.runKernel(hi,t)}const m$=L({atanh_:f$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sa(n,e,t,s,o="NHWC",r){const i=n[3],a=[...e,i],c=is(o);return vt(n,a,t,r,s,null,null,c)}function fn(n,e,t,s,o,r,i="channelsLast"){const[a,c]=jr(e);let l;if(i==="channelsLast")l=[a,c,n[3],n[3]];else if(i==="channelsFirst")l=[a,c,n[1],n[1]];else throw new Error(`Unknown dataFormat ${i}`);return vt(n,l,t,s,o,r,!1,i)}function rs(n,e,t,s,o,r,i="NDHWC"){const[a,c,l]=qu(e);let u,h;if(i==="NDHWC")h="channelsLast",u=[a,c,l,n[4],n[4]];else if(i==="NCDHW")h="channelsFirst",u=[a,c,l,n[1],n[1]];else throw new Error(`Unknown dataFormat ${i}`);return Ms(n,u,t,s,o,!1,h,r)}function vt(n,e,t,s,o,r,i=!1,a="channelsLast"){let[c,l,u,h]=[-1,-1,-1,-1];if(a==="channelsLast")[c,l,u,h]=n;else if(a==="channelsFirst")[c,h,l,u]=n;else throw new Error(`Unknown dataFormat ${a}`);const[d,p,,f]=e,[m,g]=jr(t),[x,y]=jr(s),w=Go(d,x),b=Go(p,y),{padInfo:v,outHeight:I,outWidth:T}=y$(o,l,u,m,g,w,b,r,a),N=i?f*h:f;let $;return a==="channelsFirst"?$=[c,N,I,T]:a==="channelsLast"&&($=[c,I,T,N]),{batchSize:c,dataFormat:a,inHeight:l,inWidth:u,inChannels:h,outHeight:I,outWidth:T,outChannels:N,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:w,effectiveFilterWidth:b,dilationHeight:x,dilationWidth:y,inShape:n,outShape:$,filterShape:e}}function Ms(n,e,t,s,o,r=!1,i="channelsLast",a){let[c,l,u,h,d]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[c,l,u,h,d]=n;else if(i==="channelsFirst")[c,d,l,u,h]=n;else throw new Error(`Unknown dataFormat ${i}`);const[p,f,m,,g]=e,[x,y,w]=qu(t),[b,v,I]=qu(s),T=Go(p,b),N=Go(f,v),$=Go(m,I),{padInfo:S,outDepth:C,outHeight:R,outWidth:F}=b$(o,l,u,h,x,y,w,T,N,$,a),z=r?g*d:g;let M;return i==="channelsFirst"?M=[c,z,C,R,F]:i==="channelsLast"&&(M=[c,C,R,F,z]),{batchSize:c,dataFormat:i,inDepth:l,inHeight:u,inWidth:h,inChannels:d,outDepth:C,outHeight:R,outWidth:F,outChannels:z,padInfo:S,strideDepth:x,strideHeight:y,strideWidth:w,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:T,effectiveFilterHeight:N,effectiveFilterWidth:$,dilationDepth:b,dilationHeight:v,dilationWidth:I,inShape:n,outShape:M,filterShape:e}}function g$(n,e,t,s,o){s==null&&(s=gd(n,e,t));const r=n[0],i=n[1],a=Kr((r-e+2*s)/t+1,o),c=Kr((i-e+2*s)/t+1,o);return[a,c]}function x$(n,e,t,s,o,r){o==null&&(o=gd(n,e[0],s[0]));const i=[0,0,0,t];for(let a=0;a<3;a++)n[a]+2*o>=e[a]&&(i[a]=Kr((n[a]-e[a]+2*o)/s[a]+1,r));return i}function gd(n,e,t,s=1){const o=Go(e,s);return Math.floor((n[0]*(t-1)-t+o)/2)}function jr(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function qu(n){return typeof n=="number"?[n,n,n]:n}function Go(n,e){return e<=1?n:n+(n-1)*(e-1)}function y$(n,e,t,s,o,r,i,a,c){let l,u,h;if(typeof n=="number"){l={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const p=g$([e,t],r,s,n,a);u=p[0],h=p[1]}else if(n==="same"){u=Math.ceil(e/s),h=Math.ceil(t/o);const d=Math.max(0,(u-1)*s+r-e),p=Math.max(0,(h-1)*o+i-t),f=Math.floor(d/2),m=d-f,g=Math.floor(p/2),x=p-g;l={top:f,bottom:m,left:g,right:x,type:"SAME"}}else if(n==="valid")l={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((e-r+1)/s),h=Math.ceil((t-i+1)/o);else if(typeof n=="object"){const d=c==="channelsLast"?n[1][0]:n[2][0],p=c==="channelsLast"?n[1][1]:n[2][1],f=c==="channelsLast"?n[2][0]:n[3][0],m=c==="channelsLast"?n[2][1]:n[3][1];l={top:d,bottom:p,left:f,right:m,type:d===0&&p===0&&f===0&&m===0?"VALID":"EXPLICIT"},u=Kr((e-r+d+p)/s+1,a),h=Kr((t-i+f+m)/o+1,a)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:l,outHeight:u,outWidth:h}}function b$(n,e,t,s,o,r,i,a,c,l,u){let h,d,p,f;if(n==="valid"&&(n=0),typeof n=="number"){h={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const g=x$([e,t,s,1],[a,c,l],1,[o,r,i],n,u);d=g[0],p=g[1],f=g[2]}else if(n==="same"){d=Math.ceil(e/o),p=Math.ceil(t/r),f=Math.ceil(s/i);const m=(d-1)*o+a-e,g=(p-1)*r+c-t,x=(f-1)*i+l-s,y=Math.floor(m/2),w=m-y,b=Math.floor(g/2),v=g-b,I=Math.floor(x/2),T=x-I;h={top:b,bottom:v,left:I,right:T,front:y,back:w,type:"SAME"}}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}function Kr(n,e){if(!e)return Math.trunc(n);switch(e){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${e}`)}}function lo(n){const[e,t,s]=jr(n);return e===1&&t===1&&s===1}function Tt(n,e){return lo(n)||lo(e)}function uo(n){return jr(n).every(e=>e>0)}function is(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function Wt(n,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")k(Xo(e),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(s=>{s.forEach(o=>{k(Xo(o),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${o}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${e}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w$(n,e){const s={x:E(n,"x","reshape","string_or_numeric")},o={shape:e};return O.runKernel(gl,s,o)}const _=L({reshape_:w$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v$(n,e,t,s,o){const r=E(n,"x","avgPool","float32"),i=1;k(Tt(t,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`);let a=r,c=!1;r.rank===3&&(c=!0,a=_(r,[1,r.shape[0],r.shape[1],r.shape[2]])),k(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),Wt("avgPool",s,o);const l={x:a},u={filterSize:e,strides:t,pad:s,dimRoundingMode:o};let h=O.runKernel(Ac,l,u);return h=se(h,r.dtype),c?_(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const xd=L({avgPool_:v$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C$(n,e,t,s,o,r="NDHWC"){const i=E(n,"x","avgPool3d","float32");let a=i,c=!1;i.rank===4&&(c=!0,a=_(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),k(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),k(r==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`),k(typeof t=="number"&&t>0||Array.isArray(t)&&t[0]>0&&t[1]>0&&t[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${t}'`),Wt("avgPool3d",s,o);const l={x:a},u={filterSize:e,strides:t,pad:s,dimRoundingMode:o,dataFormat:r};let h=O.runKernel(Fc,l,u);return h=se(h,a.dtype),c?_(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const I$=L({avgPool3d_:C$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $$(n,e=0){k(n.length>=1,()=>"Pass at least one tensor to concat");const t=ix(n,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(r=>{if(r.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${r.dtype}. `)}),t.length===1)return eo(t[0]);const s=t,o={axis:e};return O.runKernel(Lc,s,o)}const zt=L({concat_:$$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S$(n,e,t=!1,s=!1){let o=E(n,"a","matMul"),r=E(e,"b","matMul");[o,r]=et(o,r);const i={a:o,b:r},a={transposeA:t,transposeB:s};return O.runKernel(Oc,i,a)}const Ne=L({matMul_:S$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k$(n){const t={x:E(n,"x","sigmoid","float32")};return O.runKernel(qi,t)}const dr=L({sigmoid_:k$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T$(n,e,t){const s=E(n,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const o={x:s},r={begin:e,size:t};return O.runKernel(vl,o,r)}const Ve=L({slice_:T$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N$(n){const t={x:E(n,"x","tanh","float32")};return O.runKernel(Zi,t)}const Rl=L({tanh_:N$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E$(n,e,t){const s=E(n,"x","batchToSpaceND"),o=e.reduce((a,c)=>a*c);k(s.rank>=1+e.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${e.length}`),k(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),k(s.shape[0]%o===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${o}`);const r={x:s},i={blockShape:e,crops:t};return O.runKernel(Mc,r,i)}const yd=L({batchToSpaceND_:E$});function R$(n){let e;return n.rank===0||n.rank===1?e=_(n,[1,1,1,n.size]):n.rank===2?e=_(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?e=_(n,[1,n.shape[0],n.shape[1],n.shape[2]]):e=n,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D$(n,e,t,s,o,r){r==null&&(r=.001);const i=E(n,"x","batchNorm"),a=E(e,"mean","batchNorm"),c=E(t,"variance","batchNorm");let l;o!=null&&(l=E(o,"scale","batchNorm"));let u;s!=null&&(u=E(s,"offset","batchNorm")),k(a.rank===c.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),k(u==null||a.rank===u.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),k(l==null||a.rank===l.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d={x:R$(i),scale:l,offset:u,mean:a,variance:c},p={varianceEpsilon:r},f=O.runKernel(qc,d,p);return _(f,i.shape)}const Dl=L({batchNorm_:D$});function A$(n,e,t,s,o,r){const i=E(n,"x","batchNorm"),a=E(e,"mean","batchNorm"),c=E(t,"variance","batchNorm");let l;o!=null&&(l=E(o,"scale","batchNorm"));let u;return s!=null&&(u=E(s,"offset","batchNorm")),k(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),k(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),k(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${c.rank}.`),l!=null&&k(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&k(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${u.rank}.`),Dl(i,a,c,u,l,r)}const F$=L({batchNorm2d_:A$});function O$(n,e,t,s,o,r){const i=E(n,"x","batchNorm"),a=E(e,"mean","batchNorm"),c=E(t,"variance","batchNorm");let l;o!=null&&(l=E(o,"scale","batchNorm"));let u;return s!=null&&(u=E(s,"offset","batchNorm")),k(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),k(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),k(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${c.rank}.`),l!=null&&k(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&k(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${u.rank}.`),Dl(i,a,c,u,l,r)}const M$=L({batchNorm3d_:O$});function _$(n,e,t,s,o,r){const i=E(n,"x","batchNorm"),a=E(e,"mean","batchNorm"),c=E(t,"variance","batchNorm");let l;o!=null&&(l=E(o,"scale","batchNorm"));let u;return s!=null&&(u=E(s,"offset","batchNorm")),k(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),k(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),k(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${c.rank}.`),l!=null&&k(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&k(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${u.rank}.`),Dl(i,a,c,u,l,r)}const L$=L({batchNorm4d_:_$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P$(n,e,t){const s=E(n,"x","bincount"),o=E(e,"weights","bincount");k(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),k(t>=0,()=>`size must be non-negative, but got ${t}.`),k(o.size===s.size||o.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${o.shape}.`);const r={x:s,weights:o},i={size:t};return O.runKernel(Dh,r,i)}const z$=L({bincount_:P$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B$(n,e){let t=E(n,"broadcastTo","x");const s=t.shape;if(os(e),e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){const l=t.shape.slice();for(;l.length<e.length;)l.unshift(1);t=_(t,l)}const o=t.shape,r=Array.from(e);for(let l=e.length-1;l>=0;l--)if(o[l]===e[l])r[l]=1;else if(t.shape[l]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${e}].`);if(r.map((l,u)=>l>1?u:-1).filter(l=>l>=0).length===0)return eo(t);const a={x:t},c={reps:r};return O.runKernel(Qi,a,c)}const Ur=L({broadcastTo_:B$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V$(n){const t={x:E(n,"x","ceil","float32")};return O.runKernel(fi,t)}const W$=L({ceil_:V$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Al(n,e,t){os(n),t=t||lr(e);const s={shape:n,value:e,dtype:t};return O.runKernel(qh,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U$(n,e,t){const s=E(n,"x","clipByValue");if(k(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`),e===t)return Al(s.shape,e,s.dtype);const o={x:s},r={clipValueMin:e,clipValueMax:t};return O.runKernel(mi,o,r)}const tn=L({clipByValue_:U$});function G$(n){return zt(n,0)}const H$=L({concat1d_:G$});function q$(n,e){return zt(n,e)}const j$=L({concat2d_:q$});function K$(n,e){return zt(n,e)}const X$=L({concat3d_:K$});function Y$(n,e){return zt(n,e)}const J$=L({concat4d_:Y$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z$(n,e,t,s,o="NHWC",r=[1,1],i){const a=E(n,"x","conv2d","float32"),c=E(e,"filter","conv2d","float32");let l=a,u=!1;a.rank===3&&(u=!0,l=_(a,[1,a.shape[0],a.shape[1],a.shape[2]])),k(l.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`),k(c.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${c.rank}.`),Wt("conv2d",s,i);const h=o==="NHWC"?l.shape[3]:l.shape[1];k(h===c.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${c.shape[2]}.`),k(Tt(t,r),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${r}'`),k(uo(r),()=>"Error in conv2D: Dilated rates should be larger than 0."),k(uo(t),()=>"Error in conv2D: Strides should be larger than 0.");const d={x:l,filter:c},p={strides:t,pad:s,dataFormat:o,dilations:r,dimRoundingMode:i},f=O.runKernel(Pc,d,p);return u?_(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const ho=L({conv2d_:Z$});function Q$(n,e,t,s,o="NWC",r=1,i){const a=E(n,"x","conv1d"),c=E(e,"filter","conv1d");let l=a,u=!1;a.rank===2&&(u=!0,l=_(a,[1,a.shape[0],a.shape[1]])),k(l.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`),k(c.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${c.rank}.`),Wt("conv1d",s,i),k(l.shape[2]===c.shape[1],()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${c.shape[1]}.`),k(Tt(t,r),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${r}'`),k(uo(r),()=>"Error in conv1D: Dilated rates should be larger than 0."),k(uo(t),()=>"Error in conv1D: Stride should be larger than 0."),k(o==="NWC",()=>`Error in conv1d: got dataFormat of ${o} but only NWC is currently supported.`);const h=_(c,[1,c.shape[0],c.shape[1],c.shape[2]]),d=_(l,[l.shape[0],1,l.shape[1],l.shape[2]]),g=ho(d,h,[1,t],s,"NHWC",[1,r],i);return u?_(g,[g.shape[2],g.shape[3]]):_(g,[g.shape[0],g.shape[2],g.shape[3]])}const gx=L({conv1d_:Q$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eS(n,e,t,s,o,r="NHWC",i){k(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let a=n,c=e,l=!1;e.rank===3&&(l=!0,c=_(e,[1,e.shape[0],e.shape[1],e.shape[2]]),a=[1,n[0],n[1],n[2]]),k(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),k(c.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${c.rank}`),k(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);const u=r==="NHWC"?a[3]:a[1],h=r==="NHWC"?c.shape[3]:c.shape[1];k(u===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${u}) must match input depth for filter ${t.shape[2]}.`),k(h===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${t.shape[3]}.`),Wt("conv2dDerInput",o,i);const d={dy:c,filter:t},p={strides:s,pad:o,dataFormat:r,dimRoundingMode:i,inputShape:a},f=O.runKernel(zc,d,p);return l?_(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const bd=L({conv2DBackpropInput_:eS});function tS(n,e,t,s,o,r){const i=E(n,"x","conv2dTranspose"),a=E(e,"filter","conv2dTranspose");return bd(t,i,a,s,o,"NHWC",r)}const xx=L({conv2dTranspose_:tS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nS(n,e,t,s,o="NDHWC",r=[1,1,1]){const i=E(n,"x","conv3d"),a=E(e,"filter","conv3d");let c=i,l=!1;i.rank===4&&(l=!0,c=_(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),k(c.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${c.rank}.`),k(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),k(c.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${c.shape[4]}) must match input depth for filter ${a.shape[3]}.`),k(Tt(t,r),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${r}'`),k(o==="NDHWC",()=>`Error in conv3d: got dataFormat of ${o} but only NDHWC is currently supported.`),k(uo(r),()=>"Error in conv3D: Dilated rates should be larger than 0."),k(uo(t),()=>"Error in conv3D: Strides should be larger than 0.");const u={x:c,filter:a},h={strides:t,pad:s,dataFormat:o,dilations:r},d=O.runKernel(Bc,u,h);return l?_(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const sS=L({conv3d_:nS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oS(n,e,t,s,o){k(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let r=n,i=e,a=!1;e.rank===4&&(a=!0,i=_(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),r=[1,n[0],n[1],n[2],n[3]]);const c=r[4],l=i.shape[4];k(r.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${r.length}.`),k(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),k(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),k(c===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${c}) must match input depth for filter ${t.shape[3]}.`),k(l===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${t.shape[4]}.`);const u={dy:i,filter:t},h={pad:o,strides:s,inputShape:r},d=O.runKernel(_h,u,h);return a?_(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const yx=L({conv3DBackpropInput_:oS});function rS(n,e,t,s,o){const r=E(n,"x","conv3dTranspose"),i=E(e,"filter","conv3dTranspose");return yx(t,r,i,s,o)}const iS=L({conv3dTranspose_:rS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aS(n){const t={x:E(n,"x","cos","float32")};return O.runKernel(gi,t)}const wd=L({cos_:aS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cS(n){const t={x:E(n,"x","cosh","float32")};return O.runKernel(xi,t)}const bx=L({cosh_:cS});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lS(n,e=0,t=!1,s=!1){const r={x:E(n,"x","cumprod")},i={axis:e,exclusive:t,reverse:s};return O.runKernel(Lh,r,i)}const ju=L({cumprod_:lS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uS(n,e=0,t=!1,s=!1){const r={x:E(n,"x","cumsum")},i={axis:e,exclusive:t,reverse:s};return O.runKernel(Vc,r,i)}const wx=L({cumsum_:uS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hS(n,e,t,s=!1){const o=E(n,"x","denseBincount"),r=E(e,"weights","denseBincount");k(o.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${o.dtype}`),k(o.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${o.rank}.`),k(t>=0,()=>`size must be non-negative, but got ${t}.`),k(r.size===o.size||r.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${o.shape}, weights shape: ${r.shape}.`);const i={x:o,weights:r},a={size:t,binaryOutput:s};return O.runKernel(zh,i,a)}const Rf=L({denseBincount_:hS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dS(n,e,t="NHWC"){const s=E(n,"x","depthToSpace","float32"),o=t==="NHWC"?s.shape[1]:s.shape[2],r=t==="NHWC"?s.shape[2]:s.shape[3],i=t==="NHWC"?s.shape[3]:s.shape[1];k(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),k(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e}  for depthToSpace with input shape
    ${s.shape}`),k(r*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${e} for depthToSpace with input shape
        ${s.shape}`),k(i%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${i} for depthToSpace with input shape ${s.shape}`);const a={x:s},c={blockSize:e,dataFormat:t};return O.runKernel(Bh,a,c)}const pS=L({depthToSpace_:dS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fS(n,e,t,s,o="NHWC",r=[1,1],i){const a=E(n,"x","depthwiseConv2d","float32"),c=E(e,"filter","depthwiseConv2d","float32");let l=a,u=!1;a.rank===3&&(u=!0,l=_(a,[1,a.shape[0],a.shape[1],a.shape[2]])),k(l.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`),k(c.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${c.rank}.`);const h=o==="NHWC"?l.shape[3]:l.shape[1];k(h===c.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${c.shape[2]}.`),Wt("depthwiseConv2d",s,i);const d={x:l,filter:c},p={strides:t,pad:s,dataFormat:o,dilations:r,dimRoundingMode:i},f=O.runKernel(Wc,d,p);return u?_(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const vd=L({depthwiseConv2d_:fS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mS(n,e,t,s,o=[1,1],r="NHWC"){const i=E(n,"x","dilation2d"),a=E(e,"filter","dilation2d");k(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),k(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),k(r==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${r}`);let c=i,l=!1;i.rank===3&&(c=_(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=!0),k(c.shape[3]===a.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${c.shape[3]} vs ${a.shape[2]}`);const u={x:c,filter:a},h={strides:t,pad:s,dilations:o},d=O.runKernel(Uc,u,h);return l?_(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const gS=L({dilation2d_:mS});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zo(n,e){const t=n.length,s=[];for(let o=0;o<t;o++){const r=t-1-o,i=n[r]||1;(e[e.length-1-o]||1)>1&&i===1&&s.unshift(r)}return s}function dt(n,e){const t=[];for(let s=0;s<e.length;s++){const o=n[n.length-s-1],r=e.length-s-1,i=e[r];(o==null||o===1&&i>1)&&t.unshift(r)}return t}function me(n,e){const t=Math.max(n.length,e.length),s=new Array(t);for(let o=0;o<t;o++){let r=n[n.length-o-1];r==null&&(r=1);let i=e[e.length-o-1];if(i==null&&(i=1),r===1)s[t-o-1]=i;else if(i===1)s[t-o-1]=r;else if(r!==i){const a=`Operands could not be broadcast together with shapes ${n} and ${e}.`;throw Error(a)}else s[t-o-1]=r}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xS(n,e){let t=E(n,"a","equal","string_or_numeric"),s=E(e,"b","equal","string_or_numeric");[t,s]=et(t,s),me(t.shape,s.shape);const o={a:t,b:s};return O.runKernel(Gc,o)}const Un=L({equal_:xS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yS(n,e,t){const s=E(e,"a","where"),o=E(t,"b","where"),r=E(n,"condition","where","bool"),i=me(me(r.shape,s.shape),o.shape),a=Ur(r,i),c=Ur(s,i),l=Ur(o,i),u={condition:a,t:c,e:l};return O.runKernel(wl,u)}const Ft=L({where_:yS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bS(n){const t={x:E(n,"x","zerosLike")};return O.runKernel(Nl,t)}const Se=L({zerosLike_:bS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wS(n,e){let t=E(n,"a","div"),s=E(e,"b","div");[t,s]=et(t,s);const o=ue(t,s),r=Se(o),i=Un(s,r);return Ft(i,r,o)}const vS=L({divNoNan_:wS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CS(n,e){const t=E(n,"t1","dot"),s=E(e,"t2","dot");k((t.rank===1||t.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${s.rank}.`);const o=t.rank===1?t.size:t.shape[1],r=s.rank===1?s.size:s.shape[0];if(k(o===r,()=>`Error in dot: inner dimensions of inputs must match, but got ${o} and ${r}.`),t.rank===1&&s.rank===1){const i=_(t,[1,-1]),a=_(s,[-1,1]),c=Ne(i,a);return _(c,[])}else if(t.rank===1&&s.rank===2){const i=_(t,[1,-1]),a=_(s,[s.shape[0],s.shape[1]]),c=Ne(i,a);return _(c,[c.size])}else if(t.rank===2&&s.rank===1){const i=_(s,[-1,1]),a=Ne(t,i);return _(a,[a.size])}else{const i=_(s,[s.shape[0],s.shape[1]]);return Ne(t,i)}}const IS=L({dot_:CS});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $S(n,...e){const t=e.map((o,r)=>E(o,`tensors${r}`,"einsum")),s={equation:n};return O.runKernel(Uh,t,s)}const Er=L({einsum_:$S});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SS(n){const t={x:E(n,"x","elu","float32")};return O.runKernel(bi,t)}const Fl=L({elu_:SS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kS(n){let e=E(n,"x","erf");k(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=se(e,"float32"));const t={x:e};return O.runKernel(wi,t)}const vx=L({erf_:kS});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cd(n,e){for(let t=0;t<n.length;++t)if(n[n.length-t-1]!==e-1-t)return!1;return!0}function Cx(n,e,t){const s=n.length+e.length,o=[];let r=0,i=0;for(let a=0;a<s;a++)t.indexOf(a)===-1?o.push(n[r++]):o.push(e[i++]);return o}function xt(n,e){const t=[],s=n.length;for(let r=0;r<s;r++)e.indexOf(r)===-1&&t.push(n[r]);const o=e.map(r=>n[r]);return[t,o]}function rt(n,e){const t=e.map(s=>1);return Cx(n,t,e)}function Ct(n,e,t){k(Cd(e,t),()=>`${n} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function Ye(n,e){if(Cd(n,e))return null;const t=[];for(let s=0;s<e;++s)n.indexOf(s)===-1&&t.push(s);return n.forEach(s=>t.push(s)),t}function _s(n){return n.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function tt(n,e){const t=[];for(let s=e-n;s<e;++s)t.push(s);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TS(n,e=null,t=!1){const o={x:E(n,"x","max")},r={reductionIndices:e,keepDims:t};return O.runKernel(nl,o,r)}const Sn=L({max_:TS});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NS(n,e=null,t=!1){const o={x:E(n,"x","min")},r={axis:e,keepDims:t};return O.runKernel(il,o,r)}const sc=L({min_:NS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ES(n,e){let t=E(n,"base","pow"),s=E(e,"exp","pow");[t,s]=et(t,s);const o={a:t,b:s};return O.runKernel(_i,o)}const po=L({pow_:ES});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ee(n,e){if((dn(n)&&e!=="string"||Array.isArray(n))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&dn(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return na(n,[],[],e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RS(n){const t={x:E(n,"x","sqrt","float32")};return O.runKernel(Ki,t)}const kt=L({sqrt_:RS});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DS(n){const e=E(n,"x","square"),t={};return O.runKernel("Square",{x:e},t)}const Ge=L({square_:DS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AS(n,e=null,t=!1){let s=E(n,"x","sum");s.dtype==="bool"&&(s=se(s,"int32"));const o={x:s},r={axis:e,keepDims:t};return O.runKernel(Cl,o,r)}const le=L({sum_:AS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FS(n,e="euclidean",t=null,s=!1){n=E(n,"x","norm");const o=Ix(n,e,t);let r=o.shape;if(s){const i=ve(t,n.shape);r=rt(o.shape,i)}return _(o,r)}function Ix(n,e,t=null){if(n.rank===0)return Rt(n);if(n.rank!==1&&t===null)return Ix(_(n,[-1]),e,t);if(n.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return le(Rt(n),t);if(e===1/0)return Sn(Rt(n),t);if(e===-1/0)return sc(Rt(n),t);if(e==="euclidean"||e===2)return kt(le(po(Rt(n),Ee(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return Sn(le(Rt(n),t[0]),t[1]-1);if(e===1/0)return Sn(le(Rt(n),t[1]),t[0]);if(e===-1/0)return sc(le(Rt(n),t[1]),t[0]);if(e==="fro"||e==="euclidean")return kt(le(Ge(n),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}const Ol=L({norm_:FS});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OS(n,e=null,t=!1){return Ol(n,"euclidean",e,t)}const MS=L({euclideanNorm_:OS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _S(n){const t={x:E(n,"x","exp")};return O.runKernel(vi,t)}const Gn=L({exp_:_S});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LS(n,e=0){const t=E(n,"x","expandDims","string_or_numeric");k(e<=t.rank,()=>"Axis must be <= rank of the tensor");const s={input:t},o={dim:e};return O.runKernel(Hc,s,o)}const Lt=L({expandDims_:LS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PS(n){const t={x:E(n,"x","expm1")};return O.runKernel(Ci,t)}const zS=L({expm1_:PS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BS(n,e){const t=E(n,"x","tile","string_or_numeric");k(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);const s={x:t},o={reps:e};return O.runKernel(Qi,s,o)}const In=L({tile_:BS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VS(n,e,t,s="float32"){e==null&&(e=n);const o=we([n,e],s),r=n<=e?n:e;for(let a=0;a<r;++a)o.set(1,a,a);const i=_(o.toTensor(),[n,e]);if(t==null)return i;if(t.length===1)return In(Lt(i,0),[t[0],1,1]);if(t.length===2)return In(Lt(Lt(i,0),0),[t[0],t[1],1,1]);if(t.length===3)return In(Lt(Lt(Lt(i,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}const $x=L({eye_:VS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WS(n){const t={x:E(n,"x","floor","float32")};return O.runKernel(Ii,t)}const Ml=L({floor_:WS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function US(n,e,t=0,s=0){const o=E(n,"x","gather"),r=E(e,"indices","gather","int32"),i={x:o,indices:r},a={axis:t,batchDims:s};return O.runKernel(jc,i,a)}const Id=L({gather_:US});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GS(n,e){let t=E(n,"a","greater","string_or_numeric"),s=E(e,"b","greater","string_or_numeric");[t,s]=et(t,s),me(t.shape,s.shape);const o={a:t,b:s};return O.runKernel(Kc,o)}const nn=L({greater_:GS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HS(n,e){let t=E(n,"a","greaterEqual","string_or_numeric"),s=E(e,"b","greaterEqual","string_or_numeric");[t,s]=et(t,s),me(t.shape,s.shape);const o={a:t,b:s};return O.runKernel(Si,o)}const vo=L({greaterEqual_:HS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qS(n){const t={input:E(n,"input","imag")};return O.runKernel(Xh,t)}const $d=L({imag_:qS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jS(n){const t={x:E(n,"x","isFinite")};return O.runKernel(Ti,t)}const KS=L({isFinite_:jS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XS(n){const t={x:E(n,"x","isInf")};return O.runKernel(Ni,t)}const YS=L({isInf_:XS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JS(n){const t={x:E(n,"x","isNaN")};return O.runKernel(Ei,t)}const ZS=L({isNaN_:JS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QS(n,e=.2){const s={x:E(n,"x","leakyRelu")},o={alpha:e};return O.runKernel(Xc,s,o)}const Sd=L({leakyRelu_:QS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ek(n,e){let t=E(n,"a","less","string_or_numeric"),s=E(e,"b","less","string_or_numeric");[t,s]=et(t,s),me(t.shape,s.shape);const o={a:t,b:s};return O.runKernel(Yc,o)}const oc=L({less_:ek});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tk(n,e){let t=E(n,"a","lessEqual","string_or_numeric"),s=E(e,"b","lessEqual","string_or_numeric");[t,s]=et(t,s),me(t.shape,s.shape);const o={a:t,b:s};return O.runKernel(Jc,o)}const pr=L({lessEqual_:tk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nk(n,e=5,t=1,s=1,o=.5){const r=E(n,"x","localResponseNormalization");k(r.rank===4||r.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${r.rank}.`),k(Xo(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let i=r,a=!1;r.rank===3&&(a=!0,i=_(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const c={x:i},l={depthRadius:e,bias:t,alpha:s,beta:o},u=O.runKernel(tl,c,l);return a?_(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const sk=L({localResponseNormalization_:nk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ok(n){const t={x:E(n,"x","log","float32")};return O.runKernel(Ri,t)}const Hn=L({log_:ok});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rk(n){const t={x:E(n,"x","log1p")};return O.runKernel(Di,t)}const Sx=L({log1p_:rk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ik(n,e){k(Au(n),()=>"The f passed in variableGrads(f) must be a function"),k(e==null||Array.isArray(e)&&e.every(l=>l instanceof tc),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const t=e!=null;if(!t){e=[];for(const l in O.registeredVariables)e.push(O.registeredVariables[l])}const s=t?e.filter(l=>!l.trainable):null,o=e.length;e=e.filter(l=>l.trainable),k(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);const r=!0,{value:i,grads:a}=O.gradients(n,e,null,r);k(a.some(l=>l!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),k(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);const c={};return e.forEach((l,u)=>{a[u]!=null&&(c[l.name]=a[u])}),s?.forEach(l=>c[l.name]=null),{value:i,grads:c}}function Qo(n){return O.customGrad(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ak(n){const t={x:E(n,"x","neg")};return O.runKernel(cl,t)}const Qe=L({neg_:ak});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ck(n){const t={x:E(n,"x","softplus")};return O.runKernel(ji,t)}const oa=L({softplus_:ck});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lk(n){const e=E(n,"x","logSigmoid");return Qo(s=>({value:Qe(oa(Qe(s))),gradFunc:i=>A(i,dr(Qe(s)))}))(e)}const uk=L({logSigmoid_:lk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hk(n,e){let t=E(n,"a","sub"),s=E(e,"b","sub");[t,s]=et(t,s);const o={a:t,b:s};return O.runKernel(Yi,o)}const pe=L({sub_:hk});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dk(n,e=-1){const t=E(n,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return Qo((o,r)=>{const a=Sn(o,e,!0),c=pe(o,a),l=pe(se(c,"float32"),Hn(le(Gn(c),e,!0)));return r([l]),{value:l,gradFunc:(h,d)=>{const[p]=d,f=!0,m=Gn(p);return pe(h,A(le(h,e,f),m))}}})(t)}const kx=L({logSoftmax_:dk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pk(n,e=null,t=!1){const s=E(n,"x","logSumExp"),o=ve(e,s.shape),r=Sn(s,o,!0),i=pe(s,r),a=Gn(i),c=le(a,o),l=Hn(c),u=Z(_(r,l.shape),l);if(t){const h=rt(u.shape,o);return _(u,h)}return u}const Tx=L({logSumExp_:pk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fk(n,e){const t=E(n,"a","logicalAnd","bool"),s=E(e,"b","logicalAnd","bool");me(t.shape,s.shape);const o={a:t,b:s};return O.runKernel(Zc,o)}const es=L({logicalAnd_:fk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mk(n){const t={x:E(n,"x","logicalNot","bool")};return O.runKernel(Qc,t)}const kd=L({logicalNot_:mk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gk(n,e){const t=E(n,"a","logicalOr","bool"),s=E(e,"b","logicalOr","bool");me(t.shape,s.shape);const o={a:t,b:s};return O.runKernel(el,o)}const Nx=L({logicalOr_:gk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xk(n,e){const t=E(n,"a","logicalXor","bool"),s=E(e,"b","logicalXor","bool");return me(t.shape,s.shape),es(Nx(n,e),kd(es(n,e)))}const yk=L({logicalXor_:xk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bk(n,e,t,s,o){const r=E(n,"x","maxPool"),i=1;let a=r,c=!1;r.rank===3&&(c=!0,a=_(r,[1,r.shape[0],r.shape[1],r.shape[2]])),k(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),k(Tt(t,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`),Wt("maxPool",s,o);const l={x:a},u={filterSize:e,strides:t,pad:s,dimRoundingMode:o},h=O.runKernel(sl,l,u);return c?_(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Td=L({maxPool_:bk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wk(n,e=[1,1,1],t,s,o,r="NDHWC"){const i=E(n,"x","maxPool3d");let a=i,c=!1;i.rank===4&&(c=!0,a=_(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),k(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),k(r==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`),Wt("maxPool3d",s,o);const l={x:a},u={filterSize:e,strides:t,pad:s,dimRoundingMode:o,dataFormat:r},h=O.runKernel(ol,l,u);return c?_(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const vk=L({maxPool3d_:wk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ck(n,e){let t=E(n,"a","maximum"),s=E(e,"b","maximum");[t,s]=et(t,s),t.dtype==="bool"&&(t=se(t,"int32"),s=se(s,"int32")),me(t.shape,s.shape);const o={a:t,b:s};return O.runKernel(Ai,o)}const Ls=L({maximum_:Ck});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ik(n,e=null,t=!1){const o={x:E(n,"x","mean")},r={axis:e,keepDims:t};return O.runKernel(rl,o,r)}const ot=L({mean_:Ik});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function We(n,e="float32"){if(os(n),e==="complex64"){const s=We(n,"float32"),o=We(n,"float32");return io(s,o)}const t=St(j(n),e);return O.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ps(n,e="float32"){if(os(n),e==="complex64"){const s=Ps(n,"float32"),o=We(n,"float32");return io(s,o)}const t=Ih(j(n),e);return O.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $k(n,e){let t=E(n,"a","minimum"),s=E(e,"b","minimum");[t,s]=et(t,s),t.dtype==="bool"&&(t=se(t,"int32"),s=se(s,"int32")),me(t.shape,s.shape);const o={a:t,b:s};return O.runKernel(Fi,o)}const Xr=L({minimum_:$k});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sk(n,e,t){k(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);const s=E(n,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");k(e.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${e.length}.`);const o=t==="reflect"?1:0;for(let a=0;a<s.rank;a++)k(e[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),k(e[a][0]>=0&&e[a][0]<=s.shape[a]-o&&e[a][1]>=0&&e[a][1]<=s.shape[a]-o,()=>`Padding in dimension ${a} cannot be greater than or equal to ${s.shape[a]-o} or less than 0 for input of shape ${s.shape}`);const r={paddings:e,mode:t},i={x:s};return O.runKernel(al,i,r)}const kk=L({mirrorPad_:Sk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tk(n,e){let t=E(n,"a","mod"),s=E(e,"b","mod");[t,s]=et(t,s);const o={a:t,b:s};return O.runKernel(Oi,o)}const Nk=L({mod_:Tk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ek(n,e=null,t=!1){n=E(n,"x","moments");const s=ve(e,n.shape),o=ot(n,s,t);let r=o.shape;t||(r=rt(o.shape,s));const i=Ge(pe(se(n,"float32"),_(o,r))),a=ot(i,s,t);return{mean:o,variance:a}}const Nd=L({moments_:Ek});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rk(n,e){let t=E(n,"a","notEqual","string_or_numeric"),s=E(e,"b","notEqual","string_or_numeric");[t,s]=et(t,s),me(t.shape,s.shape);const o={a:t,b:s};return O.runKernel(ll,o)}const rc=L({notEqual_:Rk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dk(n,e,t=1,s=0,o="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const i={indices:E(n,"indices","oneHot","int32")},a={dtype:o,depth:e,onValue:t,offValue:s};return O.runKernel(hl,i,a)}const Ex=L({oneHot_:Dk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ak(n){const t={x:E(n,"x","onesLike")};return O.runKernel(ul,t)}const pn=L({onesLike_:Ak});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fk(n,e,t=0){const s=E(n,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const o={paddings:e,constantValue:t},r={x:s};return O.runKernel(pl,r,o)}const Ed=L({pad_:Fk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ok(n,e,t){const s=E(n,"x","spaceToBatchND");k(s.rank>=1+e.length,()=>`input rank ${s.rank} should be > than [blockShape] ${e.length}`),k(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),k(s.shape.reduce((i,a,c)=>c>0&&c<=e.length?i&&(a+t[c-1][0]+t[c-1][1])%e[c-1]===0:i,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);const o={x:s},r={blockShape:e,paddings:t};return O.runKernel(Il,o,r)}const Rd=L({spaceToBatchND_:Ok});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mk(n,e,t,s,o,r,i){o==null&&(o=[1,1]),r==null&&(r=1),s===0&&(s="valid");const a=E(n,"x","maxPool");let c=a,l=!1;a.rank===3&&(l=!0,c=_(a,[1,a.shape[0],a.shape[1],a.shape[2]])),k(Tt(r,o),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${r} and dilations '${o}'`);const u=fn(c.shape,e,r,o,s),h=[u.dilationHeight,u.dilationWidth];let d;s==="same"?d=Lk([u.filterHeight,u.filterWidth],h):d=[[0,0],[0,0]];const p=h[0]===1&&h[1]===1,[f,m]=_k([u.inHeight,u.inWidth],h,d),g=p?s:"valid",x=p?c:Rd(c,h,f),w=(t==="avg"?()=>xd(x,e,r,g,i):()=>Td(x,e,r,g,i))(),b=p?w:yd(w,h,m);return l?_(b,[b.shape[1],b.shape[2],b.shape[3]]):b}function _k(n,e,t){const s=t.map(u=>u[0]),o=t.map(u=>u[1]),r=n.concat(s,o),i=e.map((u,h)=>(u-r[h]%u)%u),a=o.map((u,h)=>u+i[h]),c=e.map((u,h)=>[s[h],a[h]]),l=e.map((u,h)=>[0,i[h]]);return[c,l]}function Lk(n,e){const s=n.map((i,a)=>i+(i-1)*(e[a]-1)).map(i=>i-1),o=s.map(i=>Math.floor(i/2)),r=s.map((i,a)=>i-o[a]);return s.map((i,a)=>[o[a],r[a]])}const Pk=L({pool_:Mk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zk(n,e){const t=E(n,"x","prelu"),s=E(e,"alpha","prelu"),o={x:t,alpha:s};return O.runKernel(fl,o)}const Dd=L({prelu_:zk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bk(n,e=null,t=!1){let s=E(n,"x","prod");s.dtype==="bool"&&(s=se(s,"int32"));const o={x:s},r={axis:e,keepDims:t};return O.runKernel(ml,o,r)}const Vk=L({prod_:Bk});var Wa={exports:{}},Wk=Wa.exports,Df;function Uk(){return Df||(Df=1,(function(n){(function(e,t,s){function o(c){var l=this,u=a();l.next=function(){var h=2091639*l.s0+l.c*23283064365386963e-26;return l.s0=l.s1,l.s1=l.s2,l.s2=h-(l.c=h|0)},l.c=1,l.s0=u(" "),l.s1=u(" "),l.s2=u(" "),l.s0-=u(c),l.s0<0&&(l.s0+=1),l.s1-=u(c),l.s1<0&&(l.s1+=1),l.s2-=u(c),l.s2<0&&(l.s2+=1),u=null}function r(c,l){return l.c=c.c,l.s0=c.s0,l.s1=c.s1,l.s2=c.s2,l}function i(c,l){var u=new o(c),h=l&&l.state,d=u.next;return d.int32=function(){return u.next()*4294967296|0},d.double=function(){return d()+(d()*2097152|0)*11102230246251565e-32},d.quick=d,h&&(typeof h=="object"&&r(h,u),d.state=function(){return r(u,{})}),d}function a(){var c=4022871197,l=function(u){u=String(u);for(var h=0;h<u.length;h++){c+=u.charCodeAt(h);var d=.02519603282416938*c;c=d>>>0,d-=c,d*=c,c=d>>>0,d-=c,c+=d*4294967296}return(c>>>0)*23283064365386963e-26};return l}t&&t.exports?t.exports=i:this.alea=i})(Wk,n)})(Wa)),Wa.exports}var Ua={exports:{}},Gk=Ua.exports,Af;function Hk(){return Af||(Af=1,(function(n){(function(e,t,s){function o(a){var c=this,l="";c.x=0,c.y=0,c.z=0,c.w=0,c.next=function(){var h=c.x^c.x<<11;return c.x=c.y,c.y=c.z,c.z=c.w,c.w^=c.w>>>19^h^h>>>8},a===(a|0)?c.x=a:l+=a;for(var u=0;u<l.length+64;u++)c.x^=l.charCodeAt(u)|0,c.next()}function r(a,c){return c.x=a.x,c.y=a.y,c.z=a.z,c.w=a.w,c}function i(a,c){var l=new o(a),u=c&&c.state,h=function(){return(l.next()>>>0)/4294967296};return h.double=function(){do var d=l.next()>>>11,p=(l.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=l.next,h.quick=h,u&&(typeof u=="object"&&r(u,l),h.state=function(){return r(l,{})}),h}t&&t.exports?t.exports=i:this.xor128=i})(Gk,n)})(Ua)),Ua.exports}var Ga={exports:{}},qk=Ga.exports,Ff;function jk(){return Ff||(Ff=1,(function(n){(function(e,t,s){function o(a){var c=this,l="";c.next=function(){var h=c.x^c.x>>>2;return c.x=c.y,c.y=c.z,c.z=c.w,c.w=c.v,(c.d=c.d+362437|0)+(c.v=c.v^c.v<<4^(h^h<<1))|0},c.x=0,c.y=0,c.z=0,c.w=0,c.v=0,a===(a|0)?c.x=a:l+=a;for(var u=0;u<l.length+64;u++)c.x^=l.charCodeAt(u)|0,u==l.length&&(c.d=c.x<<10^c.x>>>4),c.next()}function r(a,c){return c.x=a.x,c.y=a.y,c.z=a.z,c.w=a.w,c.v=a.v,c.d=a.d,c}function i(a,c){var l=new o(a),u=c&&c.state,h=function(){return(l.next()>>>0)/4294967296};return h.double=function(){do var d=l.next()>>>11,p=(l.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=l.next,h.quick=h,u&&(typeof u=="object"&&r(u,l),h.state=function(){return r(l,{})}),h}t&&t.exports?t.exports=i:this.xorwow=i})(qk,n)})(Ga)),Ga.exports}var Ha={exports:{}},Kk=Ha.exports,Of;function Xk(){return Of||(Of=1,(function(n){(function(e,t,s){function o(a){var c=this;c.next=function(){var u=c.x,h=c.i,d,p;return d=u[h],d^=d>>>7,p=d^d<<24,d=u[h+1&7],p^=d^d>>>10,d=u[h+3&7],p^=d^d>>>3,d=u[h+4&7],p^=d^d<<7,d=u[h+7&7],d=d^d<<13,p^=d^d<<9,u[h]=p,c.i=h+1&7,p};function l(u,h){var d,p=[];if(h===(h|0))p[0]=h;else for(h=""+h,d=0;d<h.length;++d)p[d&7]=p[d&7]<<15^h.charCodeAt(d)+p[d+1&7]<<13;for(;p.length<8;)p.push(0);for(d=0;d<8&&p[d]===0;++d);for(d==8?p[7]=-1:p[d],u.x=p,u.i=0,d=256;d>0;--d)u.next()}l(c,a)}function r(a,c){return c.x=a.x.slice(),c.i=a.i,c}function i(a,c){a==null&&(a=+new Date);var l=new o(a),u=c&&c.state,h=function(){return(l.next()>>>0)/4294967296};return h.double=function(){do var d=l.next()>>>11,p=(l.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=l.next,h.quick=h,u&&(u.x&&r(u,l),h.state=function(){return r(l,{})}),h}t&&t.exports?t.exports=i:this.xorshift7=i})(Kk,n)})(Ha)),Ha.exports}var qa={exports:{}},Yk=qa.exports,Mf;function Jk(){return Mf||(Mf=1,(function(n){(function(e,t,s){function o(a){var c=this;c.next=function(){var u=c.w,h=c.X,d=c.i,p,f;return c.w=u=u+1640531527|0,f=h[d+34&127],p=h[d=d+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,f=h[d]=f^p,c.i=d,f+(u^u>>>16)|0};function l(u,h){var d,p,f,m,g,x=[],y=128;for(h===(h|0)?(p=h,h=null):(h=h+"\0",p=0,y=Math.max(y,h.length)),f=0,m=-32;m<y;++m)h&&(p^=h.charCodeAt((m+32)%h.length)),m===0&&(g=p),p^=p<<10,p^=p>>>15,p^=p<<4,p^=p>>>13,m>=0&&(g=g+1640531527|0,d=x[m&127]^=p+g,f=d==0?f+1:0);for(f>=128&&(x[(h&&h.length||0)&127]=-1),f=127,m=512;m>0;--m)p=x[f+34&127],d=x[f=f+1&127],p^=p<<13,d^=d<<17,p^=p>>>15,d^=d>>>12,x[f]=p^d;u.w=g,u.X=x,u.i=f}l(c,a)}function r(a,c){return c.i=a.i,c.w=a.w,c.X=a.X.slice(),c}function i(a,c){a==null&&(a=+new Date);var l=new o(a),u=c&&c.state,h=function(){return(l.next()>>>0)/4294967296};return h.double=function(){do var d=l.next()>>>11,p=(l.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=l.next,h.quick=h,u&&(u.X&&r(u,l),h.state=function(){return r(l,{})}),h}t&&t.exports?t.exports=i:this.xor4096=i})(Yk,n)})(qa)),qa.exports}var ja={exports:{}},Zk=ja.exports,_f;function Qk(){return _f||(_f=1,(function(n){(function(e,t,s){function o(a){var c=this,l="";c.next=function(){var h=c.b,d=c.c,p=c.d,f=c.a;return h=h<<25^h>>>7^d,d=d-p|0,p=p<<24^p>>>8^f,f=f-h|0,c.b=h=h<<20^h>>>12^d,c.c=d=d-p|0,c.d=p<<16^d>>>16^f,c.a=f-h|0},c.a=0,c.b=0,c.c=-1640531527,c.d=1367130551,a===Math.floor(a)?(c.a=a/4294967296|0,c.b=a|0):l+=a;for(var u=0;u<l.length+20;u++)c.b^=l.charCodeAt(u)|0,c.next()}function r(a,c){return c.a=a.a,c.b=a.b,c.c=a.c,c.d=a.d,c}function i(a,c){var l=new o(a),u=c&&c.state,h=function(){return(l.next()>>>0)/4294967296};return h.double=function(){do var d=l.next()>>>11,p=(l.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=l.next,h.quick=h,u&&(typeof u=="object"&&r(u,l),h.state=function(){return r(l,{})}),h}t&&t.exports?t.exports=i:this.tychei=i})(Zk,n)})(ja)),ja.exports}var Ka={exports:{}},eT={},tT=Object.freeze({__proto__:null,default:eT}),nT=zC(tT),sT=Ka.exports,Lf;function oT(){return Lf||(Lf=1,(function(n){(function(e,t,s){var o=256,r=6,i=52,a="random",c=s.pow(o,r),l=s.pow(2,i),u=l*2,h=o-1,d;function p(b,v,I){var T=[];v=v==!0?{entropy:!0}:v||{};var N=x(g(v.entropy?[b,w(t)]:b??y(),3),T),$=new f(T),S=function(){for(var C=$.g(r),R=c,F=0;C<l;)C=(C+F)*o,R*=o,F=$.g(1);for(;C>=u;)C/=2,R/=2,F>>>=1;return(C+F)/R};return S.int32=function(){return $.g(4)|0},S.quick=function(){return $.g(4)/4294967296},S.double=S,x(w($.S),t),(v.pass||I||function(C,R,F,z){return z&&(z.S&&m(z,$),C.state=function(){return m($,{})}),F?(s[a]=C,R):C})(S,N,"global"in v?v.global:this==s,v.state)}function f(b){var v,I=b.length,T=this,N=0,$=T.i=T.j=0,S=T.S=[];for(I||(b=[I++]);N<o;)S[N]=N++;for(N=0;N<o;N++)S[N]=S[$=h&$+b[N%I]+(v=S[N])],S[$]=v;(T.g=function(C){for(var R,F=0,z=T.i,M=T.j,B=T.S;C--;)R=B[z=h&z+1],F=F*o+B[h&(B[z]=B[M=h&M+R])+(B[M]=R)];return T.i=z,T.j=M,F})(o)}function m(b,v){return v.i=b.i,v.j=b.j,v.S=b.S.slice(),v}function g(b,v){var I=[],T=typeof b,N;if(v&&T=="object")for(N in b)try{I.push(g(b[N],v-1))}catch{}return I.length?I:T=="string"?b:b+"\0"}function x(b,v){for(var I=b+"",T,N=0;N<I.length;)v[h&N]=h&(T^=v[h&N]*19)+I.charCodeAt(N++);return w(v)}function y(){try{var b;return d&&(b=d.randomBytes)?b=b(o):(b=new Uint8Array(o),(e.crypto||e.msCrypto).getRandomValues(b)),w(b)}catch{var v=e.navigator,I=v&&v.plugins;return[+new Date,e,I,e.screen,w(t)]}}function w(b){return String.fromCharCode.apply(0,b)}if(x(s.random(),t),n.exports){n.exports=p;try{d=nT}catch{}}else s["seed"+a]=p})(typeof self<"u"?self:sT,[],Math)})(Ka)),Ka.exports}var du,Pf;function rT(){if(Pf)return du;Pf=1;var n=Uk(),e=Hk(),t=jk(),s=Xk(),o=Jk(),r=Qk(),i=oT();return i.alea=n,i.xor128=e,i.xorwow=t,i.xorshift7=s,i.xor4096=o,i.tychei=r,du=i,du}var Ad=rT();/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rx{constructor(e,t,s,o,r){this.mean=e,this.stdDev=t,this.dtype=s,this.nextVal=NaN,this.truncated=o,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const i=r||Math.random();this.random=Ad.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const o=this.nextVal;return this.nextVal=NaN,o}let e,t,s=!1;for(;!s;){let o,r,i;do o=2*this.random()-1,r=2*this.random()-1,i=o*o+r*r;while(i>=1||i===0);const a=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*o*a,t=this.mean+this.stdDev*r*a,(!this.truncated||this.isValidTruncated(e))&&(s=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class iT{constructor(e=0,t=1,s,o){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=s,o==null&&(o=Math.random()),typeof o=="number"&&(o=o.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Ad.alea(o)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aT(n,e=0,t=1,s,o){if(os(n),s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const r=new Rx(e,t,s,!1,o),i=we(n,s);for(let a=0;a<i.values.length;a++)i.values[a]=r.nextValue();return i.toTensor()}const cT=L({randomNormal_:aT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lT(n,e=0,t=1,s="float32",o){os(n);const r=we(n,s),i=new iT(e,t,null,o);for(let a=0;a<r.values.length;a++)r.values[a]=i.nextValue();return r.toTensor()}const ra=L({randomUniform_:lT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yr(n,e,t=1,s="float32"){if(t===0)throw new Error("Cannot have a step of zero");const o={start:n,stop:e,step:t,dtype:s};return O.runKernel(nd,{},o)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uT(n){const t={input:E(n,"input","real")};return O.runKernel(sd,t)}const ic=L({real_:uT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hT(n){const t={x:E(n,"x","reciprocal")};return O.runKernel(Li,t)}const dT=L({reciprocal_:hT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pT(n){const t={x:E(n,"x","relu")};return O.runKernel(Pi,t)}const Co=L({relu_:pT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fT(n){const t={x:E(n,"x","relu6")};return O.runKernel(zi,t)}const Dx=L({relu6_:fT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mT(n,e){const s={x:E(n,"x","reverse")},o={dims:e};return O.runKernel(bl,s,o)}const fo=L({reverse_:mT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gT(n){const t={x:E(n,"x","round")};return O.runKernel(Bi,t)}const Ax=L({round_:gT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xT(n){const t={x:E(n,"x","rsqrt","float32")};return O.runKernel(Vi,t)}const Fx=L({rsqrt_:xT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yT(n){const t={x:E(n,"x","selu")};return O.runKernel(Wi,t)}const Ox=L({selu_:yT});function bT(n,e,t,s,o,r=[1,1],i="NHWC"){const a=E(n,"x","separableConv2d"),c=E(e,"depthwiseFilter","separableConv2d"),l=E(t,"pointwiseFilter","separableConv2d");let u=a,h=!1;if(a.rank===3&&(h=!0,u=_(a,[1,a.shape[0],a.shape[1],a.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");k(u.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${u.rank}.`),k(c.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${c.rank}.`),k(l.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${c.rank}.`),k(l.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`),k(l.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`);const d=c.shape[2],p=c.shape[3];k(l.shape[2]===d*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${l.shape[2]}.`);const f=vd(u,c,s,o,i,r),g=ho(f,l,1,"valid",i);return h?_(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const Mx=L({separableConv2d_:bT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wT(n){const t={x:E(n,"x","sign")};return O.runKernel(Hi,t)}const vT=L({sign_:wT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CT(n){const t={x:E(n,"x","sin","float32")};return O.runKernel(Ui,t)}const _x=L({sin_:CT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IT(n){const t={x:E(n,"x","sinh")};return O.runKernel(Gi,t)}const Lx=L({sinh_:IT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $T(n,e,t){const s=E(n,"x","slice1d");return k(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),Ve(s,[e],[t])}const Fd=L({slice1d_:$T});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ST(n,e,t){const s=E(n,"x","slice2d");return k(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),Ve(s,e,t)}const Px=L({slice2d_:ST});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kT(n,e,t){const s=E(n,"x","slice3d");return k(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),Ve(s,e,t)}const Od=L({slice3d_:kT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TT(n,e,t){const s=E(n,"x","slice4d");return k(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),Ve(s,e,t)}const ac=L({slice4d_:TT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NT(n,e=-1){const t=E(n,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);const s={logits:t},o={dim:e};return O.runKernel(Sl,s,o)}const Md=L({softmax_:NT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ET(n){k(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const e={input:n};return O.runKernel(Hh,e)}const zx=L({fft_:ET});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RT(n){k(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const e={input:n};return O.runKernel(Kh,e)}const Ku=L({ifft_:RT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DT(n){const e=n.shape[n.shape.length-1],t=n.size/e;let s;if(e<=2){const o=_(n,[t,e]);s=Ku(o)}else{const o=[t,2*(e-1)],r=_(ic(n),[t,e]),i=_($d(n),[t,e]),a=fo(Ve(r,[0,1],[t,e-2]),1),c=A(fo(Ve(i,[0,1],[t,e-2]),1),Ee(-1)),l=zt([r,a],1),u=zt([i,c],1),h=_(io(l,u),[o[0],o[1]]);s=Ku(h)}if(s=ic(s),n.rank===3&&n.shape[0]!==0){const o=s,r=n.shape[0];s=_(s,[r,s.shape[0]/r,s.shape[1]]),o.dispose()}return s}const AT=L({irfft_:DT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FT(n,e,t=0){const o={x:E(n,"x","split")},r={numOrSizeSplits:e,axis:t};return O.runKernel($l,o,r)}const en=L({split_:FT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OT(n,e){k(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let t=n.shape[n.shape.length-1];const s=n.size/t;let o;if(e!=null&&e<t){const f=n.shape.map(g=>0),m=n.shape.map(g=>g);m[n.shape.length-1]=e,o=Ve(n,f,m),t=e}else if(e!=null&&e>t){const f=n.shape.map(m=>m);f[n.shape.length-1]=e-t,o=zt([n,We(f)],n.shape.length-1),t=e}else o=n;const r=Se(o),i=_(io(o,r),[s,t]),a=zx(i),c=Math.floor(t/2)+1,l=ic(a),u=$d(a),h=en(l,[c,t-c],l.shape.length-1),d=en(u,[c,t-c],u.shape.length-1),p=o.shape.slice();return p[o.shape.length-1]=c,_(io(h[0],d[0]),p)}const MT=L({rfft_:OT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _T(n,e){let t=E(n,"a","squaredDifference"),s=E(e,"b","squaredDifference");[t,s]=et(t,s),me(t.shape,s.shape);const o={a:t,b:s},r={};return O.runKernel(Xi,o,r)}const LT=L({squaredDifference_:_T});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PT(n,e){const t=E(n,"x","squeeze","string_or_numeric");return _(t,As(t.shape,e).newShape)}const ia=L({squeeze_:PT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zT(n,e=0){const t=ix(n,"tensors","stack","string_or_numeric");k(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&k(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");const s=t,o={axis:e};return O.runKernel(dl,s,o)}const ts=L({stack_:zT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BT(n,e=0){const s={x:E(n,"x","step")},o={alpha:e};return O.runKernel(ea,s,o)}const aa=L({step_:BT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VT(n,e,t,s,o=0,r=0,i=0,a=0,c=0){const u={x:E(n,"x","stridedSlice","string_or_numeric")},h={begin:e,end:t,strides:s,beginMask:o,endMask:r,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:c};return O.runKernel(cd,u,h)}const WT=L({stridedSlice_:VT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UT(n){const t={x:E(n,"x","tan","float32")};return O.runKernel(Ji,t)}const GT=L({tan_:UT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qt(n,e){Ch(n);const t=ta(n,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return na(n,null,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function to(n,e,t){if(Ch(n),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=ta(n,t);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return na(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HT(n,e,t){Ch(n);const s=ta(n,t);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return na(n,e,s,t)}function Bx(n,e,t){const s=e.rank>1?e.shape[e.rank-1]:1,o=e.rank>1?e.rank-1:1,r=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${n}, sliceDim: ${s}, and batchDim: ${o}.`;if(t.rank<o)throw new Error(r+` update.rank < ${o}. `);if(n.length<s+(t.rank-o))throw new Error(r+` Output shape length < ${s+(t.rank-o)}`);if(t.rank!==o+n.length-s)throw new Error(r+` update.rank != ${o+n.length-s}`);for(let i=0;i<o;++i)if(t.shape[i]!==e.shape[i])throw new Error(r+` updates.shape[${i}] (${t.shape[i]}) != indices.shape[${i}] (${e.shape[i]}).`);for(let i=0;i<t.rank-o;++i)if(t.shape[i+o]!==n[i+s])throw new Error(r+` updates.shape[${i+o}] (${t.shape[i+o]}) != shape[${i+o}] (${n[i+o]})`)}function qT(n,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}Bx(t,e,n)}function Io(n,e,t){const s=e.shape.length,o=s>1?e.shape[s-1]:1,r=t.length;let i=1;for(let h=o;h<r;++h)i*=t[h];const a=o<1?1:o,c=j(e.shape)/a,l=[...ce(t.slice(0,o)),1],u=j(t);return{sliceRank:o,numUpdates:c,sliceSize:i,strides:l,outputSize:u}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jT(n,e=1,t=!0){const s=E(n,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const o=s.shape[s.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${e}`);const r={x:s},i={k:e,sorted:t},[a,c]=O.runKernel(ld,r,i);return{values:a,indices:c}}const KT=L({topk_:jT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XT(n,e=0,t=1,s,o){if(os(n),s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const r=new Rx(e,t,s,!0,o),i=we(n,s);for(let a=0;a<i.values.length;a++)i.values[a]=r.nextValue();return i.toTensor()}const Vx=L({truncatedNormal_:XT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YT(n,e=0){const t=E(n,"x","unique","string_or_numeric");k(t.rank>0,()=>"The input tensor must be at least 1D");const s={x:t},o={axis:e},[r,i]=O.runKernel(hd,s,o);return{values:r,indices:i}}const JT=L({unique_:YT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZT(n,e,t){const s=E(n,"x","unsortedSegmentSum"),o=E(e,"segmentIds","unsortedSegmentSum","int32");k(Xo(t),()=>"numSegments must be of dtype int");const r={x:s,segmentIds:o},i={numSegments:t};return O.runKernel(Tl,r,i)}const Wx=L({unsortedSegmentSum_:ZT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QT(n,e=0){const t=E(n,"x","unstack","string_or_numeric");k(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);const s={value:t},o={axis:e};return O.runKernel(kl,s,o)}const mo=L({unstack_:QT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e2(n,e=!0,t,s){return O.makeVariable(n,e,t,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ux(n,e){const t=[];for(let r=0;r<e.length;r++)e[r]&&t.push(r);const s=we(n,"int32"),o=we([t.length,n.length],"int32");for(let r=0;r<t.length;r++){const i=s.indexToLoc(t[r]),a=r*n.length;o.values.set(i,a)}return o.toTensor()}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t2(n,e,t){const s=E(n,"x","transpose");if(e==null&&(e=s.shape.map((i,a)=>a).reverse()),k(s.rank===e.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${e}.`),e.forEach(i=>{k(i>=0&&i<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${e}`)}),s.rank<=1)return s.clone();const o={x:s},r={perm:e};return s.dtype==="complex64"?V(()=>{let i=ic(s),a=$d(s);return i=O.runKernel(Uo,{x:i},r),a=O.runKernel(Uo,{x:a},r),t&&(a=Qe(a)),io(i,a)}):O.runKernel(Uo,o,r)}const $e=L({transpose_:t2});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n2(n,e){if(e==null)return n.shape.slice();if(Re(n.shape,e))return e;if(n.shape.length===e.length){const t=[];for(let s=0;s<n.shape.length;s++)e[s]==null&&n.shape[s]!=null?t.push(n.shape[s]):t.push(e[s]);return t}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s2(n,e,t,s){const o=E(n,"x","dropout");if(k(o.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${o.dtype} tensor instead.`),k(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return n instanceof it?o.clone():o;const r=n2(o,t),i=1-e,a=ue(Ml(Z(ra(r,0,1,"float32",s),i)),i);return A(o,a)}const o2=L({dropout_:s2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r2(n,e,t,s,o,r="NHWC",i){let a=n;n.rank===3&&(a=_(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let c=e;c.rank===3&&(c=_(e,[1,e.shape[0],e.shape[1],e.shape[2]])),k(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),k(c.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${c.shape}.`),k(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);const l=r==="NHWC"?a.shape[3]:a.shape[1],u=r==="NHWC"?c.shape[3]:c.shape[1];k(l===t[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${t[2]}.`),k(u===t[3],()=>`Error in conv2dDerFilter: depth of dy (${u}) must match output depth for filter (${t[3]}).`),Wt("conv2dDerFilter",o,i);const h={x:a,dy:c},d={strides:s,pad:o,dataFormat:r,dimRoundingMode:i,filterShape:t};return O.runKernel(Oh,h,d)}const _d=L({conv2DBackpropFilter_:r2});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ld(n,e,t){if(t==null||t==="linear")return n;if(t==="relu")return A(n,aa(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function Pd(n,e){let t=e;const s=dt(n.shape,e.shape);return s.length>0&&(t=le(t,s)),_(t,n.shape)}function zd(n,e,t,s){if(e==="linear")return n;if(e==="relu")return Co(n);if(e==="elu")return Fl(n);if(e==="relu6")return Dx(n);if(e==="prelu")return Dd(n,t);if(e==="leakyrelu")return Sd(n,s);if(e==="sigmoid")return dr(n);throw new Error(`Unknown fused activation ${e}.`)}const Bd=(n,e)=>!(n>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i2({x:n,filter:e,strides:t,pad:s,dataFormat:o="NHWC",dilations:r=[1,1],dimRoundingMode:i,bias:a,activation:c="linear",preluActivationWeights:l,leakyreluAlpha:u}){if(c=c||"linear",Bd(O.state.gradientDepth,c)===!1){k(o==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${o} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let I=ho(n,e,t,s,o,r,i);return a!=null&&(I=Z(I,a)),zd(I,c,l,u)}const h=E(n,"x","conv2d","float32"),d=E(e,"filter","conv2d","float32");let p=h,f=!1;h.rank===3&&(f=!0,p=_(h,[1,h.shape[0],h.shape[1],h.shape[2]])),k(p.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),k(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),Wt("fused conv2d",s,i);const m=o==="NHWC"?p.shape[3]:p.shape[1];k(d.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`),k(Tt(t,r),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${r}'`);const g=vt(p.shape,d.shape,t,r,s,i);let x;a!=null&&(x=E(a,"bias","fused conv2d"),[x]=et(x,h),o==="NHWC"?me(g.outShape,x.shape):(k(x.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${x.shape.length}.`),k(x.shape.length===0||x.shape[0]===g.outChannels||x.shape[0]===1,()=>`Error in fused conv2d: bias shape (${x.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let y;if(l!=null){const I=l.shape;if(k(I.length<=1||I.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${I.length}.`),I.length===1)k(I[0]===1||I[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${I}) is not compatible with the number of output channels (${g.outChannels}).`);else if(I.length===3)try{me(I,g.outShape)}catch{const N=`Error in fused conv2d: PReLU activation weights (${I}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(N)}y=E(l,"prelu weights","fused conv2d")}const w=(I,T)=>{k(o==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${o} but only NHWC is currently supported.`);const[N,$,S,C]=T,R=Ld(I,S,c);k(lo(r),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const F=bd($.shape,R,N,t,s),z=_d($,R,N.shape,t,s),M=[F,z];if(C!=null){const B=Pd(C,R);M.push(B)}return M},b={x:p,filter:d,bias:x,preluActivationWeights:y},v={strides:t,pad:s,dataFormat:o,dilations:r,dimRoundingMode:i,activation:c,leakyreluAlpha:u};return a==null?Qo((T,N,$)=>{let S=O.runKernel(Qa,b,v);return $([N,T,S]),f&&(S=_(S,[S.shape[1],S.shape[2],S.shape[3]])),{value:S,gradFunc:w}})(p,d):Qo((T,N,$,S)=>{let C=O.runKernel(Qa,b,v);return S([N,T,C,$]),f&&(C=_(C,[C.shape[1],C.shape[2],C.shape[3]])),{value:C,gradFunc:w}})(p,d,x)}const a2=L({fusedConv2d_:i2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c2(n,e,t,s,o,r=[1,1],i){let a=n;n.rank===3&&(a=_(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let c=e;c.rank===3&&(c=_(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={x:a,dy:c},u={strides:s,pad:o,dimRoundingMode:i,dilations:r,filterShape:t};return O.runKernel(Vh,l,u)}const l2=L({depthwiseConv2dNativeBackpropFilter_:c2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u2(n,e,t,s,o,r=[1,1],i){let a=e,c=!1;e.rank===3&&(c=!0,a=_(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={dy:a,filter:t},u={strides:s,pad:o,dimRoundingMode:i,dilations:r,inputShape:n},h=O.runKernel(Wh,l,u);return c?_(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const h2=L({depthwiseConv2dNativeBackpropInput_:u2});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d2({a:n,b:e,transposeA:t=!1,transposeB:s=!1,bias:o,activation:r="linear",preluActivationWeights:i,leakyreluAlpha:a=.2}){if(Bd(O.state.gradientDepth,r)===!1){let C=Ne(n,e,t,s);return o!=null&&(C=Z(C,o)),zd(C,r,i,a)}let c=E(n,"a","fused matMul"),l=E(e,"b","fused matMul");[c,l]=et(c,l);const u=t?c.shape[c.rank-2]:c.shape[c.rank-1],h=s?l.shape[l.rank-1]:l.shape[l.rank-2],d=t?c.shape[c.rank-1]:c.shape[c.rank-2],p=s?l.shape[l.rank-2]:l.shape[l.rank-1],f=c.shape.slice(0,-2),m=l.shape.slice(0,-2),g=j(f),x=j(m);k(u===h,()=>`Error in fused matMul: inner shapes (${u}) and (${h}) of Tensors with shapes ${c.shape} and ${l.shape} and transposeA=${t} and transposeB=${s} must match.`);const w=me(c.shape.slice(0,-2),l.shape.slice(0,-2)).concat([d,p]),b=t?_(c,[g,u,d]):_(c,[g,d,u]),v=s?_(l,[x,p,h]):_(l,[x,h,p]);let I;o!=null&&(I=E(o,"bias","fused matMul"),[I]=et(I,c),me(w,I.shape));let T;i!=null&&(T=E(i,"prelu weights","fused matMul"));const N=(C,R)=>{const[F,z,M,B]=R,H=Ld(_(C,M.shape),M,r);let P,U;if(!t&&!s?(P=Ne(H,z,!1,!0),U=Ne(F,H,!0,!1)):!t&&s?(P=Ne(H,z,!1,!1),U=Ne(H,F,!0,!1)):t&&!s?(P=Ne(z,H,!1,!0),U=Ne(F,H,!1,!1)):(P=Ne(z,H,!0,!0),U=Ne(H,F,!0,!0)),o!=null){const G=Pd(B,H);return[P,U,G]}else return[P,U]},$={a:b,b:v,bias:I,preluActivationWeights:T},S={transposeA:t,transposeB:s,activation:r,leakyreluAlpha:a};return o==null?Qo((R,F,z)=>{const M=O.runKernel(Za,$,S);return z([R,F,M]),{value:_(M,w),gradFunc:N}})(b,v):Qo((R,F,z,M)=>{const B=O.runKernel(Za,$,S);return M([R,F,B,z]),{value:_(B,w),gradFunc:N}})(b,v,I)}const zf=L({fusedMatMul_:d2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p2(n,e,t,s,o="bilinear",r=0){const i=E(n,"image","cropAndResize"),a=E(e,"boxes","cropAndResize","float32"),c=E(t,"boxInd","cropAndResize","int32"),l=a.shape[0];k(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),k(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${a.shape}.`),k(c.rank===1&&c.shape[0]===l,()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${a.shape}.`),k(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),k(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),k(o==="bilinear"||o==="nearest",()=>`method must be bilinear or nearest, but was ${o}`);const u={image:i,boxes:a,boxInd:c},h={method:o,extrapolationValue:r,cropSize:s};return O.runKernel(Ph,u,h)}const f2=L({cropAndResize_:p2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m2(n){const e=E(n,"image","flipLeftRight","float32");k(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const t={image:e};return O.runKernel(jh,t,{})}const g2=L({flipLeftRight_:m2});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x2(n){const e=E(n,"image","grayscaleToRGB"),t=e.rank-1,s=e.shape[t];k(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),k(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const o=new Array(e.rank);return o.fill(1,0,t),o[t]=3,In(e,o)}const y2=L({grayscaleToRGB_:x2});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b2(n){const e=E(n,"image","RGBToGrayscale"),t=e.rank-1,s=e.shape[t];k(e.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${e.rank}.`),k(s===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${s}.`);const o=e.dtype,r=se(e,"float32"),i=qt([.2989,.587,.114]);let a;switch(e.rank){case 2:a=Er("ij,j->i",r,i);break;case 3:a=Er("ijk,k->ij",r,i);break;case 4:a=Er("ijkl,l->ijk",r,i);break;case 5:a=Er("ijklm,m->ijkl",r,i);break;case 6:a=Er("ijklmn,n->ijklm",r,i);break;default:throw new Error("Not a valid tensor rank.")}return a=Lt(a,-1),se(a,o)}const w2=L({rgbToGrayscale_:b2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v2(n,e,t=0,s=.5){const o=E(n,"image","rotateWithOffset","float32");k(o.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${o.rank}.`);const r={image:o},i={radians:e,fillValue:t,center:s};return O.runKernel(dd,r,i)}const C2=L({rotateWithOffset_:v2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fr(n,e,t,s,o,r){s==null&&(s=.5),o==null&&(o=Number.NEGATIVE_INFINITY),r==null&&(r=0);const i=n.shape[0];return t=Math.min(t,i),k(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),k(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),k(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),k(e.rank===1,()=>"scores must be a 1D tensor"),k(e.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${e.shape[0]}`),k(0<=r&&r<=1,()=>`softNmsSigma must be in [0, 1], but was '${r}'`),{maxOutputSize:t,iouThreshold:s,scoreThreshold:o,softNmsSigma:r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I2(n,e,t,s=.5,o=Number.NEGATIVE_INFINITY){const r=E(n,"boxes","nonMaxSuppression","float32"),i=E(e,"scores","nonMaxSuppression","float32"),a=fr(r,i,t,s,o);t=a.maxOutputSize,s=a.iouThreshold,o=a.scoreThreshold;const c={maxOutputSize:t,iouThreshold:s,scoreThreshold:o};return O.runKernel(Qh,{boxes:r,scores:i},c)}const $2=L({nonMaxSuppression_:I2});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S2(n,e,t){const s=k2(n,e,t),o=s<0?-(s+1):s;n.splice(o,0,e)}function k2(n,e,t){return N2(n,e,t||T2)}function T2(n,e){return n>e?1:n<e?-1:0}function N2(n,e,t){let s=0,o=n.length,r=0,i=!1;for(;s<o;){r=s+(o-s>>>1);const a=t(e,n[r]);a>0?s=r+1:(o=r,i=!a)}return i?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vd(n,e,t,s,o){return Gd(n,e,t,s,o,0)}function Wd(n,e,t,s,o,r){return Gd(n,e,t,s,o,0,!1,r,!0)}function Ud(n,e,t,s,o,r){return Gd(n,e,t,s,o,r,!0)}function Gd(n,e,t,s,o,r,i=!1,a=!1,c=!1){const l=[];for(let g=0;g<e.length;g++)e[g]>o&&l.push({score:e[g],boxIndex:g,suppressBeginIndex:0});l.sort(Bf);const u=r>0?-.5/r:0,h=[],d=[];for(;h.length<t&&l.length>0;){const g=l.pop(),{score:x,boxIndex:y,suppressBeginIndex:w}=g;if(x<o)break;let b=!1;for(let v=h.length-1;v>=w;--v){const I=E2(n,y,h[v]);if(I>=s){b=!0;break}if(g.score=g.score*R2(s,u,I),g.score<=o)break}g.suppressBeginIndex=h.length,b||(g.score===x?(h.push(y),d.push(g.score)):g.score>o&&S2(l,g,Bf))}const p=h.length,f=t-p;a&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=d),c&&(m.validOutputs=p),m}function E2(n,e,t){const s=n.subarray(e*4,e*4+4),o=n.subarray(t*4,t*4+4),r=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),a=Math.max(s[0],s[2]),c=Math.max(s[1],s[3]),l=Math.min(o[0],o[2]),u=Math.min(o[1],o[3]),h=Math.max(o[0],o[2]),d=Math.max(o[1],o[3]),p=(a-r)*(c-i),f=(h-l)*(d-u);if(p<=0||f<=0)return 0;const m=Math.max(r,l),g=Math.max(i,u),x=Math.min(a,h),y=Math.min(c,d),w=Math.max(x-m,0)*Math.max(y-g,0);return w/(p+f-w)}function R2(n,e,t){const s=Math.exp(e*t*t);return t<=n?s:0}function Bf(n,e){return n.score-e.score||n.score===e.score&&e.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function D2(n,e,t,s=.5,o=Number.NEGATIVE_INFINITY){const r=E(n,"boxes","nonMaxSuppressionAsync"),i=E(e,"scores","nonMaxSuppressionAsync"),a=fr(r,i,t,s,o);t=a.maxOutputSize,s=a.iouThreshold,o=a.scoreThreshold;const c=await Promise.all([r.data(),i.data()]),l=c[0],u=c[1],{selectedIndices:h}=Vd(l,u,t,s,o);return r!==n&&r.dispose(),i!==e&&i.dispose(),qt(h,"int32")}const A2=D2;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F2(n,e,t,s=.5,o=Number.NEGATIVE_INFINITY,r=0){const i=E(n,"boxes","nonMaxSuppression"),a=E(e,"scores","nonMaxSuppression"),c=fr(i,a,t,s,o,r);t=c.maxOutputSize,s=c.iouThreshold,o=c.scoreThreshold,r=c.softNmsSigma;const l={boxes:i,scores:a},u={maxOutputSize:t,iouThreshold:s,scoreThreshold:o,softNmsSigma:r},h=O.runKernel(td,l,u);return{selectedIndices:h[0],selectedScores:h[1]}}const O2=L({nonMaxSuppressionWithScore_:F2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function M2(n,e,t,s=.5,o=Number.NEGATIVE_INFINITY,r=0){const i=E(n,"boxes","nonMaxSuppressionAsync"),a=E(e,"scores","nonMaxSuppressionAsync"),c=fr(i,a,t,s,o,r);t=c.maxOutputSize,s=c.iouThreshold,o=c.scoreThreshold,r=c.softNmsSigma;const l=await Promise.all([i.data(),a.data()]),u=l[0],h=l[1],{selectedIndices:d,selectedScores:p}=Ud(u,h,t,s,o,r);return i!==n&&i.dispose(),a!==e&&a.dispose(),{selectedIndices:qt(d,"int32"),selectedScores:qt(p)}}const _2=M2;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L2(n,e,t,s=.5,o=Number.NEGATIVE_INFINITY,r=!1){const i=E(n,"boxes","nonMaxSuppression"),a=E(e,"scores","nonMaxSuppression"),c=fr(i,a,t,s,o,null),l=c.maxOutputSize,u=c.iouThreshold,h=c.scoreThreshold,d={boxes:i,scores:a},p={maxOutputSize:l,iouThreshold:u,scoreThreshold:h,padToMaxOutputSize:r},f=O.runKernel(ed,d,p);return{selectedIndices:f[0],validOutputs:f[1]}}const P2=L({nonMaxSuppressionPadded_:L2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function z2(n,e,t,s=.5,o=Number.NEGATIVE_INFINITY,r=!1){const i=E(n,"boxes","nonMaxSuppressionAsync"),a=E(e,"scores","nonMaxSuppressionAsync"),c=fr(i,a,t,s,o,null),l=c.maxOutputSize,u=c.iouThreshold,h=c.scoreThreshold,[d,p]=await Promise.all([i.data(),a.data()]),{selectedIndices:f,validOutputs:m}=Wd(d,p,l,u,h,r);return i!==n&&i.dispose(),a!==e&&a.dispose(),{selectedIndices:qt(f,"int32"),validOutputs:Ee(m,"int32")}}const B2=z2;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V2(n,e,t=!1,s=!1){const o=E(n,"images","resizeBilinear");k(o.rank===3||o.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${o.rank}.`),k(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),k(s===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let r=o,i=!1;o.rank===3&&(i=!0,r=_(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const a={images:r},c={alignCorners:t,halfPixelCenters:s,size:e},l=O.runKernel(yl,a,c);return i?_(l,[l.shape[1],l.shape[2],l.shape[3]]):l}const Gx=L({resizeBilinear_:V2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W2(n,e,t=!1,s=!1){const o=E(n,"images","resizeNearestNeighbor");k(o.rank===3||o.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${o.rank}.`),k(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),k(o.dtype==="float32"||o.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),k(s===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let r=o,i=!1;o.rank===3&&(i=!0,r=_(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const a={images:r},c={alignCorners:t,halfPixelCenters:s,size:e},l=O.runKernel(xl,a,c);return i?_(l,[l.shape[1],l.shape[2],l.shape[3]]):l}const Hx=L({resizeNearestNeighbor_:W2});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U2(n,e="binary",t=!1,s=.5){const o=E(n,"image","threshold"),r=.2989,i=.587,a=.114,c=o.shape[0]*o.shape[1];let l=A(qt([s]),255),u,h,d,p;if(k(o.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${o.rank}.`),k(o.shape[2]===3||o.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${o.shape[2]}.`),k(o.dtype==="int32"||o.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${o.dtype}.`),k(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),o.shape[2]===3){[u,h,d]=en(o,[1,1,1],-1);const g=A(u,r),x=A(h,i),y=A(d,a);p=Z(Z(g,x),y)}else p=n;if(e==="otsu"){const g=z$(se(Ax(p),"int32"),Wr([]),256);l=G2(g,c)}const f=t?pr(p,l):nn(p,l);return se(A(f,255),"int32")}function G2(n,e){let t=qt([-1]),s=qt([0]),o=qt([0]),r,i,a,c,l,u;for(let h=0;h<n.size-1;h++){r=Ve(n,0,h+1),i=Ve(n,h+1),l=ue(le(r),e),u=ue(le(i),e);const d=le(A(r,Yr(0,r.size)));a=ue(d,le(r));const p=Al(i.shape,r.size),f=Z(Yr(0,i.size),p),m=A(i,f);c=ue(le(m),le(i));const g=pe(a,c),x=pe(a,c),y=A(l,u);o=A(A(y,g),x);const w=nn(o,s);s=Ft(w,o,s),t=Ft(w,qt([h]),t)}return t}const H2=L({threshold_:U2});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q2(n,e,t="nearest",s="constant",o=0,r){const i=E(n,"image","transform","float32"),a=E(e,"transforms","transform","float32");k(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),k(a.rank===2&&(a.shape[0]===i.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),k(r==null||r.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${r}.`);const c={image:i,transforms:a},l={interpolation:t,fillMode:s,fillValue:o,outputShape:r};return O.runKernel(ud,c,l)}const j2=L({transform_:q2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K2(n,e,t){const s=E(n,"a","bandPart");k(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const o=s.shape,[r,i]=s.shape.slice(-2);let a,c;typeof e=="number"?(k(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),k(e<=r,()=>`bandPart(): numLower (${e}) must not be greater than the number of rows (${r}).`),a=E(e<0?r:e,"numLower","bandPart")):(k(e.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),a=Ft(oc(e,0),r,Xr(e,r))),typeof t=="number"?(k(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`),k(t<=i,()=>`bandPart(): numUpper (${t}) must not be greater than the number of columns (${i}).`),c=E(t<0?i:t,"numUpper","bandPart")):(k(t.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),c=Ft(oc(t,0),i,Xr(t,i)));const l=_(Yr(0,r,1,"int32"),[-1,1]),u=Yr(0,i,1,"int32"),h=pe(l,u),d=es(pr(h,a),vo(h,Qe(c))),p=We([r,i],s.dtype);return _(ts(mo(_(s,[-1,r,i])).map(f=>Ft(d,f,p))),o)}const X2=L({bandPart_:K2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y2(n){let e;if(Array.isArray(n)){e=!1,k(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const o=n[0].shape[0];for(let r=1;r<n.length;++r)k(n[r].shape[0]===o,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[r].shape[0]} vs. ${o})`)}else e=!0,n=en(n,n.shape[0],0).map(o=>ia(o,[0]));k(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const t=[],s=n;for(let o=0;o<n.length;++o)t.push(O.tidy(()=>{let r=s[o];if(o>0)for(let i=0;i<o;++i){const a=A(le(A(t[i],r)),t[i]);r=pe(r,a)}return ue(r,Ol(r,"euclidean"))}));return e?ts(t,0):t}const J2=L({gramSchmidt_:Y2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z2(n,e=!1){if(k(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return Vf(n,e);{const t=n.shape.slice(0,n.shape.length-2).reduce((c,l)=>c*l),s=mo(_(n,[t,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),o=[],r=[];s.forEach(c=>{const[l,u]=Vf(c,e);o.push(l),r.push(u)});const i=_(ts(o,0),n.shape),a=_(ts(r,0),n.shape);return[i,a]}}function Vf(n,e=!1){return O.tidy(()=>{k(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const t=n.shape[0],s=n.shape[1];let o=$x(t),r=eo(n);const i=to([[1]],[1,1]);let a=eo(i);const c=t>=s?s:t;for(let l=0;l<c;++l){const u=r,h=a,d=o;[a,r,o]=O.tidy(()=>{const p=Ve(r,[l,l],[t-l,1]),f=Ol(p),m=Ve(r,[l,l],[1,1]),g=Ft(nn(m,0),to([[-1]]),to([[1]])),x=pe(m,A(g,f)),y=ue(p,x);y.shape[0]===1?a=eo(i):a=zt([i,Ve(y,[1,0],[y.shape[0]-1,y.shape[1]])],0);const w=Qe(ue(Ne(g,x),f)),b=Ve(r,[l,0],[t-l,s]),v=A(w,a),I=$e(a);if(l===0)r=pe(b,Ne(v,Ne(I,b)));else{const $=pe(b,Ne(v,Ne(I,b)));r=zt([Ve(r,[0,0],[l,s]),$],0)}const T=$e(v),N=Ve(o,[0,l],[t,o.shape[1]-l]);if(l===0)o=pe(N,Ne(Ne(N,a),T));else{const $=pe(N,Ne(Ne(N,a),T));o=zt([Ve(o,[0,0],[t,l]),$],1)}return[a,r,o]}),be([u,h,d])}return!e&&t>s&&(o=Ve(o,[0,0],[t,s]),r=Ve(r,[0,0],[s,s])),[o,r]})}const Q2=L({qr_:Z2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qn={flipLeftRight:g2,grayscaleToRGB:y2,resizeNearestNeighbor:Hx,resizeBilinear:Gx,rgbToGrayscale:w2,rotateWithOffset:C2,cropAndResize:f2,nonMaxSuppression:$2,nonMaxSuppressionAsync:A2,nonMaxSuppressionWithScore:O2,nonMaxSuppressionWithScoreAsync:_2,nonMaxSuppressionPadded:P2,nonMaxSuppressionPaddedAsync:B2,threshold:H2,transform:j2},eN={bandPart:X2,gramSchmidt:J2,qr:Q2};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tN=new Map,nN=new Map;class mr{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class ln{constructor(){this.classNameMap={}}static getMap(){return ln.instance==null&&(ln.instance=new ln),ln.instance}static register(e){ln.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function J(n,e,t){k(n.className!=null,()=>"Class being registered does not have the static className property defined."),k(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),k(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof e>"u"&&(e="Custom"),typeof t>"u"&&(t=n.className);const s=t,o=e+">"+s;return ln.register(n),tN.set(o,n),nN.set(n,o),n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zs extends mr{minimize(e,t=!1,s){const{value:o,grads:r}=this.computeGradients(e,s);if(s!=null){const i=s.map(a=>({name:a.name,tensor:r[a.name]}));this.applyGradients(i)}else this.applyGradients(r);return be(r),t?o:(o.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return ik(e,t)}dispose(){this.iterations_!=null&&be(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Ee(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(zs,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qx extends zs{static get className(){return"Adadelta"}constructor(e,t,s=null){super(),this.learningRate=e,this.rho=t,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=O.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,o)=>{const r=O.registeredVariables[s],i=!1;this.accumulatedGrads[o]==null&&(this.accumulatedGrads[o]={originalName:`${s}/accum_grad`,variable:V(()=>Se(r).variable(i))}),this.accumulatedUpdates[o]==null&&(this.accumulatedUpdates[o]={originalName:`${s}/accum_var`,variable:V(()=>Se(r).variable(i))});const a=Array.isArray(e)?e[o].tensor:e[s];if(a==null)return;const c=this.accumulatedGrads[o].variable,l=this.accumulatedUpdates[o].variable;V(()=>{const u=Z(A(c,this.rho),A(Ge(a),1-this.rho)),h=A(ue(kt(Z(l,this.epsilon)),kt(Z(c,this.epsilon))),a),d=Z(A(l,this.rho),A(Ge(h),1-this.rho));c.assign(u),l.assign(d);const p=Z(A(h,-this.learningRate),r);r.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(be(this.accumulatedGrads.map(e=>e.variable)),be(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,s=!1;this.accumulatedGrads=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(s)})),this.accumulatedUpdates=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jx extends zs{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,o)=>{const r=O.registeredVariables[s];this.accumulatedGrads[o]==null&&(this.accumulatedGrads[o]={originalName:`${s}/accumulator`,variable:V(()=>Al(r.shape,this.initialAccumulatorValue).variable(!1))});const i=Array.isArray(e)?e[o].tensor:e[s];if(i==null)return;const a=this.accumulatedGrads[o].variable;V(()=>{const c=Z(a,Ge(i));a.assign(c);const l=Z(A(ue(i,kt(Z(c,O.backend.epsilon()))),-this.learningRate),r);r.assign(l)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&be(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kx extends zs{static get className(){return"Adam"}constructor(e,t,s,o=null){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=o,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],V(()=>{this.accBeta1=Ee(t).variable(),this.accBeta2=Ee(s).variable()}),o==null&&(this.epsilon=O.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);V(()=>{const s=pe(1,this.accBeta1),o=pe(1,this.accBeta2);t.forEach((r,i)=>{const a=O.registeredVariables[r],c=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${r}/m`,variable:V(()=>Se(a).variable(c))}),this.accumulatedSecondMoment[i]==null&&(this.accumulatedSecondMoment[i]={originalName:`${r}/v`,variable:V(()=>Se(a).variable(c))});const l=Array.isArray(e)?e[i].tensor:e[r];if(l==null)return;const u=this.accumulatedFirstMoment[i].variable,h=this.accumulatedSecondMoment[i].variable,d=Z(A(u,this.beta1),A(l,1-this.beta1)),p=Z(A(h,this.beta2),A(Ge(l),1-this.beta2)),f=ue(d,s),m=ue(p,o);u.assign(d),h.assign(p);const g=Z(A(ue(f,Z(kt(m),this.epsilon)),-this.learningRate),a);a.assign(g)}),this.accBeta1.assign(A(this.accBeta1,this.beta1)),this.accBeta2.assign(A(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&be(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&be(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),V(()=>{this.accBeta1.assign(po(this.beta1,this.iterations_+1)),this.accBeta2.assign(po(this.beta2,this.iterations_+1))});const t=e.length/2,s=!1;this.accumulatedFirstMoment=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(s)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xx extends zs{static get className(){return"Adamax"}constructor(e,t,s,o=null,r=0){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=o,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],V(()=>{this.iteration=Ee(0).variable(),this.accBeta1=Ee(t).variable()}),o==null&&(this.epsilon=O.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);V(()=>{const s=pe(1,this.accBeta1),o=ue(-this.learningRate,Z(A(this.iteration,this.decay),1));t.forEach((r,i)=>{const a=O.registeredVariables[r],c=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${r}/m`,variable:Se(a).variable(c)}),this.accumulatedWeightedInfNorm[i]==null&&(this.accumulatedWeightedInfNorm[i]={originalName:`${r}/v`,variable:Se(a).variable(c)});const l=Array.isArray(e)?e[i].tensor:e[r];if(l==null)return;const u=this.accumulatedFirstMoment[i].variable,h=this.accumulatedWeightedInfNorm[i].variable,d=Z(A(u,this.beta1),A(l,1-this.beta1)),p=A(h,this.beta2),f=Rt(l),m=Ls(p,f);u.assign(d),h.assign(m);const g=Z(A(ue(o,s),ue(d,Z(m,this.epsilon))),a);a.assign(g)}),this.iteration.assign(Z(this.iteration,1)),this.accBeta1.assign(A(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&be(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&be(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hd extends zs{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,o)=>{const r=Array.isArray(e)?e[o].tensor:e[s];if(r==null)return;const i=O.registeredVariables[s];V(()=>{const a=Z(A(this.c,r),i);i.assign(a)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Pn(Ee(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yx extends Hd{static get className(){return"Momentum"}constructor(e,t,s=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=s,this.accumulations=[],this.m=Ee(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,o)=>{const r=O.registeredVariables[s];this.accumulations[o]==null&&(this.accumulations[o]={originalName:`${s}/momentum`,variable:V(()=>Se(r).variable(!1))});const i=this.accumulations[o].variable,a=Array.isArray(e)?e[o].tensor:e[s];a!=null&&V(()=>{let c;const l=Z(A(this.m,i),a);this.useNesterov?c=Z(A(this.c,Z(a,A(l,this.m))),r):c=Z(A(this.c,l),r),i.assign(l),r.assign(c)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&be(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jx extends zs{static get className(){return"RMSProp"}constructor(e,t=.9,s=0,o=null,r=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=s,this.epsilon=o,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,o==null&&(this.epsilon=O.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,o)=>{const r=O.registeredVariables[s],i=!1;this.accumulatedMeanSquares[o]==null&&(this.accumulatedMeanSquares[o]={originalName:`${s}/rms`,variable:V(()=>Se(r).variable(i))}),this.accumulatedMoments[o]==null&&(this.accumulatedMoments[o]={originalName:`${s}/momentum`,variable:V(()=>Se(r).variable(i))}),this.accumulatedMeanGrads[o]==null&&this.centered&&(this.accumulatedMeanGrads[o]={originalName:`${s}/mg`,variable:V(()=>Se(r).variable(i))});const a=Array.isArray(e)?e[o].tensor:e[s];if(a==null)return;const c=this.accumulatedMeanSquares[o].variable,l=this.accumulatedMoments[o].variable;V(()=>{const u=Z(A(c,this.decay),A(Ge(a),1-this.decay));if(this.centered){const h=this.accumulatedMeanGrads[o].variable,d=Z(A(h,this.decay),A(a,1-this.decay)),p=ue(A(a,this.learningRate),kt(pe(u,Z(Ge(d),this.epsilon)))),f=Z(A(l,this.momentum),p);c.assign(u),h.assign(d),l.assign(f);const m=pe(r,f);r.assign(m)}else{const h=Z(A(c,this.decay),A(Ge(a),1-this.decay)),d=Z(A(l,this.momentum),ue(A(a,this.learningRate),kt(Z(h,this.epsilon))));c.assign(h),l.assign(d);const p=pe(r,d);r.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&be(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&be(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&be(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,s=!1;this.accumulatedMeanSquares=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(s)})),this.accumulatedMoments=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(o=>({originalName:o.name,variable:o.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sN=[qx,jx,Kx,Xx,Yx,Jx,Hd];function oN(){for(const n of sN)J(n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wf(n,e,t,s){i(n),t=t??0,s=s??1,a(t,s);let o=0;const r=c=>(c.then(l=>{const u=t+ ++o/n.length*(s-t);return e(u),l}),c);function i(c){k(c!=null&&Array.isArray(c)&&c.length>0,()=>"promises must be a none empty array")}function a(c,l){k(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${c}`),k(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${l}`),k(l>=c,()=>`startFraction must be no more than endFraction, but got startFraction ${c} and endFraction ${l}`)}return Promise.all(n.map(r))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function rN(n,e){e==null&&(e={});const t=e.fetchFunc==null?W().platform.fetch:e.fetchFunc,s=n.map(h=>t(h,e.requestInit,{isBinary:!0})),a=(e.onProgress==null?await Promise.all(s):await Wf(s,e.onProgress,0,.5)).map(h=>h.arrayBuffer());return e.onProgress==null?await Promise.all(a):await Wf(a,e.onProgress,.5,1)}function iN(n,e){var t;const s=e.fetchFunc==null?W().platform.fetch:e.fetchFunc;let o=0,r;return(t=e.onProgress)===null||t===void 0||t.call(e,0),new ReadableStream({pull:async i=>{for(var a;o<n.length;){r||(r=(await s(n[o],e.requestInit,{isBinary:!0})).body.getReader());const{done:c,value:l}=await r.read();if(c){o++,r=void 0,(a=e.onProgress)===null||a===void 0||a.call(e,o/n.length);continue}i.enqueue(l);return}i.close()}})}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aN="application/octet-stream",cN="application/json";class qd{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(k(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=W().platform.fetch,k(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&k(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const s=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],o=bI(e,s);if(t.body.append("model.json",new Blob([JSON.stringify(o)],{type:cN}),"model.json"),e.weightData!=null){const i=Os.join(e.weightData);t.body.append("model.weights.bin",new Blob([i],{type:aN}),"model.weights.bin")}const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:md(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let i=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?i+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":i+=" Please make sure the server is serving valid JSON for this request.",new Error(i)}const s=t.modelTopology,o=t.weightsManifest;if(s==null&&o==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return vI(e,t=>this.loadWeights(t))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),s=Nf(e.weightsManifest),o=()=>iN(t,this.loadOptions);return Object.assign(Object.assign({},e),{weightSpecs:s,getWeightStream:o})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[s,o]=lN(t),r=this.weightPathPrefix||s,i=[],a=[];for(const c of e)for(const l of c.paths)this.weightUrlConverter!=null?a.push(this.weightUrlConverter(l)):i.push(r+l+o);return this.weightUrlConverter&&i.push(...await Promise.all(a)),i}async loadWeights(e){const t=await this.getWeightUrls(e),s=Nf(e),o=await rN(t,this.loadOptions);return[s,o]}}qd.URL_SCHEME_REGEX=/^https?:\/\//;function lN(n){const e=n.lastIndexOf("/"),t=n.lastIndexOf("?"),s=n.substring(0,e),o=t>e?n.substring(t):"";return[s+"/",o]}function Uf(n){return n.match(qd.URL_SCHEME_REGEX)!=null}const Zx=(n,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(n)?t=n.every(s=>Uf(s)):t=Uf(n),t)return Qx(n,e)}return null};ft.registerSaveRouter(Zx);ft.registerLoadRouter(Zx);function Qx(n,e){return new qd(n,e)}function uN(n,e){return Qx(n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pu{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class hN{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class dN{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function pN(n,e,t,s){const o=arguments;return new dN(fN(...o))}function fN(n,e,t,s){return arguments.length===1?n.modelTopology!=null||n.weightSpecs!=null?new pu(n):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new pu({modelTopology:n})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new pu({modelTopology:n,weightSpecs:e,weightData:t,trainingConfig:s}))}function mN(n){return new hN(n)}function jd(n,e){const t=n.shape.length,s=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[s-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[s-1]} vs. ${t}`);if(j(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const o=e.shape,r=o[o.length-1];let i=1;for(let h=0;h<o.length-1;++h)i*=o[h];const a=n.shape,c=o.slice();c.pop();let l=1;for(let h=r;h<t;++h)l*=a[h],c.push(a[h]);const u=[...ce(n.shape).map(h=>h/l),1].slice(0,r);return[c,i,l,u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xu=-2,gN=-1;function Kd(n,e,t){const s=n.shape.length;k(s===e.length,()=>`Error in slice${s}D: Length of begin ${e} must match the rank of the array (${s}).`),k(s===t.length,()=>`Error in slice${s}D: Length of size ${t} must match the rank of the array (${s}).`);for(let o=0;o<s;++o)k(e[o]+t[o]<=n.shape[o],()=>`Error in slice${s}D: begin[${o}] + size[${o}] (${e[o]+t[o]}) would overflow input.shape[${o}] (${n.shape[o]})`)}function xN(n){const e=[];let t=0;for(;n>0;)n&1&&e.push(t),n/=2,t++;return e}function Xd(n,e,t){const s=[];for(let o=0;o<n.length;o++)s[o]=Math.ceil((e[o]-n[o])/t[o]);return s}function ey(n,e,t,s){const o=[...n];for(let r=o.length;r<s.length;r++)o.push(1);for(let r=0;r<t;r++)r===0?o[e]=1:(o.splice(e,0,1),o.pop());return o}function ty(n,e,t){return t<=n?t:t-(e-1)}function ny(n,e){const t=[];for(let s=0;s<n;s++)t.push(e+s);return t}function yN(n,e,t,s,o,r,i,a,c){const l=n.length;let u=new Array(l),h=new Array(l),d=new Array(l);if(e.length&&t>0){const p=e[0],f=t+1;u=sy(i,p,f,s,n),h=oy(a,p,f,o,n),d=ey(r,p,f,n)}else for(let p=0;p<l;p++)u[p]=iy(i,s,r,n,p,c),h[p]=ay(a,o,r,n,p,c),d[p]=ry(r,p,c);return{begin:u,end:h,strides:d}}function sy(n,e,t,s,o){const r=[...o],i=ny(t,e);for(let a=0;a<r.length;a++)if(i.indexOf(a)>-1)r[a]=0;else{const c=ty(e,t,a);let l=s[c];n&1<<c&&(l=0),r[a]=l}return r}function oy(n,e,t,s,o){const r=[...o],i=ny(t,e);for(let a=0;a<r.length;a++)if(i.indexOf(a)>-1)r[a]=Number.MAX_SAFE_INTEGER;else{const c=ty(e,t,a);let l=s[c];n&1<<c&&(l=Number.MAX_SAFE_INTEGER),r[a]=l}for(let a=0;a<r.length;a++){const c=o[a];r[a]<0&&(r[a]+=c),r[a]=oo(0,r[a],o[a])}return r}function ry(n,e,t){let s=n[e];return(t&1<<e||s==null)&&(s=1),s}function iy(n,e,t,s,o,r){let i=e[o];const a=t[o]||1;(n&1<<o||r&1<<o||i==null)&&(a>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);const c=s[o];return i<0&&(i+=c),i=oo(0,i,c-1),i}function ay(n,e,t,s,o,r){let i=e[o];const a=t[o]||1;(n&1<<o||r&1<<o||i==null)&&(a>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);const c=s[o];return i<0&&(i+=c),a>0?i=oo(0,i,c):i=oo(-1,i,c-1),i}function Yd(n,e,t){let s=t.length;for(let o=0;o<t.length;o++)if(t[o]>1){s=o;break}for(let o=s+1;o<t.length;o++)if(e[o]>0||t[o]!==n[o])return!1;return!0}function Jd(n,e){let t=n.length>0?n[n.length-1]:1;for(let s=0;s<n.length-1;s++)t+=n[s]*e[s];return t}function _l(n,e,t){let s;const o=n.shape.length;typeof e=="number"?s=[e,...new Array(o-1).fill(0)]:e.length<o?s=e.concat(new Array(o-e.length).fill(0)):s=e.slice(),s.forEach(i=>{k(i!==-1,()=>"slice() does not support negative begin indexing.")});let r;return t==null?r=new Array(o).fill(-1):typeof t=="number"?r=[t,...new Array(o-1).fill(-1)]:t.length<o?r=t.concat(new Array(o-t.length).fill(-1)):r=t,r=r.map((i,a)=>i>=0?i:(k(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${a}.`),n.shape[a]-s[a])),[s,r]}function Zd(n,e,t,s,o,r,i,a,c){let l;if(s==null?(l=new Array(e.length),l.fill(1)):l=s,i!=null&&(i&i-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let u=!1;const h={dims:l.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:l.slice(),beginMask:o,endMask:r,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:c};for(let w=0;w<h.dims;w++)u&&(1<<w&a)!==0&&h.numAddAxisAfterEllipsis++,1<<w&i&&(u=!0);u||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};bN(h,d);let p=!0,f=!0,m=!0;const g=[],x=[];for(let w=0;w<n.length;++w){if(d.strides[w]===0)throw Error(`strides[${w}] must be non-zero`);const b=!!(d.shrinkAxisMask&1<<w),v=n[w];if(v===-1){g.push(b?1:-1);continue}const I=[d.beginMask&1<<w,d.endMask&1<<w],T=[d.strides[w]>0?0:-1,d.strides[w]>0?v:v-1];if(b&&d.strides[w]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&d.strides[w]===1;const N=!!(d.beginMask&1<<w&&d.endMask&1<<w);if(d.beginValid&&d.endValid){if(b){const R=d.begin[w]<0?v+d.begin[w]:d.begin[w];if(d.begin[w]=R,d.end[w]=d.begin[w]+1,R<0||R>=v)throw Error(`slice index ${d.begin[w]} of dimension ${w} out of bounds.`)}else d.begin[w]=Gf(d.begin[w],0,d.strides[w],v,I,T),d.end[w]=Gf(d.end[w],1,d.strides[w],v,I,T);const C=d.strides[w]===1&&d.begin[w]===0&&d.end[w]===v;p=p&&C,f=f&&(w===0&&d.strides[w]===1||C)}else p=p&&d.strides[w]===1&&N,f=f&&(w===0&&d.strides[w]===1||N);let $,S=!1;if(d.beginValid&&d.endValid?($=d.end[w]-d.begin[w],S=!0):b?($=1,S=!0):N&&v>=0&&(d.strides[w]<0?$=-v:$=v,S=!0),S){let C;$===0||$<0!=d.strides[w]<0?C=0:C=Math.trunc($/d.strides[w])+($%d.strides[w]!==0?1:0),g.push(C)}else g.push(-1)}for(let w=0;w<d.finalShapeGatherIndices.length;++w){const b=d.finalShapeGatherIndices[w];b>=0?x.push(g[b]):b===Xu&&x.push(1)}return{finalShapeSparse:x.filter((w,b)=>d.finalShapeGatherIndices[b]!==Xu),finalShape:x,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function bN(n,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=n.begin!=null,e.endValid=n.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let s=0;s<n.dims;s++)if(1<<s&n.ellipsisMask){const o=Math.min(e.dims-(n.dims-s)+1+n.numAddAxisAfterEllipsis,e.dims);for(;t<o;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=s}else if(1<<s&n.newAxisMask)e.finalShapeGatherIndices.push(Xu),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);n.begin!=null&&(e.begin[t]=n.begin[s]),n.end!=null&&(e.end[t]=n.end[s]),e.strides[t]=n.strides[s],n.beginMask&1<<s&&(e.beginMask|=1<<t),n.endMask&1<<s&&(e.endMask|=1<<t),n.shrinkAxisMask&1<<s?(e.finalShapeGatherIndices.push(gN),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(s)),e.inputShapeGatherIndicesSparse[t]=s,t++}}function Gf(n,e,t,s,o,r){if(o[e])return t>0?r[e]:r[e+1&1];{const i=n<0?s+n:n;return i<r[0]?r[0]:i>r[1]?r[1]:i}}var wN=Object.freeze({__proto__:null,assertParamsValid:Kd,computeFlatOffset:Jd,computeOutShape:Xd,getNormalizedAxes:yN,isSliceContinous:Yd,maskToAxes:xN,parseSliceParams:_l,sliceInfo:Zd,startForAxis:iy,startIndicesWithElidedDims:sy,stopForAxis:ay,stopIndicesWithElidedDims:oy,stridesForAxis:ry,stridesWithElidedDims:ey});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vN{static sgd(e){return new Hd(e)}static momentum(e,t,s=!1){return new Yx(e,t,s)}static rmsprop(e,t=.9,s=0,o=null,r=!1){return new Jx(e,t,s,o,r)}static adam(e=.001,t=.9,s=.999,o=null){return new Kx(e,t,s,o)}static adadelta(e=.001,t=.95,s=null){return new qx(e,t,s)}static adamax(e=.002,t=.9,s=.999,o=null,r=0){return new Xx(e,t,s,o,r)}static adagrad(e,t=.1){return new jx(e,t)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fs=vN;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CN=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n();function cy(){return new Promise(n=>CN(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qd(n,e){const t=n[0].length;n.forEach((o,r)=>{k(o.length===t,()=>`Error in concat${t}D: rank of tensors[${r}] must be the same as the rank of the rest (${t})`)}),k(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);const s=n[0];n.forEach((o,r)=>{for(let i=0;i<t;i++)k(i===e||o[i]===s[i],()=>`Error in concat${t}D: Shape of tensors[${r}] (${o}) does not match the shape of the rest (${s}) along the non-concatenated axis ${r}.`)})}function zn(n,e){const t=n[0].slice();for(let s=1;s<n.length;s++)t[e]+=n[s][e];return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Cn;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(Cn||(Cn={}));function ly(n,e,t){let s=new Array;if(t==null&&e==null)return s;if(e==null)for(;s.length<n+t.length;)s.push(-1);else s=e.slice();if(t==null)return s;if(n+t.length!==s.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${n+t.length}, but shape.rank = ${s.length}`);for(let o=1;o<t.length;++o){const r=t[o],i=s[s.length-t.length+o],a=s[i];if(r>=0)if(a>=0){if(a!==r)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${o+n}] = ${r} but shape[${o+n}] = ${a}`)}else s[i]=r}return s}function uy(n){const e={FIRST_DIM_SIZE:Cn.FIRST_DIM_SIZE,VALUE_ROWIDS:Cn.VALUE_ROWIDS,ROW_LENGTHS:Cn.ROW_LENGTHS,ROW_SPLITS:Cn.ROW_SPLITS,ROW_LIMITS:Cn.ROW_LIMITS,ROW_STARTS:Cn.ROW_STARTS},t=[];for(const s of n)if(s in e)t.push(e[s]);else break;return t}function hy(n){return n.length===0?0:n[0]===Cn.FIRST_DIM_SIZE?n.length-1:n.length}function dy(n,e){if(n==null||e==null)return;const t=n.length,s=e.length;if(t>=s)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${t} must be less than ragged tensor input flatValues.rank = ${s})`);for(let o=0;o<Math.min(t,s-1);++o){const r=n[o],i=e[o+1];if(r>=0&&i>=0&&r!==1&&r!==i)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${o-n.length}] = ${r} but ragged tensor input.flatValues.shape[${o-n.length}] = ${i}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ep=30;function Ll(n){return n<=ep?n:Fu(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tp(n,e,t){const s=t*(typeof n=="number"?n:n[0]),o=e*(typeof n=="number"?n:n[1]);return[s,o]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ca(n,e,t,s=!0){let o=[];if(s)o=o.concat(e.slice(0)),o.push(n[0]/t),o=o.concat(n.slice(1));else{o=o.concat(n[0]);const r=e.length;for(let i=0;i<r;++i)o=o.concat([n[i+1]/e[i],e[i]]);o=o.concat(n.slice(r+1))}return o}function la(n,e,t=!0){const s=[];if(t){s.push(e);for(let o=e+1;o<n;++o)o<=2*e?(s.push(o),s.push(o-(e+1))):s.push(o)}else{const o=[],r=[];for(let i=1;i<n;++i)i>=e*2+1||i%2===1?r.push(i):o.push(i);s.push(...o),s.push(0),s.push(...r)}return s}function ua(n,e,t,s=!0){const o=[];s?o.push(n[0]/t):o.push(n[0]*t);for(let r=1;r<n.length;++r)r<=e.length?s?o.push(e[r-1]*n[r]):o.push(n[r]/e[r-1]):o.push(n[r]);return o}function np(n,e){const t=[0];for(let s=0;s<e;++s)t.push(n[s][0]);return t}function sp(n,e,t){const s=n.slice(0,1);for(let o=0;o<t;++o)s.push(n[o+1]-e[o][0]-e[o][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pl=1.7580993408473768,zl=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const op=.3275911,rp=.254829592,ip=-.284496736,ap=1.421413741,cp=-1.453152027,lp=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ns(n,e){if(n.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${e.length}.`);const t=new Float32Array(n.length*2);for(let s=0;s<t.length;s+=2)t[s]=n[s/2],t[s+1]=e[s/2];return t}function py(n){const e=new Float32Array(n.length/2),t=new Float32Array(n.length/2);for(let s=0;s<n.length;s+=2)e[s/2]=n[s],t[s/2]=n[s+1];return{real:e,imag:t}}function fy(n){const e=Math.ceil(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let o=0;o<n.length;o+=4)t[Math.floor(o/4)]=n[o],s[Math.floor(o/4)]=n[o+1];return{real:t,imag:s}}function my(n){const e=Math.floor(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let o=2;o<n.length;o+=4)t[Math.floor(o/4)]=n[o],s[Math.floor(o/4)]=n[o+1];return{real:t,imag:s}}function up(n,e){const t=n[e*2],s=n[e*2+1];return{real:t,imag:s}}function gy(n,e,t,s){n[s*2]=e,n[s*2+1]=t}function xy(n,e){const t=new Float32Array(n/2),s=new Float32Array(n/2);for(let o=0;o<Math.ceil(n/2);o++){const r=(e?2:-2)*Math.PI*(o/n);t[o]=Math.cos(r),s[o]=Math.sin(r)}return{real:t,imag:s}}function yy(n,e,t){const s=(t?2:-2)*Math.PI*(n/e),o=Math.cos(s),r=Math.sin(s);return{real:o,imag:r}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fu="->",IN=/->/g,Hf=",",qf="...";function hp(n,e){n=n.replace(/\s/g,"");const t=(n.length-n.replace(IN,"").length)/fu.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${fu}").`);const[s,o]=n.split(fu);k(s.indexOf(qf)===-1,()=>`The ellipsis notation ("${qf}") is not supported yet.`);const r=s.split(Hf),i=r.length;if(e!==i)throw new Error(`Expected ${i} input tensors, received ${e}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const a=[];for(let d=0;d<o.length;++d){const p=o[d];if(!r.some(f=>f.indexOf(p)!==-1))throw new Error(`Output subscripts contain the label ${p} not present in the input subscripts.`);a.indexOf(p)===-1&&a.push(p)}for(let d=0;d<s.length;++d){const p=s[d];a.indexOf(p)===-1&&p!==Hf&&a.push(p)}const c=new Array(r.length);for(let d=0;d<i;++d){if(new Set(r[d].split("")).size!==r[d].length)throw new Error(`Found duplicate axes in input component ${r[d]}. Support for duplicate axes in input is not implemented yet.`);c[d]=[];for(let p=0;p<r[d].length;++p)c[d].push(a.indexOf(r[d][p]))}const l=a.length,u=o.length,h=[];for(let d=u;d<l;++d)h.push(d);return{allDims:a,summedDims:h,idDims:c}}function dp(n,e){let t=new Array(n);t.fill(-1);for(let o=0;o<e.length;++o)t[e[o]]=o;const s=[];for(let o=0;o<n;++o)t[o]===-1&&s.push(o);return t=t.filter(o=>o!==-1),{permutationIndices:t,expandDims:s}}function pp(n,e,t){const s=new Array(n);for(let o=0;o<t.length;++o){const r=t[o].shape;for(let i=0;i<e[o].length;++i)s[e[o][i]]===void 0?s[e[o][i]]=r[i]:k(s[e[o][i]]===r[i],()=>`Expected dimension ${s[e[o][i]]} at axis ${i} of input shaped ${JSON.stringify(r)}, but got dimension ${r[i]}`)}}function fp(n,e){const t=n,s=[];let o=0;n.length===0&&t.push(-1),o=n.length+1;for(let i=0;i<o;++i)s.push([]);const r=[];for(let i=0;i<t.length;++i){const a=t[i],c=$N(e,a);for(const l of c)r.indexOf(l)===-1&&(s[i].push(l),r.push(l))}return{path:t,steps:s}}function mp(n){return n.every((e,t)=>e===t)}function $N(n,e){const t=[];for(let s=0;s<n.length;++s)(n[s].length===0||n[s].indexOf(e)!==-1||e===-1)&&t.push(s);return t}function gp(n,e,t=0){let s=[];if(typeof e=="number")k(n.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),s=new Array(e).fill(n.shape[t]/e);else{const o=e.reduce((i,a)=>(a===-1&&(i+=1),i),0);k(o<=1,()=>"There should be only one negative value in split array.");const r=e.indexOf(-1);if(r!==-1){const i=e.reduce((a,c)=>c>0?a+c:a);e[r]=n.shape[t]-i}k(n.shape[t]===e.reduce((i,a)=>i+a),()=>"The sum of sizes must match the size of the axis dimension."),s=e}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function by(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function wy(n,e){return`indices(${n}, 0) is invalid: ${e} < 0`}function vy(n,e,t){return`indices(${n}, 0) is invalid: ${e} >= ${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cy(n,e){return`only one output dimension may be -1, not both ${n} and ${e}`}function Iy(n,e){return`size ${n} must be non-negative, not ${e}`}function $y(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Sy(n,e){const t=j(n),s=j(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${n} outputShape= ${e}`}function ky(n,e){const t=j(n),s=j(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${s}. inputShape=${n} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yu(){return"segment ids must be >= 0"}function Ty(){return"segment ids are not increasing"}function Ny(n,e){return`Segment id ${n} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function Ey(n,e,t){return`Bad: indices[${n}] == ${e} out of range [0, ${t})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ry(n,e){let t=!1,s;for(n<=ep?(s=n,t=!0):s=Fu(n,Math.floor(Math.sqrt(n)));!t;)s>e||s===n?t=!0:s=Fu(n,s+1);return s}function Dy(n,e,t){const s=[],o=n.length;for(let r=0;r<o;r++)r!==e?s.push(n[r]):s.push(t);return s}function xp(n,e,t,s){const o=e.shape.length,r=n.shape.length;if(s!==0&&(s<-o||s>o))throw new Error(`Expect batchDims in the range of [-${o}, ${o}], but got ${s}`);if(s<0&&(s+=o),s>r)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${r}).`);if(t<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${t}).`);for(let h=0;h<s;++h)if(n.shape[h]!==e.shape[h])throw new Error(`x.shape[${h}]: ${n.shape[h]} should be equal to indices.shape[${h}]: ${e.shape[h]}.`);const i=n.shape[t],a=[];let c=1,l=1,u=1;for(let h=0;h<s;++h)a.push(n.shape[h]),c*=n.shape[h];for(let h=s;h<t;h++)a.push(n.shape[h]),l*=n.shape[h];for(let h=s;h<o;h++)a.push(e.shape[h]);for(let h=t+1;h<r;h++)a.push(n.shape[h]),u*=n.shape[h];return{batchSize:c,sliceSize:u,outerSize:l,dimSize:i,outputShape:a}}var SN=Object.freeze({__proto__:null,collectGatherOpShapeInfo:xp,computeOutShape:Dy,segOpComputeOptimalWindowSize:Ry});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ss(n){try{return n.map(e=>ks(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Ay(n){return n.map(e=>Cs(e))}var kN=Object.freeze({__proto__:null,ERF_A1:rp,ERF_A2:ip,ERF_A3:ap,ERF_A4:cp,ERF_A5:lp,ERF_P:op,PARALLELIZE_THRESHOLD:ep,get RowPartitionType(){return Cn},SELU_SCALE:zl,SELU_SCALEALPHA:Pl,applyActivation:zd,assertAndGetBroadcastShape:me,assertAxesAreInnerMostDims:Ct,assertParamsConsistent:Qd,assignToTypedArray:gy,axesAreInnerMostDims:Cd,calculateShapes:Io,checkEinsumDimSizes:pp,checkPadOnDimRoundingMode:Wt,combineLocations:Cx,combineRaggedTensorToTensorShapes:ly,complexWithEvenIndex:fy,complexWithOddIndex:my,computeConv2DInfo:vt,computeConv3DInfo:Ms,computeDefaultPad:gd,computeDilation2DInfo:sa,computeOptimalWindowSize:Ll,computeOutAndReduceShapes:xt,computeOutShape:zn,computePool2DInfo:fn,computePool3DInfo:rs,convertConv2DDataFormat:is,decodeEinsumEquation:hp,eitherStridesOrDilationsAreOne:Tt,expandShapeToKeepDim:rt,exponent:yy,exponents:xy,fromStringArrayToUint8:Ay,fromUint8ToStringArray:ss,getAxesPermutation:Ye,getBroadcastDims:Zo,getComplexWithIndex:up,getEinsumComputePath:fp,getEinsumPermutation:dp,getFusedBiasGradient:Pd,getFusedDyActivation:Ld,getImageCenter:tp,getInnerMostAxes:tt,getPermuted:la,getRaggedRank:hy,getReductionAxes:dt,getReshaped:ca,getReshapedPermuted:ua,getRowPartitionTypesHelper:uy,getSliceBeginCoords:np,getSliceSize:sp,getSparseFillEmptyRowsIndicesDenseShapeMismatch:by,getSparseFillEmptyRowsNegativeIndexErrorMessage:wy,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:vy,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:$y,getSparseReshapeInputOutputMismatchErrorMessage:ky,getSparseReshapeInputOutputMultipleErrorMessage:Sy,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:Cy,getSparseReshapeNegativeOutputDimErrorMessage:Iy,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:Ey,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:Yu,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:Ty,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:Ny,getUndoAxesPermutation:_s,isIdentityPermutation:mp,log:_C,mergeRealAndImagArrays:ns,prepareAndValidate:jd,prepareSplitSize:gp,segment_util:SN,shouldFuse:Bd,slice_util:wN,splitRealAndImagArrays:py,stridesOrDilationsArePositive:uo,tupleValuesAreOne:lo,upcastType:Kt,validateDefaultValueShape:dy,validateInput:qT,validateUpdateShape:Bx,warn:Zt});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */oN();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fy={kernelName:Ec,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>A(n,aa(se(t,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TN={kernelName:ii,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=Ge(se(t,"float32")),o=kt(pe(Ee(1),s));return Qe(ue(n,o))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NN={kernelName:ai,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=kt(pe(Ge(se(t,"float32")),1));return ue(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EN={kernelName:hr,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,o=me(t.shape,s.shape);return{a:()=>{let a=n;const c=dt(t.shape,o);return c.length>0&&(a=le(a,c)),_(a,t.shape)},b:()=>{let a=n;const c=dt(s.shape,o);return c.length>0&&(a=le(a,c)),_(a,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RN={kernelName:kh,saveAllInputs:!0,gradFunc:(n,e)=>{const t={};return e.forEach((s,o)=>{t[o]=()=>n.clone()}),t}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DN={kernelName:Rc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Se(t)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AN={kernelName:Dc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Se(t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FN={kernelName:ci,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ue(n,kt(pe(Ee(1),Ge(se(t,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ON={kernelName:li,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=kt(Z(Ee(1),Ge(se(t,"float32"))));return ue(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MN={kernelName:di,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,o=me(t.shape,s.shape);return{a:()=>{const a=Z(Ge(t),Ge(s));let c=A(n,ue(s,a));const l=dt(t.shape,o);return l.length>0&&(c=le(c,l)),_(c,t.shape)},b:()=>{const a=Z(Ge(t),Ge(s));let c=Qe(A(n,ue(t,a)));const l=dt(s.shape,o);return l.length>0&&(c=le(c,l)),_(c,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _N={kernelName:ui,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ue(n,Z(Ge(se(t,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LN={kernelName:hi,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ue(n,pe(Ee(1),Ge(se(t,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PN(n,e,t,s,o,r){const i=E(n,"dy","avgPool3dGrad"),a=E(e,"input","avgPool3dGrad");let c=i,l=a,u=!1;a.rank===4&&(u=!0,c=_(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),l=_(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),k(c.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),k(l.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`),Wt("avgPool3dGrad",o,r);const h={dy:c,input:l},d={filterSize:t,strides:s,pad:o,dimRoundingMode:r},p=O.runKernel(Rh,h,d);return u?_(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const zN=L({avgPool3dGrad_:PN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BN={kernelName:Fc,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:o,strides:r,pad:i,dimRoundingMode:a}=t;return{x:()=>zN(n,s,o,r,i,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VN(n,e,t,s,o){const r=E(n,"dy","avgPoolGrad"),i=E(e,"input","avgPoolGrad");k(i.rank===r.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${r.rank})`);let a=i,c=r,l=!1;i.rank===3&&(l=!0,a=_(i,[1,i.shape[0],i.shape[1],i.shape[2]]),c=_(r,[1,r.shape[0],r.shape[1],r.shape[2]])),k(c.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${c.rank}.`),k(a.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${a.rank}.`);const u={dy:c,input:a},h={filterSize:t,strides:s,pad:o},d=O.runKernel(Eh,u,h);return l?_(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const WN=L({avgPoolGrad_:VN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UN={kernelName:Ac,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:o,strides:r,pad:i}=t;return{x:()=>WN(n,s,o,r,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GN={kernelName:Oc,inputsToSave:["a","b"],gradFunc:(n,e,t)=>{const[s,o]=e,{transposeA:r,transposeB:i}=t;return!r&&!i?{a:()=>Ne(n,o,!1,!0),b:()=>Ne(s,n,!0,!1)}:!r&&i?{a:()=>Ne(n,o,!1,!1),b:()=>Ne(n,s,!0,!1)}:r&&!i?{a:()=>Ne(o,n,!1,!0),b:()=>Ne(s,n,!1,!1)}:{a:()=>Ne(o,n,!0,!0),b:()=>Ne(n,s,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HN={kernelName:Mc,gradFunc:(n,e,t)=>{const{blockShape:s,crops:o}=t;return{x:()=>Rd(n,s,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qN={kernelName:AC,gradFunc:(n,e,t)=>{const s=t,o=s.inputShape,r=s.shape,i=Array.from(r);for(let c=o.length-1;c>=0;c--)if(o[c]===r[c])i[c]=1;else if(o[c]!==1)throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${r}].`);const a=[];for(let c=0;c<i.length;c++)i[c]>1&&a.push(c);return{x:()=>le(n,a,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jN={kernelName:pi,gradFunc:n=>({x:()=>n.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KN={kernelName:fi,gradFunc:n=>({x:()=>Se(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XN={kernelName:mi,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{clipValueMin:o,clipValueMax:r}=t;return{x:()=>Ft(es(vo(s,o),pr(s,r)),n,Se(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YN={kernelName:_c,inputsToSave:["x"],gradFunc:Fy.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JN={kernelName:Lc,saveAllInputs:!0,gradFunc:(n,e,t)=>{const s=e.map(c=>c.shape),{axis:o}=t,r=ve(o,e[0].shape)[0],i=s.map(c=>c[r]);return en(n,i,r).map(c=>()=>c)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZN={kernelName:Pc,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,o]=e,{dilations:r,strides:i,pad:a,dataFormat:c}=t;return k(lo(r),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`),{x:()=>bd(s.shape,n,o,i,a,c),filter:()=>_d(s,n,o.shape,i,a,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QN={kernelName:zc,inputsToSave:["dy","filter"],gradFunc:(n,e,t)=>{const[s,o]=e,{strides:r,pad:i,dataFormat:a,dimRoundingMode:c}=t;return{dy:()=>ho(n,o,r,i,a,1,c),filter:()=>_d(n,s,o.shape,r,i,a,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eE(n,e,t,s,o){let r=n;n.rank===4&&(r=_(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let i=e;i.rank===4&&(i=_(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),k(r.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${r.shape}.`),k(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),k(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),k(r.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${r.shape[4]}) must match input depth in filter (${t[3]}.`),k(i.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${t[4]}).`);const a={x:r,dy:i},c={strides:s,pad:o,filterShape:t};return O.runKernel(Mh,a,c)}const tE=L({conv3DBackpropFilter_:eE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nE={kernelName:Bc,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:o,pad:r}=t;k(lo(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[i,a]=e;return{x:()=>yx(i.shape,n,a,o,r),filter:()=>tE(i,n,a.shape,o,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sE={kernelName:gi,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>A(Qe(_x(se(t,"float32"))),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oE={kernelName:xi,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>A(Lx(se(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rE={kernelName:Vc,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:o,exclusive:r,reverse:i}=t;return{x:()=>{const a=Ye([o],s.rank);let c=wx(n,o,r,!i);return a!=null&&(c=$e(c,a)),c}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iE={kernelName:Wc,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:o,pad:r,dimRoundingMode:i}=t,a=s??[1,1];k(lo(a),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[c,l]=e;return k(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${c.rank}.`),k(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`),k(c.shape[3]===l.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),k(Tt(o,a),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${o} and dilations '${a}'.`),Wt("depthwiseConv2d",r,i),{x:()=>h2(c.shape,n,l,o,r,a,i),filter:()=>l2(c,n,l.shape,o,r,a,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aE={kernelName:Uc,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,o]=e,r={x:s,filter:o,dy:n},i={x:s,filter:o,dy:n};return{x:()=>O.runKernel(Ou,r,t),filter:()=>O.runKernel(Mu,i,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cE={kernelName:bi,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e,s={dy:n,y:t};return{x:()=>O.runKernel(Gh,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lE={kernelName:wi,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=A(Gn(Qe(Ge(t))),2/Math.sqrt(Math.PI));return{x:()=>A(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uE={kernelName:vi,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>A(n,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hE={kernelName:Hc,inputsToSave:["input"],gradFunc:(n,e)=>{const[t]=e;return{input:()=>_(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dE={kernelName:Ci,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>A(n,Gn(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pE={kernelName:Ii,gradFunc:n=>({x:()=>Se(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fE={kernelName:$i,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,o=me(t.shape,s.shape);return{a:()=>{const a=ue(n,se(s,"float32")),c=dt(t.shape,o);return c.length>0?_(le(a,c),t.shape):a},b:()=>{let a=A(n,se(t,"float32"));const c=dt(s.shape,o);c.length>0&&(a=_(le(a,c),s.shape));const l=Ge(s);return Qe(ue(a,se(l,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mE={kernelName:qc,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,e,t)=>{const{varianceEpsilon:s}=t,[o,r,i,a]=e,c=a??Ee(1),l=dt(r.shape,o.shape),u=[];if(r.rank===1){for(let b=0;b<o.shape.length-1;++b)u.push(o.shape[b]);u.push(1)}const h=pe(o,r),d=A(n,c),p=Fx(Z(i,Ee(s))),f=A(A(A(p,p),p),Ee(-.5));return{x:()=>r.rank===1?_(A(A(n,In(_(p,[1,1,1,r.shape[0]]),u)),c),o.shape):_(A(A(n,p),c),o.shape),mean:()=>{let b=A(A(p,Ee(-1)),d);return r.rank===1&&(b=le(b,l)),_(b,r.shape)},variance:()=>{let b=A(A(f,h),d);return r.rank===1&&(b=le(b,l)),_(b,r.shape)},scale:()=>{const b=A(h,p);let v=A(n,b);return r.rank===1&&(v=le(v,l)),_(v,r.shape)},offset:()=>{let b=n;return r.rank===1&&(b=le(b,l)),_(b,r.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gE={kernelName:jc,inputsToSave:["x","indices"],gradFunc:(n,e,t)=>{const[s,o]=e,{axis:r,batchDims:i}=t,a=ve(r,s.shape)[0],c=(l,u,h)=>()=>{const d=l.shape,p=u.size,f=d.slice(0,a),m=f.length,g=d.slice(r,d.length).slice(1),x=g.length,y=jf(0,m),w=jf(m+1,m+1+x),b=Kf([f,[p],g]),v=_(h,b),I=_(u,[p]),T=Kf([[m],y,w]),N=$e(v,T);let $=Wx(N,I,l.shape[a]);const S=_s(T);return $=$e($,S),$};if(i===1){const l=s.shape[0],u=s.split(l,0);return{x:()=>ts(u.map((p,f)=>c(p,o.slice(f,1),n.slice(f,1))())).reshape(s.shape),indices:()=>o}}else return{x:c(s,o,n),indices:()=>o}}};function jf(n,e){const t=[];for(let s=n;s<e;++s)t.push(s);return t}function Kf(n){const e=[];for(let t=0;t<n.length;++t)for(let s=0;s<n[t].length;++s)e.push(n[t][s]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xE={kernelName:Si,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>Se(t),b:()=>Se(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yE={kernelName:ki,gradFunc:n=>({x:()=>se(n,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bE={kernelName:Ti,gradFunc:n=>({x:()=>Se(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wE={kernelName:Ni,gradFunc:n=>({x:()=>Se(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vE={kernelName:Ei,gradFunc:n=>({x:()=>Se(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CE={kernelName:Xc,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{alpha:o}=t,r=nn(s,0);return{x:()=>Ft(r,n,A(n,o))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IE={kernelName:Di,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ue(n,Z(t,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $E={kernelName:Ri,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ue(n,se(t,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SE={kernelName:OC,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{axis:o}=t;return{logits:()=>{const i=Gn(s);return pe(n,A(le(n,o,!0),i))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kE(n,e,t,s=5,o=1,r=1,i=.5){const a={x:n,y:e,dy:t},c={depthRadius:s,bias:o,alpha:r,beta:i};return O.runKernel(Yh,a,c)}const TE=L({localResponseNormalizationBackprop_:kE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NE={kernelName:tl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,o]=e,{depthRadius:r,bias:i,alpha:a,beta:c}=t;return{x:()=>TE(s,o,n,r,i,a,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oy(n,e,t,s){return e.rank<t.rank&&(e=_(e,rt(e.shape,s))),n.rank<t.rank&&(n=_(n,rt(n.shape,s))),{x:()=>A(n,se(Un(t,e),n.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xf={kernelName:nl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{reductionIndices:o}=s,r=e[0],i=e[1],a=ve(o,r.shape),c=Oy(n,i,r,a);return{x:()=>c.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EE={kernelName:Ai,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>A(n,se(vo(t,s),"float32")),b:()=>A(n,se(oc(t,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RE(n,e,t,s,o,r,i){const a=E(n,"dy","maxPool3dGrad"),c=E(e,"input","maxPool3dGrad"),l=E(t,"output","maxPool3dGrad");let u=a,h=c,d=l,p=!1;c.rank===4&&(p=!0,u=_(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),h=_(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),d=_(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),k(u.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),k(h.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),k(d.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),Wt("maxPool3dGrad",r,i);const f={dy:u,input:h,output:d},m={filterSize:s,strides:o,pad:r,dimRoundingMode:i},g=O.runKernel(Zh,f,m);return p?_(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}const DE=L({maxPool3dGrad_:RE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AE={kernelName:ol,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,o]=e,{filterSize:r,strides:i,pad:a,dimRoundingMode:c}=t;return{x:()=>DE(n,s,o,r,i,a,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FE(n,e,t,s,o,r,i){const a=E(n,"dy","maxPoolGrad"),c=E(e,"input","maxPoolGrad"),l=E(t,"output","maxPoolGrad");k(c.rank===a.rank,()=>`Rank of input (${c.rank}) does not match rank of dy (${a.rank})`),k(a.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${a.rank}.`),k(c.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${c.rank}.`),Wt("maxPoolGrad",r,i);const u={dy:a,input:c,output:l},h={filterSize:s,strides:o,pad:r,dimRoundingMode:i};return O.runKernel(Jh,u,h)}const OE=L({maxPoolGrad_:FE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ME={kernelName:sl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,o]=e,{filterSize:r,strides:i,pad:a}=t;return{x:()=>OE(n,s,o,r,i,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _E={kernelName:rl,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:o}=t,r=ve(o,s.shape),a=xt(s.shape,r)[1],c=j(a);return{x:()=>{const u=s.shape.slice();r.forEach(p=>{u[p]=1});const h=_(n,u);return ue(A(h,Ps(s.shape,"float32")),c)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LE={kernelName:il,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{axis:o}=s,[r,i]=e,a=ve(o,r.shape),c=Oy(n,i,r,a);return{x:()=>c.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PE={kernelName:Fi,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>A(n,se(pr(t,s),"float32")),b:()=>A(n,se(nn(t,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zE={kernelName:al,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:o}=t,r=o.map(i=>i[0]);return{x:()=>Ve(n,r,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BE={kernelName:Oi,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,o=me(t.shape,s.shape);return{a:()=>{const a=dt(t.shape,o);return a.length>0?_(le(n,a),t.shape):n},b:()=>{const a=A(n,Qe(Ml(ue(t,s)))),c=dt(s.shape,o);return c.length>0?_(le(a,c),s.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VE={kernelName:Mi,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,o=me(t.shape,s.shape);return{a:()=>{const a=A(n,se(s,"float32")),c=dt(t.shape,o);return c.length>0?_(le(a,c),t.shape):a},b:()=>{const a=A(n,se(t,"float32")),c=dt(s.shape,o);return c.length>0?_(le(a,c),s.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WE={kernelName:cl,gradFunc:n=>({x:()=>Qe(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UE={kernelName:hl,inputsToSave:["indices"],gradFunc:(n,e)=>{const t=e[0];return{indices:()=>We(t.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GE={kernelName:ul,gradFunc:n=>({x:()=>Se(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HE={kernelName:dl,saveAllInputs:!0,gradFunc:(n,e,t)=>{const{axis:s}=t;return mo(n,s).map(r=>()=>r)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yf={kernelName:pl,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:o}=t,r=o.map(i=>i[0]);return{x:()=>Ve(n,r,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qE={kernelName:_i,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,e)=>{const[t,s,o]=e,r=t,i=s,a=me(r.shape,i.shape);return{a:()=>{const u=se(i,"float32");let h=A(n,A(u,po(r,pe(u,Ee(1)))));const d=dt(r.shape,a);return d.length>0&&(h=le(h,d)),_(h,r.shape)},b:()=>{const u=nn(r,0),h=Ft(u,Hn(r),Se(r));let d=A(n,A(o,h));const p=dt(i.shape,a);return p.length>0&&(d=le(d,p)),_(d,i.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jE={kernelName:fl,inputsToSave:["x","alpha"],gradFunc:(n,e)=>{const[t,s]=e,o=nn(t,0);return{x:()=>Ft(o,n,A(n,s)),alpha:()=>{let r=Ft(o,Se(n),A(n,t));const i=dt(s.shape,n.shape);return i.length>0&&(r=le(r,i)),_(r,s.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KE(n,e,t){const s=n.shape.slice();s[t]=1;const o=_(e,s),r=ju(n,t,!0,!1),i=ju(n,t,!0,!0),a=A(r,i);return A(o,a)}function XE(n,e,t){const s=n.shape.length,o=s-t.length,r=Ye(t,s);let i=n;r!=null&&(i=$e(n,r));const a=i.shape.slice(),l=a.splice(s-t.length,t.length).reduce((d,p)=>d*p,1);a.push(l);const u=i.reshape(a);let h=KE(u,e,o);if(h=h.reshape(i.shape),r!=null){const d=_s(r);h=$e(h,d)}return h}const YE={kernelName:ml,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:o}=t;let r=[];return o==null?r=s.shape.map((i,a)=>a):typeof o=="number"?r=[o]:r=o,{x:()=>XE(s,n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JE={kernelName:yi,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,o=me(t.shape,s.shape);return{a:()=>{const a=ue(n,se(s,"float32")),c=dt(t.shape,o);return c.length>0?_(le(a,c),t.shape):a},b:()=>{let a=A(n,se(t,"float32"));const c=dt(s.shape,o);c.length>0&&(a=_(le(a,c),s.shape));const l=Ge(s);return Qe(ue(a,se(l,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZE={kernelName:Li,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ue(n,Qe(Ge(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QE={kernelName:zi,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=A(pr(t,6),aa(t));return{x:()=>A(n,se(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eR={kernelName:Pi,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>A(n,se(aa(t),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tR={kernelName:gl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>_(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nR={kernelName:yl,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,o={dy:n,images:s};return{images:()=>O.runKernel(rd,o,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sR={kernelName:xl,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,o={dy:n,images:s};return{images:()=>O.runKernel(od,o,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oR={kernelName:bl,gradFunc:(n,e,t)=>{const{dims:s}=t,o=ve(s,n.shape);return{x:()=>fo(n,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rR={kernelName:Bi,gradFunc:n=>({x:()=>Se(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iR={kernelName:Vi,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Qe(ue(n,A(po(t,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aR={kernelName:wl,inputsToSave:["condition"],gradFunc:(n,e)=>{const[t]=e;return{condition:()=>se(Se(t),"float32"),t:()=>A(n,se(t,n.dtype)),e:()=>A(n,se(kd(t),n.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cR={kernelName:Wi,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=nn(t,Ee(0)),o=Ee(Pl),r=Ee(zl),i=A(n,r),a=A(A(n,o),Gn(se(t,"float32")));return Ft(s,i,a)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lR={kernelName:qi,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>A(n,A(t,pe(Ee(1),t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uR={kernelName:Hi,gradFunc:n=>({x:()=>Se(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hR={kernelName:Ui,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>A(wd(se(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dR={kernelName:Gi,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>A(bx(se(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pR={kernelName:vl,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{begin:o,size:r}=t,i=s.shape,[a,c]=_l(s,o,r),l=[];for(let u=0;u<n.rank;u++)l.push([a[u],i[u]-a[u]-c[u]]);return{x:()=>Ed(n,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fR={kernelName:Sl,outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{dim:o}=t,r=!0,i=A(n,s);return{logits:()=>pe(i,A(le(i,[o],r),s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mR={kernelName:ji,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>A(n,dr(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jf={kernelName:Il,gradFunc:(n,e,t)=>{const{blockShape:s,paddings:o}=t;return{x:()=>yd(n,s,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zf={kernelName:$l,gradFunc:(n,e,t)=>{const{axis:s}=t;return{x:()=>zt(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gR={kernelName:Ki,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ue(n,A(kt(se(t,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xR={kernelName:id,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>A(n,A(se(t,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yR={kernelName:Xi,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,o=Ee(2);return{a:()=>A(n,A(o,pe(t,s))),b:()=>A(n,A(o,pe(s,t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bR={kernelName:ea,gradFunc:n=>({x:()=>Se(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wR={kernelName:Yi,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,o=me(t.shape,s.shape);return{a:()=>{let a=n;const c=dt(t.shape,o);return c.length>0&&(a=le(a,c)),_(a,t.shape)},b:()=>{let a=n;const c=dt(s.shape,o);return c.length>0&&(a=le(a,c)),_(Qe(a),s.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vR={kernelName:Cl,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,o=s.shape.slice(),{axis:r}=t;ve(r,s.shape).forEach(l=>{o[l]=1});const a=_(n,o),c=A(a,Ps(s.shape,"float32"));return{x:()=>c}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CR={kernelName:Ji,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ue(n,Ge(wd(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IR={kernelName:Zi,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>A(pe(Ee(1),Ge(t)),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $R={kernelName:Qi,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{reps:o}=t;return{x:()=>{let i=Se(s);if(s.rank===1)for(let a=0;a<o[0];++a)i=Z(i,Ve(n,[a*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let a=0;a<o[0];++a)for(let c=0;c<o[1];++c)i=Z(i,Ve(n,[a*s.shape[0],c*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let a=0;a<o[0];++a)for(let c=0;c<o[1];++c)for(let l=0;l<o[2];++l)i=Z(i,Ve(n,[a*s.shape[0],c*s.shape[1],l*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let a=0;a<o[0];++a)for(let c=0;c<o[1];++c)for(let l=0;l<o[2];++l)for(let u=0;u<o[3];++u)i=Z(i,Ve(n,[a*s.shape[0],c*s.shape[1],l*s.shape[2],u*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SR={kernelName:Uo,gradFunc:(n,e,t)=>{const s=t,{perm:o}=s,r=_s(o);return{x:()=>$e(n,r)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kR={kernelName:kl,gradFunc:(n,e,t)=>{const s=t,{axis:o}=s;return{value:()=>ts(n,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TR={kernelName:Tl,inputsToSave:["segmentIds"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>NR(n,t)}}};function NR(n,e){const t=Ls(e,Se(e)),s=Id(n,t);let o=vo(e,Ee(0,"int32"));const r=s.rank-o.rank;for(let a=0;a<r;++a)o=Lt(o,a+1);o=es(o,Ps(s.shape,"bool"));const i=Se(s);return Ft(o,s,i)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ER={kernelName:Nl,gradFunc:n=>({x:()=>Se(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RR=[Fy,TN,NN,EN,RN,DN,AN,FN,ON,MN,_N,LN,BN,UN,GN,HN,qN,jN,KN,XN,YN,JN,QN,ZN,nE,sE,oE,rE,iE,aE,JE,cE,lE,uE,hE,dE,fE,pE,mE,gE,xE,yE,bE,wE,vE,CE,IE,$E,SE,NE,Xf,Xf,EE,AE,ME,_E,LE,PE,zE,BE,VE,WE,UE,GE,HE,Yf,Yf,qE,jE,YE,ZE,QE,eR,tR,nR,sR,oR,rR,iR,aR,cR,lR,uR,hR,dR,pR,fR,mR,Jf,Jf,Zf,Zf,gR,yR,xR,bR,wR,vR,CR,IR,$R,SR,kR,TR,ER];for(const n of RR)LC(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.abs=function(){return this.throwIfDisposed(),Rt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.acos=function(){return this.throwIfDisposed(),ZI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.acosh=function(){return this.throwIfDisposed(),e$(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.add=function(n){return this.throwIfDisposed(),Z(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.all=function(n,e){return this.throwIfDisposed(),mx(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.any=function(n,e){return this.throwIfDisposed(),Hu(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.argMax=function(n){return this.throwIfDisposed(),qr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.argMin=function(n){return this.throwIfDisposed(),r$(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.asScalar=function(){return this.throwIfDisposed(),k(this.size===1,()=>"The array must have only 1 element."),_(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.asType=function(n){return this.throwIfDisposed(),se(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.as1D=function(){return this.throwIfDisposed(),_(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.as2D=function(n,e){return this.throwIfDisposed(),_(this,[n,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.as3D=function(n,e,t){return this.throwIfDisposed(),_(this,[n,e,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.as4D=function(n,e,t,s){return this.throwIfDisposed(),_(this,[n,e,t,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.as5D=function(n,e,t,s,o){return this.throwIfDisposed(),_(this,[n,e,t,s,o])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.asin=function(){return this.throwIfDisposed(),a$(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.asinh=function(){return this.throwIfDisposed(),l$(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.atan=function(){return this.throwIfDisposed(),h$(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.atan2=function(n){return this.throwIfDisposed(),p$(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.atanh=function(){return this.throwIfDisposed(),m$(this)};q().prototype.avgPool=function(n,e,t,s){return this.throwIfDisposed(),xd(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.batchToSpaceND=function(n,e){return this.throwIfDisposed(),yd(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.batchNorm=function(n,e,t,s,o){return this.throwIfDisposed(),Dl(this,n,e,t,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.broadcastTo=function(n){return this.throwIfDisposed(),Ur(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.cast=function(n){return this.throwIfDisposed(),se(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.ceil=function(){return this.throwIfDisposed(),W$(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.clipByValue=function(n,e){return this.throwIfDisposed(),tn(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.concat=function(n,e){return this.throwIfDisposed(),n instanceof it&&(n=[n]),zt([this,...n],e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.conv1d=function(n,e,t,s,o,r){return this.throwIfDisposed(),gx(this,n,e,t,s,o,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.conv2dTranspose=function(n,e,t,s,o){return this.throwIfDisposed(),xx(this,n,e,t,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.conv2d=function(n,e,t,s,o,r){return this.throwIfDisposed(),ho(this,n,e,t,s,o,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.cos=function(){return this.throwIfDisposed(),wd(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.cosh=function(){return this.throwIfDisposed(),bx(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.cumprod=function(n,e,t){return this.throwIfDisposed(),ju(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.cumsum=function(n,e,t){return this.throwIfDisposed(),wx(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.depthToSpace=function(n,e){return this.throwIfDisposed(),pS(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.depthwiseConv2d=function(n,e,t,s,o,r){return this.throwIfDisposed(),vd(this,n,e,t,s,o,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.dilation2d=function(n,e,t,s,o){return this.throwIfDisposed(),gS(this,n,e,t,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.divNoNan=function(n){return this.throwIfDisposed(),vS(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.div=function(n){return this.throwIfDisposed(),ue(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.dot=function(n){return this.throwIfDisposed(),IS(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.elu=function(){return this.throwIfDisposed(),Fl(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.equal=function(n){return this.throwIfDisposed(),Un(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.erf=function(){return this.throwIfDisposed(),vx(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.euclideanNorm=function(n,e){return this.throwIfDisposed(),MS(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.exp=function(){return this.throwIfDisposed(),Gn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.expandDims=function(n){return this.throwIfDisposed(),Lt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.expm1=function(){return this.throwIfDisposed(),zS(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.fft=function(){return this.throwIfDisposed(),zx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.flatten=function(){return this.throwIfDisposed(),_(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.floor=function(){return this.throwIfDisposed(),Ml(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.floorDiv=function(n){return this.throwIfDisposed(),fx(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.gather=function(n,e,t){return this.throwIfDisposed(),Id(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.greaterEqual=function(n){return this.throwIfDisposed(),vo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.greater=function(n){return this.throwIfDisposed(),nn(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.ifft=function(){return this.throwIfDisposed(),Ku(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.irfft=function(){return this.throwIfDisposed(),AT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.isFinite=function(){return this.throwIfDisposed(),KS(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.isInf=function(){return this.throwIfDisposed(),YS(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.isNaN=function(){return this.throwIfDisposed(),ZS(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.leakyRelu=function(n){return this.throwIfDisposed(),Sd(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.lessEqual=function(n){return this.throwIfDisposed(),pr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.less=function(n){return this.throwIfDisposed(),oc(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.localResponseNormalization=function(n,e,t,s){return this.throwIfDisposed(),sk(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.logSigmoid=function(){return this.throwIfDisposed(),uk(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.logSoftmax=function(n){return this.throwIfDisposed(),kx(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.logSumExp=function(n,e){return this.throwIfDisposed(),Tx(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.log=function(){return this.throwIfDisposed(),Hn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.log1p=function(){return this.throwIfDisposed(),Sx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.logicalAnd=function(n){return this.throwIfDisposed(),es(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.logicalNot=function(){return this.throwIfDisposed(),kd(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.logicalOr=function(n){return this.throwIfDisposed(),Nx(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.logicalXor=function(n){return this.throwIfDisposed(),yk(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.matMul=function(n,e,t){return this.throwIfDisposed(),Ne(this,n,e,t)};q().prototype.maxPool=function(n,e,t,s){return this.throwIfDisposed(),Td(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.max=function(n,e){return this.throwIfDisposed(),Sn(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.maximum=function(n){return this.throwIfDisposed(),Ls(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.mean=function(n,e){return this.throwIfDisposed(),ot(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.min=function(n,e){return this.throwIfDisposed(),sc(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.minimum=function(n){return this.throwIfDisposed(),Xr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.mirrorPad=function(n,e){return this.throwIfDisposed(),kk(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.mod=function(n){return this.throwIfDisposed(),Nk(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.mul=function(n){return this.throwIfDisposed(),A(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.neg=function(){return this.throwIfDisposed(),Qe(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.norm=function(n,e,t){return this.throwIfDisposed(),Ol(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.notEqual=function(n){return this.throwIfDisposed(),rc(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.oneHot=function(n,e=1,t=0){return this.throwIfDisposed(),Ex(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.onesLike=function(){return this.throwIfDisposed(),pn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.pad=function(n,e){return this.throwIfDisposed(),Ed(this,n,e)};q().prototype.pool=function(n,e,t,s,o,r){return this.throwIfDisposed(),Pk(this,n,e,t,s,o,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.pow=function(n){return this.throwIfDisposed(),po(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.prelu=function(n){return this.throwIfDisposed(),Dd(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.prod=function(n,e){return this.throwIfDisposed(),Vk(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.reciprocal=function(){return this.throwIfDisposed(),dT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.relu=function(){return this.throwIfDisposed(),Co(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.relu6=function(){return this.throwIfDisposed(),Dx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.reshapeAs=function(n){return this.throwIfDisposed(),_(this,n.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.reshape=function(n){return this.throwIfDisposed(),_(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.resizeBilinear=function(n,e,t){return this.throwIfDisposed(),Gx(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.resizeNearestNeighbor=function(n,e,t){return this.throwIfDisposed(),Hx(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.reverse=function(n){return this.throwIfDisposed(),fo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.rfft=function(){return this.throwIfDisposed(),MT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.round=function(){return this.throwIfDisposed(),Ax(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.rsqrt=function(){return this.throwIfDisposed(),Fx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.selu=function(){return this.throwIfDisposed(),Ox(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.separableConv2d=function(n,e,t,s,o,r){return this.throwIfDisposed(),Mx(this,n,e,t,s,o,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.sigmoid=function(){return this.throwIfDisposed(),dr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.sign=function(){return this.throwIfDisposed(),vT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.sin=function(){return this.throwIfDisposed(),_x(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.sinh=function(){return this.throwIfDisposed(),Lx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.slice=function(n,e){return this.throwIfDisposed(),Ve(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.softmax=function(n){return this.throwIfDisposed(),Md(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.softplus=function(){return this.throwIfDisposed(),oa(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.spaceToBatchND=function(n,e){return this.throwIfDisposed(),Rd(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.split=function(n,e){return this.throwIfDisposed(),en(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.sqrt=function(){return this.throwIfDisposed(),kt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.square=function(){return this.throwIfDisposed(),Ge(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.squaredDifference=function(n){return this.throwIfDisposed(),LT(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.squeeze=function(n){return this.throwIfDisposed(),ia(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.stack=function(n,e){this.throwIfDisposed();const t=n instanceof it?[this,n]:[this,...n];return ts(t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.step=function(n){return this.throwIfDisposed(),aa(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.stridedSlice=function(n,e,t,s,o,r,i,a){return this.throwIfDisposed(),WT(this,n,e,t,s,o,r,i,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.sub=function(n){return this.throwIfDisposed(),pe(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.sum=function(n,e){return this.throwIfDisposed(),le(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.tan=function(){return this.throwIfDisposed(),GT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.tanh=function(){return this.throwIfDisposed(),Rl(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.tile=function(n){return this.throwIfDisposed(),In(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.toBool=function(){return this.throwIfDisposed(),se(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.toFloat=function(){return this.throwIfDisposed(),se(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.toInt=function(){return this.throwIfDisposed(),se(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.topk=function(n,e){return this.throwIfDisposed(),KT(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.transpose=function(n){return this.throwIfDisposed(),$e(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.unique=function(n){return this.throwIfDisposed(),JT(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.unsortedSegmentSum=function(n,e){return this.throwIfDisposed(),Wx(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.unstack=function(n){return this.throwIfDisposed(),mo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.where=function(n,e){return this.throwIfDisposed(),Ft(n,this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */q().prototype.zerosLike=function(){return this.throwIfDisposed(),Se(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Fn extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Fn.prototype)}}class un extends Error{constructor(e){super(e),Object.setPrototypeOf(this,un.prototype)}}class D extends Error{constructor(e){super(e),Object.setPrototypeOf(this,D.prototype)}}class xe extends Error{constructor(e){super(e),Object.setPrototypeOf(this,xe.prototype)}}class yp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,yp.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class My{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=e}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function go(n,e){if(Array.isArray(n)){let t=[];for(let s=0;s<e;s++)t=t.concat(n);return t}else{const t=new Array(e);return t.fill(n),t}}function On(n,e){if(!n)throw new yp(e)}function Qf(n,e){let t=0;for(const s of n)s===e&&t++;return t}function Pt(n){return n.length===1?n[0]:n}function Ae(n){return Array.isArray(n)?n:[n]}function Jn(n){const t=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function Ys(n){return n.length<=1||n.indexOf("_")===-1?n:n.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}let on={};function bp(n){if(n==null)return null;const e={};return e.className=n.getClassName(),e.config=n.getConfig(),e}function Ju(n){if(!(n==null||typeof n!="object"))if(Array.isArray(n))n.forEach(e=>Ju(e));else{const e=Object.keys(n);for(const t of e){const s=n[t];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?n[t]=s.value:Ju(s))}}}function ha(n,e={},t={},s="object",o=!1){if(typeof n=="string"){const r=n;let i;if(r in t)i=t[r];else if(r in on)i=on[r];else if(i=e[r],i==null)throw new D(`Unknown ${s}: ${n}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{const r=n;if(r.className==null||r.config==null)throw new D(`${s}: Improper config format: ${JSON.stringify(r)}.
'className' and 'config' must set.`);const i=r.className;let a,c;if(i in t?[a,c]=t[i]:i in on?[a,c]=on.className:i in e&&([a,c]=e[i]),a==null)throw new D(`Unknown ${s}: ${i}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(c!=null){const l={};for(const p of Object.keys(on))l[p]=on[p];for(const p of Object.keys(t))l[p]=t[p];const u=r.config;u.customObjects=l;const h=Object.assign({},on);for(const p of Object.keys(t))on[p]=t[p];Ju(r.config);const d=c(a,r.config,t,o);return on=Object.assign({},h),d}else{const l=Object.assign({},on);for(const h of Object.keys(t))on[h]=t[h];const u=new a(r.config);return on=Object.assign({},l),u}}}function DR(n,e){return n<e?-1:n>e?1:0}function Na(n,e){return-1*DR(n,e)}function Is(n){if(n==null)return n;const e=[];for(const t of n)e.indexOf(t)===-1&&e.push(t);return e}function AR(n){if(n==null)throw new D(`Invalid value in obj: ${JSON.stringify(n)}`);for(const e in n)if(n.hasOwnProperty(e))return!1;return!0}function $o(n,e,t){if(t!=null&&n.indexOf(t)<0)throw new D(`${t} is not a valid ${e}.  Valid values are ${n} or null/undefined.`)}function wp(n,e,t=0,s=1/0){return On(t>=0),On(s>=t),Array.isArray(n)&&n.length>=t&&n.length<=s&&n.every(o=>typeof o===e)}function gt(n,e){Array.isArray(n)?(k(n.length>0,()=>`${e} is unexpectedly an empty array.`),n.forEach((t,s)=>gt(t,`element ${s+1} of ${e}`))):k(Number.isInteger(n)&&n>0,()=>`Expected ${e} to be a positive integer, but got ${_y(n)}.`)}function _y(n){return n===null?"null":Array.isArray(n)?"["+n.map(e=>_y(e)).join(",")+"]":typeof n=="string"?`"${n}"`:`${n}`}function FR(n,e,t){let s=t!=null?t():_t(),o;return(...i)=>{const a=t!=null?t():_t();return a-s<e||(s=a,o=n(...i)),o}}function Ly(n){return n==="relu"?"relu":n==="linear"?"linear":n==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let OR=0;function Py(){return OR++}const Ea={};function Bl(n=""){return n in Ea||(Ea[n]=0),Ea[n]+=1,n+Ea[n].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const MR=["channelsFirst","channelsLast"],_R=["nearest","bilinear"],LR=["valid","same","causal"],PR=["max","avg"],zR=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Do=new Map;function nt(n){$o(MR,"DataFormat",n)}function BR(n){$o(_R,"InterpolationFormat",n)}function sn(n){$o(LR,"PaddingMode",n)}function zy(n){$o(PR,"PoolMode",n)}const Gr=[],em="/";function no(n,e){Gr.push(n);try{const t=e();return Gr.pop(),t}catch(t){throw Gr.pop(),t}}function VR(){return Gr.length===0?"":Gr.join(em)+em}function By(n){if(!Wy(n))throw new Error("Not a valid tensor name: '"+n+"'");return VR()+n}function Vy(n){if(!Wy(n))throw new Error("Not a valid tensor name: '"+n+"'");Do.has(n)||Do.set(n,0);const e=Do.get(n);if(Do.set(n,Do.get(n)+1),e>0){const t=`${n}_${e}`;return Do.set(t,1),t}else return n}const WR=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Wy(n){return!!n.match(WR)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function UR(n){return n===parseInt(n.toString(),10)}function $s(n,e,t){e==null&&(e=0),t==null&&(t=n.length);let s=1;for(let o=e;o<t;++o)s*=n[o];return s}function er(n){if(n.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let t=0;t<n.length;t++){const s=n[t];s<e&&(e=s)}return e}function Ts(n){if(n.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let t=0;t<n.length;t++){const s=n[t];s>e&&(e=s)}return e}function Tn(n,e){if(e<n)throw new D(`end (${e}) < begin (${n}) is forbidden.`);const t=[];for(let s=n;s<e;++s)t.push(s);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let mu;function ct(){return mu==null&&(mu=hI().epsilon()),mu}function Nn(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Bn(n,e){return se(n,e)}function da(n,e=-1){const t=n.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),_(n,t)}function GR(n,e){return V(()=>{if(n.shape.length!==2)throw new D(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);const t=da(n,1);return Zu(t,[1,e,1])})}function HR(n){const e=[$s(n.shape)];return _(n,e)}function qR(n){if(n.rank<=1)throw new D(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const e=[n.shape[0],$s(n.shape,1)];return _(n,e)}function so(n,e,t){return V(()=>{switch(n.rank){case 1:return Fd(n,e,t);case 2:return Px(n,[e,0],[t,n.shape[1]]);case 3:return Od(n,[e,0,0],[t,n.shape[1],n.shape[2]]);case 4:return ac(n,[e,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3]]);case 5:return Ve(n,[e,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return Ve(n,[e,0,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new D(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function gu(n,e,t){return V(()=>{switch(n.rank){case 1:return Fd(n,e,t);case 2:return Px(n,[0,e],[n.shape[0],t]);case 3:return Od(n,[0,0,e],[n.shape[0],n.shape[1],t]);case 4:return ac(n,[0,0,0,e],[n.shape[0],n.shape[1],n.shape[2],t]);default:throw new D(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Ra(n,e,t,s){return V(()=>{switch(n.rank){case 1:return Fd(n,e,t);case 2:switch(s){case 1:return so(n,e,t);case 2:return gu(n,e,t);default:throw new D(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return so(n,e,t);case 2:return Od(n,[0,e,0],[n.shape[0],t,n.shape[2]]);case 3:return gu(n,e,t);default:throw new D(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return so(n,e,t);case 2:return ac(n,[0,e,0,0],[n.shape[0],t,n.shape[2],n.shape[3]]);case 3:return ac(n,[0,0,e,0],[n.shape[0],n.shape[1],t,n.shape[3]]);case 4:return gu(n,e,t);default:throw new D(`The axis is not within the rank of the tensor ${s}`)}default:throw new D(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function vp(n,e=-1){let t;return e<0&&(t=n[0].rank,t!==0?e=t:e=0),e===n[0].rank&&(e=-1),zt(n,e)}function tm(n,e){switch(n.rank){case 1:return H$([n,e]);case 2:return j$([n,e],0);case 3:return X$([n,e],0);case 4:return J$([n,e],0);default:throw new D(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function Zu(n,e){if(Array.isArray(e)||(e=[e]),n.rank!==e.length)throw new D(`The length of input n (${e.length}) does not match the number of dimensions in input x (${n.rank})`);return In(n,e)}function Vl(n,e=0,t=1,s,o){return cT(n,e,t,s,o)}function Vn(n,e,t,s){if(n.rank<2||e.rank<2)throw new xe(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${e.shape}`);if(e.rank>=3){const o=n.shape.slice(-1)[0],r=e.shape.slice(-2)[0];if(o!==r)throw new xe(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${e.shape}`)}if(n.rank===2&&e.rank===2)return zf({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?Qu(n.rank,s,Nn()):null,activation:t});{const o=n.shape.slice(),r=o.pop();n=_(n,[-1,r]);const i=e.shape.slice(),a=i.pop(),c=i.pop(),l=[...i,a],u=Array.from({length:e.rank},(f,m)=>m===0?e.rank-2:m<=e.rank-2?m-1:m);e=_($e(e,u),[c,-1]);const h=[...o,...l];return _(zf({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?Qu(n.rank,s,Nn()):null,activation:t}),h)}}function Uy(n,e,t){return V(()=>(Array.isArray(e)?e=qt(e,"int32"):e=se(e,"int32"),Id(n,e,t)))}function pa(n){return A(n,n)}function Qu(n,e,t){const s=e.shape;if(e.rank!==1&&e.rank!==n)throw new D(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${n}`);if(n===5){if(t==="channelsFirst")return s.length===1?_(e,[1,s[0],1,1,1]):_(e,[1,s[3],s[0],s[1],s[2]]);if(t==="channelsLast")return s.length===1?_(e,[1,1,1,1,s[0]]):_(e,[1].concat(s))}else if(n===4){if(t==="channelsFirst")return s.length===1?_(e,[1,s[0],1,1]):_(e,[1,s[2],s[0],s[1]]);if(t==="channelsLast")return s.length===1?_(e,[1,1,1,s[0]]):_(e,[1].concat(s))}else if(n===3){if(t==="channelsFirst")return s.length===1?_(e,[1,s[0],1]):_(e,[1,s[1],s[0]]);if(t==="channelsLast")return s.length===1?_(e,[1,1,s[0]]):_(e,[1].concat(s))}else if(n<3)return e;throw new D(`Unsupported input rank by biasAdd: ${e.rank}`)}function Rn(n,e,t){return V(()=>(t==null&&(t=Nn()),nt(t),Z(n,Qu(n.rank,e,t))))}function jR(n,e=1){if(e!==1)throw new xe(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return Fl(n)}function KR(n){return V(()=>ue(n,Z(Rt(n),1)))}function Gy(n,e,t,s){return V(()=>o2(n,e,t,s))}function XR(n){return V(()=>{const e=Z(.5,A(.2,n));return tn(e,0,1)})}function fa(n,e,t=!1){return t?n():e()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const YR=["fanIn","fanOut","fanAvg"],JR=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ZR(n){$o(YR,"FanMode",n)}function QR(n){$o(JR,"Distribution",n)}class mn extends mr{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Hy extends mn{apply(e,t){return We(e,t)}}Hy.className="Zeros";J(Hy);class Cp extends mn{apply(e,t){return Ps(e,t)}}Cp.className="Ones";J(Cp);class qy extends mn{constructor(e){if(super(),typeof e!="object")throw new D(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new D(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return V(()=>A(Ee(this.value),Ps(e,t)))}getConfig(){return{value:this.value}}}qy.className="Constant";J(qy);class jy extends mn{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return ra(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}jy.className="RandomUniform";J(jy);class Ky extends mn{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new xe(`randomNormal does not support dType ${t}.`);return Vl(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Ky.className="RandomNormal";J(Ky);class Xy extends mn{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new xe(`truncatedNormal does not support dType ${t}.`);return Vx(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Xy.className="TruncatedNormal";J(Xy);class Yy extends mn{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,t){return V(()=>{if(e.length!==2||e[0]!==e[1])throw new D("Identity matrix initializer can only be used for 2D square matrices.");return A(this.gain,$x(e[0]))})}getConfig(){return{gain:this.gain}}}Yy.className="Identity";J(Yy);function eD(n,e="channelsLast"){let t,s;if(nt(e),n.length===2)t=n[0],s=n[1];else if([3,4,5].indexOf(n.length)!==-1){if(e==="channelsFirst"){const o=$s(n,2);t=n[1]*o,s=n[0]*o}else if(e==="channelsLast"){const o=$s(n,0,n.length-2);t=n[n.length-2]*o,s=n[n.length-1]*o}}else{const o=$s(n);t=Math.sqrt(o),s=Math.sqrt(o)}return[t,s]}class Xt extends mn{constructor(e){if(super(),e.scale<0)throw new D(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,ZR(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,QR(this.distribution),this.seed=e.seed}apply(e,t){const s=eD(e),o=s[0],r=s[1];let i=this.scale;if(this.mode==="fanIn"?i/=Math.max(1,o):this.mode==="fanOut"?i/=Math.max(1,r):i/=Math.max(1,(o+r)/2),this.distribution==="normal"){const a=Math.sqrt(i);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new xe(`${this.getClassName()} does not support dType ${t}.`);return Vx(e,0,a,t,this.seed)}else{const a=Math.sqrt(3*i);return ra(e,-a,a,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Xt.className="VarianceScaling";J(Xt);class Ip extends Xt{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Xt.className}}Ip.className="GlorotUniform";J(Ip);class $p extends Xt{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Xt.className}}$p.className="GlorotNormal";J($p);class Sp extends Xt{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Xt.className}}Sp.className="HeNormal";J(Sp);class kp extends Xt{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Xt.className}}kp.className="HeUniform";J(kp);class Tp extends Xt{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Xt.className}}Tp.className="LeCunNormal";J(Tp);class Np extends Xt{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Xt.className}}Np.className="LeCunUniform";J(Np);class Jy extends mn{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return V(()=>{if(e.length<2)throw new xe("Shape must be at least 2D.");if(t!=="int32"&&t!=="float32"&&t!==void 0)throw new TypeError(`Unsupported data type ${t}.`);t=t;const s=j(e.slice(0,-1)),o=e[e.length-1],r=s*o;r>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${r}) elements: Slowness may result.`);const i=[Math.max(o,s),Math.min(o,s)],a=Vl(i,0,1,t,this.seed),c=eN.qr(a,!1);let l=c[0];const h=c[1].flatten().stridedSlice([0],[Math.min(o,s)*Math.min(o,s)],[Math.min(o,s)+1]);return l=A(l,h.sign()),s<o&&(l=l.transpose()),A(Ee(this.gain),l.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}}Jy.className="Orthogonal";J(Jy);const nm={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function sm(n,e={}){return ha(n,ln.getMap().classNameMap,e,"initializer")}function Xe(n){return bp(n)}function qe(n){if(typeof n=="string"){const e=n in nm?nm[n]:n;if(e==="GlorotNormal")return new $p;if(e==="GlorotUniform")return new Ip;if(e==="HeNormal")return new Sp;if(e==="HeUniform")return new kp;if(e==="LeCunNormal")return new Tp;if(e==="LeCunUniform")return new Np;{const t={};return t.className=e,t.config={},sm(t)}}else return n instanceof mn?n:sm(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function eh(n){return Array.isArray(n)&&Array.isArray(n[0])}function cc(n){return n.length===0?[]:Array.isArray(n[0])?n:[n]}function fe(n){let e;if(Array.isArray(n)){if(n.length!==1)throw new D(`Expected Tensor length to be 1; got ${n.length}`);e=n[0]}else e=n;return e}function Te(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(n.length===1)return n=n,n[0];throw new D(`Expected exactly 1 Shape; got ${n.length}`)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function lc(n){let e=0;for(const t of n)t.shape.length===0?e+=1:e+=t.shape.reduce((s,o)=>s*o);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const om="Variable";class tD{constructor(e,t="float32",s=om,o=!0,r=null){this.dtype=t??"float32",this.shape=e.shape,this.id=Py(),s=s??om,this.originalName=By(s),this.name=Vy(this.originalName),this.trainable_=o,this.constraint=r,this.val=e2(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),nD(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function nD(n,e){if(n.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(e.shape))}function th(n){return n.map(e=>e.read())}function Ep(n){n.forEach(e=>{e[0].write(e[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class lt{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class qn{constructor(e,t,s,o,r,i,a){this.dtype=e,this.shape=t,this.sourceLayer=s,this.inputs=o,this.callArgs=r,this.outputTensorIndex=a,this.id=Py(),i!=null&&(this.originalName=By(i),this.name=Vy(this.originalName)),this.rank=t.length}}let sD=0;class Wl{constructor(e,t){this.callArgs=t,this.id=sD++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const s of e.inboundLayers)s?.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let oD=0;class Ce extends mr{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=oD++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const s=this.getClassName();t=Jn(s)+"_"+Bl(s)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let s;if(e.batchInputShape!=null)s=e.batchInputShape;else if(e.inputShape!=null){let r=null;e.batchSize!=null&&(r=e.batchSize),s=[r].concat(e.inputShape)}this.batchInputShape=s;let o=e.dtype;o==null&&(o=e.inputDType),o==null&&(o="float32"),this.dtype=o}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new un(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new D(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Pt(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Pt(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Fn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Fn(`Layer ${this.name} is not connected, no input to return.`);return Pt(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Fn(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Fn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Pt(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=Ae(e);if(this.inputSpec==null||this.inputSpec.length===0)return;const s=Ae(this.inputSpec);if(t.length!==s.length)throw new D(`Layer ${this.name} expects ${s.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let o=0;o<t.length;o++){const r=t[o],i=s[o];if(i==null)continue;const a=r.rank;if(i.ndim!=null&&a!==i.ndim)throw new D(`Input ${o} is incompatible with layer ${this.name}: expected ndim=${i.ndim}, found ndim=${a}`);if(i.maxNDim!=null&&a>i.maxNDim)throw new D(`Input ${o} is incompatible with layer ${this.name}: expected max_ndim=${i.maxNDim}, found ndim=${a}`);if(i.minNDim!=null&&a<i.minNDim)throw new D(`Input ${o} is incompatible with layer ${this.name}: expected min_ndim=${i.minNDim}, found ndim=${a}.`);if(i.dtype!=null&&r.dtype!==i.dtype)throw new D(`Input ${o} is incompatible with layer ${this.name} : expected dtype=${i.dtype}, found dtype=${r.dtype}.`);if(i.axes){const c=r.shape;for(const l in i.axes){const u=Number(l),h=i.axes[l],d=u>=0?c[u]:c[c.length+u];if(h!=null&&[h,null].indexOf(d)===-1)throw new D(`Input ${o} is incompatible with layer ${this.name}: expected axis ${u} of input shape to have value ${h} but got shape ${c}.`)}}if(i.shape!=null)for(let c=0;c<i.shape.length;++c){const l=i.shape[c],u=r.shape[c];if(l!=null&&u!=null&&l!==u)throw new D(`Input ${o} is incompatible with layer ${this.name}: expected shape=${i.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const s=Ae(e),o=aD(e),r=cD(e);if(o===r)throw new D("Arguments to apply() must be all SymbolicTensors or all Tensors");return no(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const i=[];for(const a of Ae(e))i.push(a.shape);this.build(Pt(i)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let i=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,i);const a=Ae(i),c=[];for(let l of a)s.indexOf(l)!==-1&&(l=l.clone()),c.push(l);if(i=Pt(c),this.activityRegularizer!=null)throw new xe("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}else{const i=rD(e),a=this.computeOutputShape(i);let c;const l=iD(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?i[0]:i),a!=null&&a.length>0&&Array.isArray(a[0])?c=a.map((u,h)=>new qn(l,u,this,Ae(e),t,this.name,h)):c=new qn(l,a,this,Ae(e),t,this.name),this.addInboundNode(e,c,null,null,i,a,t),this._refCount++,this.activityRegularizer!=null)throw new xe("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return c}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((s,o)=>{s!=null&&e[o]!=null&&e[o]!==s&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Fn(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const s=JSON.stringify(t.outputShapes);e.indexOf(s)===-1&&e.push(s)}if(e.length===1){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new Fn(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new un(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return lc(this.weights)}build(e){this.built=!0}getWeights(e=!1){return th(e?this.trainableWeights:this.weights)}setWeights(e){V(()=>{const t=this.weights;if(t.length!==e.length)throw new D(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;const s=[],o=th(t);for(let r=0;r<o.length;++r){const i=o[r],a=t[r],c=e[r];if(!Re(i.shape,c.shape))throw new D(`Layer weight shape ${i.shape} not compatible with provided weight shape ${c.shape}`);s.push([a,c])}Ep(s)})}addWeight(e,t,s,o,r,i,a,c){if(this._addedWeightNames.indexOf(e)!==-1)throw new D(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(o=c!=null?c():qe("zeros"));const l=o.apply(t,s),u=new tD(l,s,e,i,a);return l.dispose(),r!=null&&this.addLoss(()=>r.apply(u.read())),i==null&&(i=!0),i?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=Ae(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}setMaskMetadata(e,t,s){if(!this.supportsMasking)return;const o=this.computeMask(e,s),r=Ae(t),i=Ae(o);if(r.length!==i.length)throw new Error(`${this.name} outputs ${r.length} tensors but ${r.length} masks for those tensors`);for(let a=0;a<r.length;a++)r[a].kerasMask=i[a]}addInboundNode(e,t,s,o,r,i,a=null){const c=Ae(e);t=Ae(t),s=Ae(s),o=Ae(o),r=cc(r),i=cc(i);const l=[],u=[],h=[];for(const d of c)l.push(d.sourceLayer),u.push(d.nodeIndex),h.push(d.tensorIndex);new Wl({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:h,inputTensors:c,outputTensors:t,inputMasks:s,outputMasks:o,inputShapes:r,outputShapes:i},a);for(let d=0;d<t.length;d++)t[d].sourceLayer=this,t[d].nodeIndex=this.inboundNodes.length-1,t[d].tensorIndex=d}getConfig(){const e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function rD(n){n=Ae(n);const e=[];for(const t of n)e.push(t.shape);return Pt(e)}function iD(n){return"float32"}function Zy(n,e,t){if((e==null||t!=null&&t>0)&&(e=n.sourceLayer,t=n.nodeIndex),e.inboundNodes.length===0)return[n];{const s=e.inboundNodes[t];if(s.inboundLayers.length===0)return s.inputTensors;{const o=[];for(let r=0;r<s.inboundLayers.length;r++){const i=s.inputTensors[r],a=s.inboundLayers[r],c=s.nodeIndices[r],l=Zy(i,a,c);for(const u of l)o.indexOf(u)===-1&&o.push(u)}return o}}}function aD(n){let e=!0;for(const t of Ae(n))if(!(t instanceof qn)){e=!1;break}return e}function cD(n){let e=!0;for(const t of Ae(n))if(t instanceof qn){e=!1;break}return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ma extends Ce{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:Bl("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new D("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new D("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new D("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=e.dtype||"float32";this.batchInputShape=t,this.dtype=s,this.inputSpec=[{shape:t}];const o=new qn(this.dtype,this.batchInputShape,this,[],{},this.name);o.nodeIndex=0,o.tensorIndex=0,new Wl({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[o],outputTensors:[o],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new D(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}ma.className="InputLayer";J(ma);function lD(n){if(n.batchShape==null&&n.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(n.batchShape!=null&&n.shape!=null)throw new D("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=n.batchShape;n.shape!=null&&e==null&&(e=[null].concat(n.shape));let t=n.dtype;return t==null&&(t="float32"),new ma({batchInputShape:e,name:n.name,dtype:t,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function uD(n,e){if(n.dtype==null||n.dtype===e.dtype)return e;try{return se(e,n.dtype)}catch{throw new D(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}class bs{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof bs)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,s){if(this.id2Value[e.id]==null)this.id2Value[e.id]=uD(e,t),this.name2Id[e.name]=e.id,s!=null&&(this.id2Mask[e.id]=s);else throw new D(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof qn){if(this.id2Value[e.id]==null)throw new D(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{const t=this.name2Id[e];if(t==null)throw new D(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof qn){if(this.id2Value[e.id]==null)throw new D(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{const t=this.name2Id[e];if(t==null)throw new D(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&be(this.id2Mask)}}const uc=new My,hc=new My;function hD(n){uc?.setMaxEntries(n),hc?.setMaxEntries(n)}function Pr(n,e,t,s){const o=t==null?!1:t.training,r=Array.isArray(n),i=r?n:[n],a=i.map(f=>f.name),c=[],l=e.names();for(const f of a)l.indexOf(f)!==-1?c.push(e.getValue(f)):c.push(null);const u=a.join(",")+"|"+e.names().sort().join(",");let h=uc.get(u),d;if(h==null){const f=dD(i,e);h=f.sorted,d=f.recipientCounts,uc.put(u,h),hc.put(u,d)}d={},o||Object.assign(d,hc.get(u));const p=new bs(e);for(let f=0;f<h.length;++f){const m=h[f],g=m.sourceLayer;if(g instanceof ma)continue;const x=[],y=[],w=[];let b=!1;for(const $ of m.inputs){const S=p.getValue($),C=p.getMask($);x.push(S),y.push(C),C!=null&&(b=!0),o||(d[$.name]--,d[$.name]===0&&!e.hasKey($)&&a.indexOf($.name)===-1&&!S.isDisposed&&$.sourceLayer.stateful!==!0&&w.push(S))}b&&(t=t||{},t.mask=y[0]);const v=Ae(g.apply(x,t));let I=null;g.supportsMasking&&(I=g.computeMask(x,y));const T=fD(m),N=Array.isArray(T)?T:[T];for(let $=0;$<N.length;++$){p.hasKey(N[$])||p.add(N[$],v[$],Array.isArray(I)?I[0]:I);const S=a.indexOf(N[$].name);S!==-1&&(c[S]=v[$])}o||be(w)}return p.disposeMasks(),r?c:c[0]}function dD(n,e){k(n!=null&&n.length>0,()=>"Expected at least one fetch, got none");let t=[],s={};if(n.length===1){const o=rm(n[0],e);t=o.sorted,s=o.recipientMap}else{const o=new Set;for(const r of n){const{sorted:i,recipientMap:a}=rm(r,e);for(const c of i)o.has(c.name)||(t.push(c),o.add(c.name));for(const c in a)s[c]==null&&(s[c]=new Set),a[c].forEach(l=>s[c].add(l))}}return{sorted:t,recipientCounts:pD(s)}}function pD(n){const e={};for(const t in n)e[t]=n[t].size;return e}function rm(n,e){const t=new Set,s=[],o={};for(const a of e.names())t.add(a);const r=[],i=[];for(r.push(n);r.length>0;){const a=r[r.length-1];if(t.has(a.name)){r.pop();continue}const c=i[i.length-1]===r.length-1;if(a.inputs.length===0||c)r.pop(),s.push(a),t.add(a.name),c&&i.pop();else{i.push(r.length-1);for(const l of a.inputs)o[l.name]==null&&(o[l.name]=new Set),o[l.name].add(a.name),!t.has(l.name)&&r.push(l)}}return{sorted:s,recipientMap:o}}function fD(n){let e;if(n.sourceLayer.inboundNodes.length===1)e=n.sourceLayer.output;else{let t=null;for(let s=0;s<n.sourceLayer.inboundNodes.length;++s)for(const o of n.sourceLayer.inboundNodes[s].outputTensors)if(o.id===n.id){t=s;break}e=n.sourceLayer.getOutputAt(t)}return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mD=W();mD.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,hD);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Rp(n,e){return V(()=>kt(le(A(n,n),e,!0)))}class ga extends mr{getConfig(){return{}}}class Qy extends ga{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return V(()=>{const t=Rp(e,this.axis),s=tn(t,0,this.maxValue);return A(e,ue(s,Z(ct(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Qy.className="MaxNorm";J(Qy);class eb extends ga{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return V(()=>ue(e,Z(ct(),Rp(e,this.axis))))}getConfig(){return{axis:this.axis}}}eb.className="UnitNorm";J(eb);class tb extends ga{apply(e){return Co(e)}}tb.className="NonNeg";J(tb);class nb extends ga{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return V(()=>{const t=Rp(e,this.axis),s=Z(A(this.rate,tn(t,this.minValue,this.maxValue)),A(1-this.rate,t));return A(e,ue(s,Z(ct(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}nb.className="MinMaxNorm";J(nb);const im={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function ut(n){return bp(n)}function am(n,e={}){return ha(n,ln.getMap().classNameMap,e,"constraint")}function ht(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in im?im[n]:n,config:{}};return am(t)}else return n instanceof ga?n:am(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function Gs(n){if(n==null)return;const e=[],t=[],s=[];for(const o in n){const r=n[o];if(typeof r!="number"){const i=r;e.push(i.data()),t.push(o),s.push(i)}}if(e.length>0){const o=await Promise.all(e);for(let r=0;r<o.length;++r)n[t[r]]=o[r][0];be(s)}}function sb(n){if(n!=null)for(const e in n){const t=n[e];typeof t!="number"&&t.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var cm;(function(n){n[n.SILENT=0]="SILENT",n[n.VERBOSE=1]="VERBOSE"})(cm||(cm={}));const gD=125;class Jr{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class xD{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class yD extends Jr{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});const s=t.size==null?0:t.size;this.seen+=s;for(const o in t){const r=t[o];if(typeof r=="number")this.totals.hasOwnProperty(o)||(this.totals[o]=0),this.totals[o]=this.totals[o]+r*s;else{let i;o in this.totals?i=this.totals[o]:this.totals[o]=0;const a=V(()=>Z(this.totals[o],A(r,s)));this.totals[o]=a,i?.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?t[s]=this.totals[s]/this.seen:V(()=>{const o=A(ue(1,this.seen),this.totals[s]);t[s]=o,this.totals[s].dispose(),Pn(t[s])}))}}class bD extends Jr{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(const s in t)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(t[s])}async syncData(){const e=[],t=[],s=[];for(const r in this.history){const i=this.history[r];for(let a=0;a<i.length;++a)if(typeof i[a]!="number"){const c=i[a];e.push(c.data()),t.push(r),s.push(a)}}const o=await Promise.all(e);for(let r=0;r<o.length;++r)this.history[t[r]][s[r]].dispose(),this.history[t[r]][s[r]]=o[r][0]}}class wD extends Jr{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||cy,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=gD),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Du(this.yieldEvery)&&(this.maybeWait=FR(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,s){const o=[];this.yield!=null&&(await Gs(s),o.push(this.yield(e,t,s))),o.push(this.nextFrameFunc()),await Promise.all(o)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await Gs(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const s=[];this.epochEnd!=null&&(await Gs(t),s.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&s.push(this.nextFrameFunc()),await Promise.all(s)}async onBatchBegin(e,t){this.batchBegin!=null&&(await Gs(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const s=[];this.batchEnd!=null&&(await Gs(t),s.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?s.push(this.nextFrameFunc()):Du(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(s)}async onTrainBegin(e){this.trainBegin!=null&&(await Gs(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await Gs(e),await this.trainEnd(e))}}function ob(n,e){return n==null&&(n={}),n instanceof Jr?[n]:Array.isArray(n)&&n[0]instanceof Jr?n:Ae(n).map(s=>new wD(s,e))}class cn{constructor(){}static registerCallbackConstructor(e,t){k(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),cn.checkForDuplicate(t),cn.constructors[e]==null&&(cn.constructors[e]=[]),cn.constructors[e].push(t)}static checkForDuplicate(e){for(const t in cn.constructors)cn.constructors[+t].forEach(o=>{if(o===e)throw new D("Duplicate callback constructor.")})}static clear(){cn.constructors={}}static createCallbacks(e){const t=[];for(const s in cn.constructors){const o=+s;e>=o&&t.push(...cn.constructors[o])}return t.map(s=>new s)}}cn.constructors={};function rb(n,e,t,s,o,r,i,a,c){const l=new bD,u=[new yD,...cn.createCallbacks(e)];n!=null&&u.push(...n),u.push(l);const h=new xD(u);return h.setParams({epochs:t,initialEpoch:s,samples:o,steps:r,batchSize:i,verbose:e,doValidation:a,metrics:c}),{callbackList:h,history:l}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Wn(n,e={},t=!1){return ha(n,ln.getMap().classNameMap,e,"layer",t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function dc(n,e){return V(()=>{n.dtype!=="float32"&&(n=se(n,"float32"));const t=le(pa(n),e,!0),s=Al(t.shape,ct()),o=kt(Ls(t,s));return ue(n,o)})}function Ul(n,e){return V(()=>ot(pa(pe(e,n)),-1))}function Dp(n,e){return V(()=>ot(Rt(pe(e,n)),-1))}function Ap(n,e){return V(()=>{const t=pe(n,e),s=tn(Rt(n),ct(),Number.MAX_VALUE),o=Rt(ue(t,s));return A(100,ot(o,-1))})}function vD(n,e){return V(()=>{const t=tn(e,ct(),Number.MAX_VALUE),s=Hn(Z(1,t)),o=tn(n,ct(),Number.MAX_VALUE),r=Hn(Z(1,o));return ot(pa(pe(s,r)),-1)})}function CD(n,e){return V(()=>{const t=Ls(0,pe(1,A(n,e)));return ot(pa(t),-1)})}function ID(n,e){return V(()=>{const t=Ls(0,pe(1,A(n,e)));return ot(t,-1)})}function $D(n,e){return V(()=>{const t=le(A(n,e),-1),s=Sn(A(pe(1,n),e),-1);return Ls(0,Z(1,pe(s,t)))})}function SD(n,e){return V(()=>{const t=Math.log(2),s=pe(e,n),o=pe(Z(s,oa(A(-2,s))),t);return ot(o,-1)})}function Zr(n,e,t=!1){return V(()=>{if(t)e=Md(e);else{const s=le(e,e.shape.length-1,!0);e=ue(e,s)}return e=tn(e,ct(),1-ct()),Qe(le(A(se(n,"float32"),Hn(e)),e.shape.length-1))})}function pc(n,e,t=!1){return V(()=>{const s=se(Ml(HR(n)),"int32");e=tn(e,ct(),1-ct());const o=e.shape,r=_(Ex(s,o[o.length-1]),o);return Zr(r,e,t)})}function kD(n,e){if(!Re(n.shape,e.shape))throw new D(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(e.shape)}`);return V(()=>{const t=Co(e),s=Qe(Rt(e));return Z(pe(t,A(e,n)),Sx(Gn(s)))})}function Gl(n,e){return V(()=>{let t;return t=tn(e,ct(),1-ct()),t=Hn(ue(t,pe(1,t))),ot(kD(n,t),-1)})}function TD(n,e){return V(()=>{const t=tn(n,ct(),1),s=tn(e,ct(),1);return le(A(n,Hn(ue(t,s))),-1)})}function ND(n,e){return V(()=>{const t=Hn(Z(ct(),e));return ot(pe(e,A(n,t)),-1)})}function ib(n,e){return V(()=>{const t=dc(n,-1),s=dc(e,-1),o=A(t,s);return Qe(le(o,-1))})}const fc={meanSquaredError:Ul,meanAbsoluteError:Dp,meanAbsolutePercentageError:Ap,meanSquaredLogarithmicError:vD,squaredHinge:CD,hinge:ID,categoricalHinge:$D,logcosh:SD,categoricalCrossentropy:Zr,sparseCategoricalCrossentropy:pc,binaryCrossentropy:Gl,kullbackLeiblerDivergence:TD,poisson:ND,cosineProximity:ib};function xu(n){if(typeof n=="string"){if(n in fc)return fc[n];let e=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new D(e)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ab(n,e){return V(()=>{const t=A(.5,pn(e)),s=Bn(nn(e,t),n.dtype);return ot(Un(n,s),-1)})}function cb(n,e){return V(()=>Bn(Un(qr(n,-1),qr(e,-1)),"float32"))}function ED(n,e){return V(()=>se(le(es(Un(n,1),Un(e,1))),"float32"))}function RD(n,e){return V(()=>se(le(es(Un(n,0),Un(e,1))),"float32"))}function DD(n,e){return V(()=>{const t=ED(n,e),s=RD(n,e),o=Z(t,s);return se(Ft(nn(o,0),ue(t,o),0),"float32")})}function AD(n,e){return Gl(n,e)}function FD(n,e){return n.rank===e.rank&&(n=ia(n,[n.rank-1])),e=qr(e,-1),e.dtype!==n.dtype&&(e=se(e,n.dtype)),se(Un(n,e),"float32")}const OD=Ul,MD=Ul,_D=Dp,LD=Dp,PD=Ap,zD=Ap,lb=Zr,BD=ib,ub=pc,mc={binaryAccuracy:ab,categoricalAccuracy:cb,precision:DD,categoricalCrossentropy:lb,sparseCategoricalCrossentropy:ub,mse:OD,MSE:MD,mae:_D,MAE:LD,mape:PD,MAPE:zD,cosine:BD};function VD(n){if(typeof n=="string"&&n in mc)return mc[n];if(typeof n!="string"&&n!=null)return n;throw new D(`Unknown metric ${n}`)}function Da(n){if(On(n!==null,`Unknown LossOrMetricFn ${n}`),typeof n=="string")return n;{let e;for(const t of Object.keys(fc))if(fc[t]===n){e=t;break}if(e!==void 0)return e;for(const t of Object.keys(mc))if(mc[t]===n){e=t;break}return e!==void 0?e:n.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function WD(n){const e={Adagrad:()=>fs.adagrad(.01),Adadelta:()=>fs.adadelta(1,.95,ct()),Adam:()=>fs.adam(.001,.9,.999,ct()),Adamax:()=>fs.adamax(.002,.9,.999,ct(),0),RMSProp:()=>fs.rmsprop(.001,.9,0,ct()),SGD:()=>fs.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,n in e)return e[n]();throw new D(`Unknown Optimizer ${n}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const lm=1*1024*1024;function um(n,e,t=!1){if(n==null||typeof n!="object"||Object.getPrototypeOf(n)!==Object.prototype||!nh(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(t){const s=JSON.stringify(n);s.length>lm&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${lm}.`)}}function nh(n){if(n===null)return!0;if(typeof n=="object")if(Object.getPrototypeOf(n)===Object.prototype){const e=Object.keys(n);for(const t of e)if(typeof t!="string"||!nh(n[t]))return!1;return!0}else if(Array.isArray(n)){for(const e of n)if(!nh(e))return!1;return!0}else return!1;else{const e=typeof n;return e==="string"||e==="number"||e==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function UD(n,e,t,s=console.log){const o=HD(n),r=["Layer (type)","Input Shape","Output shape","Param #"];o?(e=e||90,t=t||[.32,.61,.89,1]):(e=e||115,t=t||[.24,.48,.7,.8,1]),t[t.length-1]<=1&&(t=t.map(u=>Math.floor(e*u)));let i;if(!o){r.push("Receives inputs"),i=[];for(const u in n.nodesByDepth)i.push(...n.nodesByDepth[u])}s("_".repeat(e)),gc(r,t,s),s("=".repeat(e));const a=n.layers;for(let u=0;u<a.length;++u)o?qD(a[u],t,s):jD(a[u],t,i,s),s((u===a.length-1?"=":"_").repeat(e));n.checkTrainableWeightsConsistency();const c=GD(n),l=lc(n.nonTrainableWeights);s(`Total params: ${c+l}`),s(`Trainable params: ${c}`),s(`Non-trainable params: ${l}`),s("_".repeat(e))}function GD(n){let e;return n.collectedTrainableWeights!=null?e=lc(n.collectedTrainableWeights):e=lc(n.trainableWeights),e}function HD(n){let e=!0;const t=[],s=[];for(const o in n.nodesByDepth)t.push(n.nodesByDepth[o]);for(const o of t){if(o.length>1||o.length===1&&o[0].inboundLayers.length>1){e=!1;break}s.push(...o)}if(e)for(const o of n.layers){let r=!1;for(const i of o.inboundNodes)if(s.indexOf(i)!==-1)if(r){e=!1;break}else r=!0;if(!e)break}return e}function gc(n,e,t=console.log){let s="";for(let o=0;o<n.length;++o)o>0&&(s=s.slice(0,s.length-1)+" "),s+=n[o],s=s.slice(0,e[o]),s+=" ".repeat(e[o]-s.length);t(s)}function qD(n,e,t){let s,o;try{o=n.inboundNodes.map(c=>JSON.stringify(c.inputShapes)).join(",")}catch{o="multiple"}try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}const r=n.name,i=n.getClassName(),a=[`${r} (${i})`,o,s,n.countParams().toString()];gc(a,e,t)}function jD(n,e,t,s){let o,r;try{r=n.inboundNodes.map(h=>JSON.stringify(h.inputShapes)).join(",")}catch{r="multiple"}try{o=JSON.stringify(n.outputShape)}catch{o="multiple"}const i=[];for(const h of n.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(h)===-1))for(let d=0;d<h.inboundLayers.length;++d){const p=h.inboundLayers[d].name,f=h.nodeIndices[d],m=h.tensorIndices[d];i.push(`${p}[${f}][${m}]`)}const a=n.name,c=n.getClassName(),l=i.length===0?"":i[0],u=[`${a} (${c})`,r,o,n.countParams().toString(),l];gc(u,e,s);for(let h=1;h<i.length;++h)gc(["","","","",i[h]],e,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function hb(n,e,t){return(n==="inboundNodes"||n==="outputLayers"||n==="inputLayers")&&e===0&&typeof t=="string"}function xc(n,e){if(n===null)return null;if(typeof n=="string")return Ys(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let o=0;o<s;++o){const r=n[o];hb(e,o,r)?t.push(r):t.push(xc(r,e))}return t}else{const t={};for(const s of Object.keys(n)){const o=n[s];if(s==="name"&&typeof o=="string")t[s]=o;else{const r=Ys(s);t[r]=xc(o,r)}}return t}}function sh(n,e){if(n==null)return null;if(typeof n=="string")return Jn(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let o=0;o<s;++o){const r=n[o];hb(e,o,r)?t.push(r):t.push(sh(r,e))}return t}else{const t={};for(const s of Object.keys(n)){const o=n[s],r=Jn(s);(s==="name"||s==="className")&&typeof o=="string"?t[r]=o:t[r]=sh(o,s)}return t}}/** @license See the LICENSE file. */const db="4.22.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const KD=n=>{const e=Object.keys(n);if(e.length===0)return!1;const t=e[0].split("/");return!isNaN(parseInt(t[t.length-1],10))};class bn extends Ce{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){const y=this.getClassName().toLowerCase();this.name=Bl(y)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Is(this.inputs).length!==this.inputs.length)throw new D(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(y=>y.name)}`);Is(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(y=>y.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const y of this.outputs){const w=y.sourceLayer,b=y.nodeIndex,v=y.tensorIndex;this.outputLayers.push(w),this.outputLayersNodeIndices.push(b),this.outputLayersTensorIndices.push(v)}for(const y of this.inputs){const w=y.sourceLayer,b=y.nodeIndex,v=y.tensorIndex;On(b===0,"input layer has >1 nodes"),On(v===0,"input layer has >1 tensors"),this.inputLayers.push(w),this.inputLayersNodeIndices.push(b),this.inputLayersTensorIndices.push(v)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){const w=this.inputLayers[y];if(!(w instanceof ma))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${y} (0-based) originates from layer type ${w.getClassName()}.`);this.inputNames.push(w.name),this.feedInputShapes.push(w.batchInputShape),this.feedInputNames.push(w.name)}for(const y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map(y=>y.shape),this.internalOutputShapes=this.outputs.map(y=>y.shape);const t={},s={},o={},r={},i={},a=[],c=(y,w,b,v,I,T)=>{(v==null||I==null||T==null)&&(v=y.sourceLayer,I=y.nodeIndex,T=y.tensorIndex);const N=v.inboundNodes[I];if(b.indexOf(N)!==-1)throw new un(`The tensor ${y.name} at layer "${v.name}" is part of a cycle.`);if(w.indexOf(N)!==-1)return;this.containerNodes.add(bn.nodeKey(v,I)),v.id in i||(i[v.id]=Object.keys(i).length),b.indexOf(N)===-1&&b.push(N);const $=N.inboundLayers.length;for(let S=0;S<$;S++){const C=N.inputTensors[S],R=N.inboundLayers[S],F=N.nodeIndices[S],z=N.tensorIndices[S];c(C,w,b,R,F,z)}for(w.push(N);b.indexOf(N)>=0;)b.splice(b.indexOf(N),1);a.push(N)},l=[],u=[];for(const y of this.outputs)c(y,l,u);const h=a.slice().reverse();for(const y of h){s[y.id]=y,y.id in t||(t[y.id]=0);let w=t[y.id];const b=o[y.outboundLayer.id]==null?0:o[y.outboundLayer.id];w=Math.max(w,b),o[y.outboundLayer.id]=w,r[y.outboundLayer.id]=y.outboundLayer,t[y.id]=w;for(let v=0;v<y.inboundLayers.length;v++){const I=y.inboundLayers[v],T=y.nodeIndices[v],N=I.inboundNodes[T],$=t[N.id]==null?0:t[N.id];t[N.id]=Math.max(w+1,$),s[N.id]=N}}const d={};for(const y in t){const w=t[y];w in d||(d[w]=[]),d[w].push(s[y])}const p={};for(const y in o){const w=o[y];w in p||(p[w]=[]),p[w].push(r[y])}let f=Object.keys(p).map(y=>parseInt(y,10)).sort(Na);this.layers=[];for(const y of f){const w=p[y];w.sort((b,v)=>{const I=i[b.id],T=i[v.id];return I<T?-1:I>T?1:0});for(const b of w)b instanceof bn&&this.internalContainerRefs.push(b),this.layers.push(b)}this.layersByDepth=p,f=Object.keys(d).map(y=>parseInt(y,10)).sort(Na);const m=this.inputs.slice(),g=[];for(const y of f)for(const w of d[y]){const b=w.outboundLayer;if(b!=null){for(const v of w.inputTensors)if(m.indexOf(v)===-1)throw new un(`Graph disconnected: cannot obtain value for tensor ${v} at layer "${b.name}". The following previous layers were accessed without issue: ${g}`);for(const v of w.outputTensors)m.push(v);g.push(b.name)}}this.nodesByDepth=d;const x=this.layers.map(y=>y.name);for(const y of x){const w=x.filter(b=>b===y).length;if(w!==1)throw new un(`The name "${y}" is used ${w} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(x))}this.outboundNodes=[],this.inboundNodes=[],new Wl({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(y=>null),outputMasks:this.outputs.map(y=>null),inputShapes:this.inputs.map(y=>y.shape),outputShapes:this.outputs.map(y=>y.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(s=>s.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new D("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.layers)t.push(...s.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const s={};let o=0;const r=KD(e);r&&this.parseWeights(e);for(const a of this.layers)for(const[c,l]of a.weights.entries()){const u=r?`${l.name.split("/").slice(0,-1).join("/")+"/"}${c}`:l.originalName;if(s[u]!=null)throw new D(`Duplicate weight name: ${u}`);s[u]=l,o++}const i=[];for(const a in e){let c=a;if(s[a]==null){const l=a.split("/");c=l.slice(0,-2).concat([l[l.length-1]]).join("/")}if(s[c]!=null)i.push([s[c],e[a]]);else if(t)throw new D(`Provided weight data has no target variable: ${a}`);delete s[c]}if(t){const a=[];for(const c in s)a.push(c);if(a.length>0)throw new D(`${a.length} of ${o} weights are not set: ${a}`)}Ep(i)}parseWeights(e){for(const t in Object.keys(e)){const s=t.split("/"),o=["vars","layer_checkpoint_dependencies"],r=s.map(i=>i.startsWith("_")?i.slice(1):i).filter(i=>!o.includes(i)).join("/");r!==t&&(e[r]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${db}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const s=sh(this.updatedConfig());return t?JSON.stringify(s):s}call(e,t){return V(()=>{e=Ae(e);const s=new bs;for(let o=0;o<this.inputs.length;++o)s.add(this.inputs[o],e[o]);return Pr(this.outputs,s,t)})}computeMask(e,t){return V(()=>{e=Ae(e);let s;return t==null?s=go(null,e.length):s=Ae(t),this.runInternalGraph(e,s)[1]})}computeOutputShape(e){const t=cc(e);if(t.length!==this.inputLayers.length)throw new D(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let a=0;a<t.length;a++){const c=this.inputLayers[a],l=t[a],u=c.name+"_0_0";s[u]=l}const o=Object.keys(this.nodesByDepth).map(a=>parseInt(a,10)).sort(Na);if(o.length>1)for(const a of o){const c=this.nodesByDepth[a];for(const l of c){const u=l.outboundLayer;if(this.inputLayers.map(m=>m.id).indexOf(u.id)!==-1)continue;const h=[];for(let m=0;m<l.inboundLayers.length;m++){const g=l.inboundLayers[m],x=l.nodeIndices[m],y=l.tensorIndices[m],w=`${g.name}_${x}_${y}`,b=s[w];h.push(b)}const d=u.computeOutputShape(Pt(h)),p=cc(d),f=u.inboundNodes.indexOf(l);for(let m=0;m<p.length;m++){const g=`${u.name}_${f}_${m}`;s[g]=p[m]}}}const r=[],i=[];for(let a=0;a<this.outputLayers.length;a++){const c=this.outputLayers[a],l=this.outputLayersNodeIndices[a],u=this.outputLayersTensorIndices[a],h=`${c.name}_${l}_${u}`;i.push(h)}for(let a=0;a<i.length;a++){const c=i[a];On(c in s),r.push(s[c])}return Pt(r)}runInternalGraph(e,t){t==null&&(t=go(null,e.length));const s={};for(let c=0;c<this.inputs.length;++c){const l=this.inputs[c],u=e[c],h=t[c];s[l.id]=[u,h]}const o=Object.keys(this.nodesByDepth).map(c=>parseInt(c,10)).sort(Na);for(const c of o){const l=this.nodesByDepth[c];for(const u of l){const h=u.outboundLayer,d=u.inputTensors,p=u.outputTensors,f=new Array;for(const m of d)m.id in s&&f.push(s[m.id]);if(f.length===d.length){let m={},g,x,y,w;if(u.callArgs!=null&&(m=u.callArgs),f.length===1){const[b,v]=f[0];m.mask==null&&(m.mask=v),y=Ae(h.call(b,m)),w=Ae(h.computeMask(b,v)),g=[b],x=[v]}else g=f.map(b=>b[0]),x=f.map(b=>b[1]),m.mask==null&&(m.mask=x),y=Ae(h.call(g,m)),w=Ae(h.computeMask(g,x));if(h.activityRegularizer)throw new xe("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let b=0;b<p.length;++b){const v=p[b],I=y[b],T=w[b];s[v.id]=[I,T]}}}}const r=[],i=[],a=[];for(const c of this.outputs){On(c.id in s,`Could not compute output ${c.name} : ${c.id}`);const[l,u]=s[c.id];a.push(l.shape),r.push(l),i.push(u)}return[r,i,a]}buildNodeConversionMap(e){const t={};let s;for(const o of this.layers){s=o instanceof bn?1:0;for(let r=0;r<o.inboundNodes.length;r++){const i=bn.nodeKey(o,r);this.containerNodes.has(i)&&(t[i]=s,s+=1)}}return t}getLayer(e,t){if(t!=null)return this.findLayer(t);if(e==null)throw new D("Provide either a layer name or layer index");if(typeof e=="number")return this.findLayer(e);for(const s of this.layers)if(s.name===e)return s;throw new D(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new D(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return V(()=>{const e=[];for(const t of this.layers)for(let s=0;s<t.inboundNodes.length;++s){const o=bn.nodeKey(t,s);this.containerNodes.has(o)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),s=[];for(const i of this.layers){const a=i.getClassName(),c=i.getConfig(),l=[];for(let h=0;h<i.inboundNodes.length;h++){const d=i.inboundNodes[h],p=bn.nodeKey(i,h);let f={};if(this.containerNodes.has(p)){if(d.callArgs)try{JSON.stringify(d.callArgs),f=d.callArgs}catch{console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),f={}}if(d.inboundLayers.length>0){const m=[];for(let g=0;g<d.inboundLayers.length;g++){const x=d.inboundLayers[g],y=d.nodeIndices[g],w=d.tensorIndices[g],b=bn.nodeKey(x,y);let v=t[b];v==null&&(v=0),m.push([x.name,v,w,f])}l.push(m)}}}const u={};u.name=i.name,u.className=a,u.config=c,u.inboundNodes=l,s.push(u)}e.layers=s;const o=[];for(let i=0;i<this.inputLayers.length;i++){const a=this.inputLayers[i],c=this.inputLayersNodeIndices[i],l=bn.nodeKey(a,c);if(!this.containerNodes.has(l))continue;let u=t[l];u==null&&(u=0);const h=this.inputLayersTensorIndices[i];o.push([a.name,u,h])}e.inputLayers=o;const r=[];for(let i=0;i<this.outputLayers.length;i++){const a=this.outputLayers[i],c=this.outputLayersNodeIndices[i],l=bn.nodeKey(a,c);if(!this.containerNodes.has(l))continue;let u=t[l];u==null&&(u=0);const h=this.outputLayersTensorIndices[i];r.push([a.name,u,h])}return e.outputLayers=r,e}static fromConfig(e,t,s={},o=!1){const r={},i={};function a(g,x){g.name in i?i[g.name].push(x):i[g.name]=[x]}function c(g,x){const y=[];let w;for(const b of x){const v=b[0],I=b[1],T=b[2];if(w=b[3]==null?{}:b[3],!(v in r)){a(g,x);return}const N=r[v];if(N.inboundNodes.length<=I){a(g,x);return}const $=N.inboundNodes[I];y.push($.outputTensors[T])}y.length>0&&g.apply(Pt(y),w)}function l(g){const x=g.name,y=Wn(g,t.customObjects!=null?t.customObjects:{});y.setFastWeightInitDuringBuild(o),r[x]=y,g.inboundNodes.forEach(b=>{if(!(b instanceof Array))throw new D(`Corrupted configuration, expected array for nodeData: ${b}`);a(y,b)})}const u=t.name,h=t.layers;for(const g of h)l(g);for(;!AR(i);)for(const g of h){const x=r[g.name];if(x.name in i){const y=i[x.name];delete i[x.name];for(const w of y)c(x,w)}}const d=[],p=[],f=t.inputLayers;for(const g of f){const x=g[0],y=g[1],w=g[2];On(x in r);const v=r[x].inboundNodes[y].outputTensors;d.push(v[w])}const m=t.outputLayers;for(const g of m){const x=g[0],y=g[1],w=g[2];On(x in r);const v=r[x].inboundNodes[y].outputTensors;p.push(v[w])}return new e({inputs:d,outputs:p,name:u})}get stateful(){if(this._stateful)throw new D("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){V(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function XD(n,e,t){const s=e.length;if(n==null||Array.isArray(n)&&n.length===0)return e.map(o=>null);if(s===1)return Array.isArray(n)&&n.length===1?n:typeof n=="object"&&e[0]in n?[n[e[0]]]:[n];if(Array.isArray(n)){if(n.length!==s)throw new Error(`Provided ${t} is an array of ${n.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return n}else if(typeof n=="object"&&Object.keys(n).length>0&&typeof n[Object.keys(n)[0]]=="object"){const o=[];return e.forEach(r=>{r in n?o.push(n[r]):o.push(null)}),o}else throw new Error(`The model has multiple (${s}) outputs, so ${t} must be either an array with ${s} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(n)}`)}function pb(n,e){return XD(n,e,"classWeight")}async function fb(n,e,t,s){if(t!=null){const o=V(()=>{if(n.shape.length===1)return eo(n);if(n.shape.length===2){if(n.shape[1]>1)return qr(n,1);if(n.shape[1]===1)return _(n,[n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await o.data());be(o);const i=[];return r.forEach(a=>{if(t[a]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${a} exists in the data but not in classWeight`);i.push(t[a])}),qt(i,"float32")}else return null}function YD(n,e){return A(n,e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const JD=32;function mb(n,e){let t,s;const o=e;t=o.xs,s=o.ys,k(t!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);const r=hm("input",n.inputNames,t),i=hm("output",n.outputNames,s),a=r[0].shape[0];k(r.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${r.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),k(i.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let c=0;c<r.length;c++)k(r[c].shape[0]===a,()=>`Batch size mismatch: input ${n.inputNames[c]} has ${r[c].shape[0]}; expected  ${a} based on input ${n.inputNames[0]}.`);for(let c=0;c<i.length;c++)k(i[c].shape[0]===a,()=>`Batch size mismatch: output ${n.outputNames[c]} has ${i[c].shape[0]}; expected  ${a} based on input ${n.inputNames[0]}.`);return{xs:r,ys:i}}function hm(n,e,t){if(t instanceof it)return[t];if(Array.isArray(t))return k(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${n} keys ${e}.`),t;{const s=[];for(const o of e){if(t[o]==null)throw new D(`The feature data generated by the dataset lacks the required ${n} key '${o}'.`);s.push(t[o])}return s}}function ZD(n){if(n.length===3)throw new xe("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}async function QD(n,e,t){const s=t.batchesPerEpoch!=null;if(k(n.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),k(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),k(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),k(!s||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),k(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const o=t.validationData!=null;let r,i;if(o)if(dm(t.validationData))k(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{const g=ZD(t.validationData);r=g.xs,i=g.ys}const a=n.makeTrainFunction(),c=n.getDedupedMetricsNames();let l;o?l=c.slice().concat(c.map(g=>"val_"+g)):l=c.slice();const u=ob(t.callbacks,t.yieldEvery),h=t.verbose==null?1:t.verbose,{callbackList:d,history:p}=rb(u,h,t.epochs,null,null,eA(e,t),null,o,l);d.setModel(n),n.history=p,await d.onTrainBegin(),n.stopTraining_=!1;let f=t.initialEpoch==null?0:t.initialEpoch,m=await e.iterator();for(;f<t.epochs;){const g={};await d.onEpochBegin(f);let x=0,y=0;for(s||(m=await e.iterator());!s||x<t.batchesPerEpoch;){const w=await m.next();if(s&&w.done){console.warn(`You provided \`batchesPerEpoch\` as ${t.batchesPerEpoch}, but your dataset iterator ran out of data after ${x} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${t.batchesPerEpoch*t.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(w.value!=null){const{xs:b,ys:v}=mb(n,w.value),I={};I.batch=y,I.size=b[0].shape[0],await d.onBatchBegin(y,I);const T=[];if(t.classWeight!=null){const S=pb(t.classWeight,n.outputNames);for(let C=0;C<S.length;++C)T.push(await fb(v[C],null,S[C]))}const N=b.concat(v).concat(T),$=a(N);be(N);for(let S=0;S<c.length;++S){const C=c[S],R=$[S];I[C]=R,Pn(R)}await d.onBatchEnd(y,I),sb(I),y++,x++}if(s?x>=t.batchesPerEpoch:w.done){if(o){let b;dm(t.validationData)?b=Ae(await n.evaluateDataset(t.validationData,{batches:t.validationBatches})):b=Ae(n.evaluate(r,i,{batchSize:t.validationBatchSize==null?JD:t.validationBatchSize,verbose:0}));for(let v=0;v<n.metricsNames.length;++v)g[`val_${n.metricsNames[v]}`]=b[v]}break}if(n.stopTraining_)break}if(await d.onEpochEnd(f,g),f++,n.stopTraining_)break}return await d.onTrainEnd(),await n.history.syncData(),n.history}finally{n.isTraining=!1}}function eA(n,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(n.size)&&(t=n.size),t}function dm(n){return typeof n.iterator=="function"}function tA(n){return typeof n.next=="function"}async function nA(n,e,t){t=t||{};const s=t.batches!=null,o=n.testFunction;let r=[];if(t.verbose>0)throw new xe("Verbose mode is not implemented yet.");k(!s||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);const i=tA(e)?e:await e.iterator();let a=0,c=0;for(;!s||c<t.batches;){const l=await i.next();if(r=V(()=>{if(l.value){const{xs:u,ys:h}=mb(n,l.value),d=u.concat(h),p=V(()=>o(d));if(be(d),c===0)for(let m=0;m<p.length;++m)r.push(Ee(0));const f=d[0].shape[0];for(let m=0;m<p.length;++m){const g=p[m],x=r[m];r[m]=V(()=>Z(r[m],A(f,g))),c>0&&be(x)}be(p),a+=f,++c}return r}),l.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${t.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let l=0;l<r.length;++l){const u=r[l];r[l]=ue(r[l],a),be(u)}return Pt(r)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function yu(n){k(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function Rr(n,e,t){return n==null?[null]:Array.isArray(n)?n.map(s=>so(s,e,t-e)):so(n,e,t-e)}function oh(n,e){return V(()=>n==null?null:Array.isArray(n)?n.map(t=>oh(t,e)):Uy(n,e.dtype==="int32"?e:se(e,"int32")))}function bu(n,e){const t=[];let s=0,o=null;for(;s<n;)o=s+e,o>=n&&(o=n),t.push([s,o]),s=o;return t}function gb(n){const e=[];n instanceof it&&(n=[n]);for(let t=0;t<n.length;++t){const s=n[t];if(s.rank===1)e.push(da(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(s)}}return e}function yn(n,e){if(n==null)return;const t=[];if(e instanceof it)t.push(e.id);else if(Array.isArray(e))e.forEach(o=>t.push(o.id));else if(e!=null)for(const o in e){const r=e[o];t.push(r.id)}const s=[];if(n instanceof it)t.indexOf(n.id)===-1&&s.push(n);else if(Array.isArray(n))n.forEach(o=>{t.indexOf(o.id)===-1&&s.push(o)});else if(n!=null)for(const o in n){const r=n[o];t.indexOf(r.id)===-1&&s.push(r)}s.forEach(o=>{o.isDisposed||o.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function sA(n){return n instanceof it}function rh(n){return Array.isArray(n)}function pm(n){return!sA(n)&&!rh(n)}function fm(n,e,t,s=!0,o=""){if(e==null||e.length===0){if(n!=null){let i=!1;if(rh(n)&&n.length>0)i=!0;else if(pm(n)){for(const a in n)if(n.hasOwnProperty(a)){i=!0;break}}else i=!0;if(i)throw new D(`Error when checking model ${o} expected no data, but got ${n}`)}return[]}if(n==null)return e.map(i=>null);let r;if(pm(n)){n=n,r=[];for(const i of e){if(n[i]==null)throw new D(`No data provided for "${i}". Need data for each key in: ${e}`);r.push(n[i])}}else if(rh(n)){if(n=n,n.length!==e.length)throw new D(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);r=n}else{if(n=n,e.length>1)throw new D(`The model ${o} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);r=[n]}if(r=gb(r),t!=null)for(let i=0;i<e.length;++i){if(t[i]==null)continue;const a=r[i];if(a.shape.length!==t[i].length)throw new D(`Error when checking ${o}: expected ${e[i]} to have ${t[i].length} dimension(s). but got array with shape ${a.shape}`);for(let c=0;c<t[i].length;++c){if(c===0&&!s)continue;const l=a.shape[c],u=t[i][c];if(u!=null&&u>=0&&l!==u)throw new D(`${o} expected a batch of elements where each example has shape [${t[i].slice(1,t[i].length)}] (i.e.,tensor shape [*,${t[i].slice(1,t[i].length)}]) but the ${o} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return r}function oA(n,e,t){const s=Is(n.map(r=>r.shape[0]));s.sort();const o=Is(e.map(r=>r.shape[0]));if(o.sort(),s.length>1)throw new D(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(r=>r.shape))}`);if(o.length>1)throw new D(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(r=>r.shape))}`);if(s.length>0&&o.length>0&&!Re(s,o))throw new D(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${o[0]} target sample(s).`)}function rA(n,e,t){const s=[Ul,Gl,Zr];for(let o=0;o<n.length;++o){const r=n[o],i=e[o],a=t[o];if(i!=null){if(i===Zr&&r.shape[r.shape.length-1]===1)throw new D(`You are passing a target array of shape ${r.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(i)!==-1){const c=r.shape.slice(1),l=a.slice(1);for(let u=0;u<c.length;++u){const h=c[u],d=l[u];if(d!=null&&h!==d)throw new D(`A target Tensor with shape ${r.shape} was passed for an output of shape ${a}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function mm(n,e,t,s=!0,o=""){let r;if(Array.isArray(n)){if(n.length!==e.length)throw new D(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${n.length} Tensors(s).`);r=n}else{if(e.length>1)throw new D(`The model expects ${e.length} ${o} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);r=[n]}if(t!=null)for(let i=0;i<e.length;++i){if(t[i]==null)continue;const a=r[i];if(a.shape.length!==t[i].length)throw new D(`Error when checking ${o}: expected ${e[i]} to have ${t[i].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let c=0;c<t[i].length;++c){if(c===0&&!s)continue;const l=a.shape[c],u=t[i][c];if(u!=null&&u!==l)throw new D(`Error when checking ${o}: expected ${e[i]} to have shape ${JSON.stringify(t[i])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}function iA(n,e){if(n==null||Array.isArray(n)&&n.length===0)return e.map(s=>[]);let t;if(typeof n=="string"||typeof n=="function")t=[n];else if(Array.isArray(n)||typeof n=="object")t=n;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);if(Array.isArray(t))return e.map(s=>t);{const s=[];for(const o of e){let r=t.hasOwnProperty(o)?t[o]:[];Array.isArray(r)||(r=[r]),s.push(r)}return s}}const aA="layers-model";class Ho extends bn{constructor(e){super(e),this.isTraining=!1}summary(e,t,s=console.log){if(!this.built)throw new D("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");UD(this,e,t,s)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=WD(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof zs))throw new D("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(const i in e.loss)if(this.outputNames.indexOf(i)===-1)throw new D(`Unknown entry in loss dictionary: "${i}". Only expected the following keys: ${this.outputNames}`);for(const i of this.outputNames)e.loss[i]==null&&console.warn(`Output "${i}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${i} during training`),t.push(xu(e.loss[i]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new D(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(a=>xu(a))}else{const i=xu(e.loss);this.outputs.forEach(a=>{t.push(i)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){const a=this.internalOutputShapes[i],c=this.outputNames[i];this.feedOutputNames.push(c),this.feedOutputShapes.push(a),this.feedLossFns.push(this.lossFunctions[i])}const s=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],no("loss",()=>{for(let i=0;i<this.outputs.length;++i){if(s.indexOf(i)!==-1)continue;const a=this.lossFunctions[i];this.outputs.length>1&&(this.metricsTensors.push([a,i]),this.metricsNames.push(this.outputNames[i]+"_loss"))}});const o=iA(e.metrics,this.outputNames),r=(i,a,c)=>{this.outputNames.length>1&&(a=this.outputNames[i]+"_"+a),this.metricsNames.push(a),this.metricsTensors.push([c,i])};no("metric",()=>{for(let i=0;i<this.outputs.length;++i){if(s.indexOf(i)!==-1)continue;const a=o[i];(l=>{let h,d,p;for(const f of l){if(typeof f=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(f)!==-1){const g=this.internalOutputShapes[i];g[g.length-1]===1||this.lossFunctions[i]===Gl?["accuracy","acc"].indexOf(f)!==-1?d=ab:["crossentropy","ce"].indexOf(f)!==-1&&(d=AD):this.lossFunctions[i]===pc?["accuracy","acc"].indexOf(f)!==-1?d=FD:["crossentropy","ce"].indexOf(f)!==-1&&(d=ub):["accuracy","acc"].indexOf(f)!==-1?d=cb:["crossentropy","ce"].indexOf(f)!==-1&&(d=lb);let x;["accuracy","acc"].indexOf(f)!==-1?x="acc":["crossentropy","ce"].indexOf(f)!==-1&&(x="ce"),p=d,h=""+x}else p=VD(f),h=""+Da(f);let m;no(h,()=>{m=p}),r(i,h,m)}})(a)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,s={}){const o=s.batchSize==null?32:s.batchSize;yu(o);const i=this.standardizeUserDataXY(e,t,!0,o);try{const a=i[0].concat(i[1]);this.makeTestFunction();const c=this.testFunction,l=this.testLoop(c,a,o,s.verbose,s.steps);return Pt(l)}finally{yn(i[0],e),yn(i[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),nA(this,e,t)}checkNumSamples(e,t,s,o="steps"){let r;if(s!=null){if(r=null,t!=null)throw new D(`If ${o} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?r=e[0].shape[0]:r=e.shape[0];else throw new D(`Either the input data should have a defined shape, or ${o} shoud be specified.`);return r}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new D("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(t),o=s?t:[t],r=this.retrieveSymbolicTensors(o),i=new bs;if(e instanceof it&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new D(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let c=0;c<this.inputs.length;++c)i.add(this.inputs[c],e[c])}else for(const c of this.inputs){const l=e[c.name];if(l==null)throw new D(`No value is provided for the model's input ${c.name}`);i.add(c,l)}const a=Pr(r,i);return s?a:a[0]}retrieveSymbolicTensors(e){const t=go(null,e.length);let s=e.length;for(const o of this.layers){const r=Array.isArray(o.output)?o.output:[o.output],i=r.map(a=>a.name);for(let a=0;a<e.length;++a){const c=i.indexOf(e[a]);if(c!==-1&&(t[a]=r[c],s--),s===0)break}if(s===0)break}if(s>0){const o=[];throw t.forEach((r,i)=>{r==null&&o.push(e[i])}),new D(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(o)}`)}return t}predictLoop(e,t=32,s=!1){return V(()=>{const o=this.checkNumSamples(e);if(s)throw new xe("Verbose predictLoop() is not implemented yet.");const r=bu(o,t),i=this.outputs.map(a=>[]);for(let a=0;a<r.length;++a)V(()=>{const l=r[a][0],u=r[a][1],h=Rr(e,l,u),d=[];if(Array.isArray(h))for(let f=0;f<h.length;++f)d.push({key:this.inputs[f],value:h[f]});else d.push({key:this.inputs[0],value:h});const p=new bs(d);return Pr(this.outputs,p)}).forEach((l,u)=>i[u].push(l));return Pt(i.map(a=>zt(a,0)))})}predict(e,t={}){const s=gb(e);mm(s,this.inputNames,this.feedInputShapes,!1);try{const o=t.batchSize==null?32:t.batchSize;return yu(o),this.predictLoop(s,o)}finally{yn(s,e)}}predictOnBatch(e){mm(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,s=!0,o){if(this.optimizer_==null)throw new un("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let i=0;i<this.feedOutputShapes.length;++i){const a=this.feedOutputShapes[i];this.feedLossFns[i]===pc?r.push(a.slice(0,a.length-1).concat([1])):r.push(a)}if(e=fm(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=fm(t,this.feedOutputNames,r,!1,"target"),oA(e,t),rA(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&o!=null&&o>0&&e[0].shape[0]%o!==0)throw new D(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${o}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,s,o,r=!0,i){const[a,c]=this.standardizeUserDataXY(e,t,r,i);if(s!=null)throw new Error("sample weight is not supported yet.");let l=null;if(o!=null){const u=pb(o,this.outputNames);l=[];for(let h=0;h<u.length;++h)l.push(await fb(c[h],null,u[h]))}return[a,c,l]}testLoop(e,t,s,o=0,r){return V(()=>{const i=this.checkNumSamples(t,s,r,"steps"),a=[];if(o>0)throw new xe("Verbose mode is not implemented yet.");if(r!=null)throw new xe("steps mode in testLoop() is not implemented yet");{const c=bu(i,s),l=qt(Tn(0,i));for(let u=0;u<c.length;++u){const h=c[u][0],d=c[u][1],p=so(l,h,d-h),f=oh(t,p),m=e(f);if(u===0)for(let g=0;g<m.length;++g)a.push(Ee(0));for(let g=0;g<m.length;++g){const x=m[g];a[g]=Z(a[g],A(d-h,x))}}for(let u=0;u<a.length;++u)a[u]=ue(a[u],i)}return a})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let s=0;s<e.length;++s){const o=e[s];let r=o;if(Qf(e,o)>1){const i=Qf(e.slice(0,s),o);r+=`_${i}`}t.push(r)}return t}makeTrainFunction(){return e=>{const t=[],s=e.slice(0,this.inputs.length),o=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),i=[],a=()=>{const h=[];for(let m=0;m<this.inputs.length;++m)h.push({key:this.inputs[m],value:s[m]});const d=new bs(h),p=Pr(this.outputs,d,{training:!0});let f;for(let m=0;m<this.lossFunctions.length;++m){const g=this.lossFunctions[m];let x=g(o[m],p[m]);r[m]!=null&&(x=YD(x,r[m]));const y=ot(x);t.push(y),m===0?f=x:f=Z(f,x)}for(let m=0;m<this.metricsTensors.length;++m){let g;if(this.outputs.length>1&&m<this.outputs.length)g=t[m];else{const x=this.metricsTensors[m][0],y=this.metricsTensors[m][1];g=ot(x(o[y],p[y]))}Pn(g),i.push(g)}return f=ot(f),this.calculateLosses().forEach(m=>{f=Z(f,m)}),f},c=this.collectedTrainableWeights.map(h=>h.read());return[this.optimizer_.minimize(a,!0,c)].concat(i)}}makeTestFunction(){this.testFunction=e=>V(()=>{const t=[];let s;const o=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let l=0;l<this.inputs.length;++l)i.push({key:this.inputs[l],value:o[l]});const a=new bs(i),c=Pr(this.outputs,a);for(let l=0;l<this.lossFunctions.length;++l){const u=this.lossFunctions[l],h=ot(u(r[l],c[l]));l===0?s=h:s=Z(s,h),t.push(s)}for(let l=0;l<this.metricsTensors.length;++l){const u=this.metricsTensors[l][0],h=this.metricsTensors[l][1],d=ot(u(r[h],c[h]));t.push(d)}return t})}async fit(e,t,s={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let o,r,i,a,c,l,u,h,d;try{const p=s.batchSize==null?32:s.batchSize;yu(p);const m=await this.standardizeUserData(e,t,s.sampleWeight,s.classWeight,!1,p);o=m[0],r=m[1],d=m[2];let g=!1,x;if(s.validationData!=null&&s.validationData.length>0){if(g=!0,s.validationData.length===2)c=s.validationData[0],l=s.validationData[1];else throw s.validationData.length===3?new xe("validationData including sample weights is not supported yet."):new D(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const S=await this.standardizeUserData(c,l,null,null,!0,p);u=S[0],h=S[1],x=u.concat(h)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){g=!0;const $=Math.floor(o[0].shape[0]*(1-s.validationSplit)),S=o[0].shape[0];u=Rr(o,$,S),i=o,o=Rr(o,0,$),h=Rr(r,$,S),a=r,r=Rr(r,0,$),x=u.concat(h)}else s.validationSteps!=null&&(g=!0);const y=o.concat(r).concat(d);this.checkTrainableWeightsConsistency();const w=this.makeTrainFunction(),b=this.getDedupedMetricsNames();let v,I;g?(this.makeTestFunction(),v=this.testFunction,I=b.slice().concat(b.map($=>"val_"+$))):(v=null,x=[],I=b.slice());const T=ob(s.callbacks,s.yieldEvery);return await this.fitLoop(w,y,b,p,s.epochs,s.verbose,T,v,x,s.shuffle,I,s.initialEpoch,null,null)}finally{this.isTraining=!1,yn(o,e),yn(r,t),yn(i,e),yn(a,t),yn(u,c),yn(h,l),d!=null&&be(d)}}async fitLoop(e,t,s,o,r,i,a,c,l,u,h,d,p,f){o==null&&(o=32),r==null&&(r=1),u==null&&(u=!0),d==null&&(d=0);let m=!1;if(c!=null&&l!=null&&(m=!0),f!=null&&(m=!0,p==null))throw new D("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=this.checkNumSamples(t,o,p,"steps_per_epoch");let x;g!=null&&(x=Tn(0,g)),i==null&&(i=1);const{callbackList:y,history:w}=rb(a,i,r,d,g,p,o,m,h);y.setModel(this),this.history=w,await y.onTrainBegin(),this.stopTraining_=!1;for(let b=d;b<r;++b){await y.onEpochBegin(b);const v={};if(p!=null)throw new xe("stepsPerEpoch mode is not implemented yet.");{if(u==="batch")throw new xe("batch shuffling is not implemneted yet");u&&bC(x);const I=qt(x),T=bu(g,o);for(let N=0;N<T.length;++N){const $={};if(await y.onBatchBegin(N,$),V(()=>{const S=T[N][0],C=T[N][1],R=so(I,S,C-S);$.batch=N,$.size=C-S;const F=oh(t,R),z=e(F);for(let M=0;M<s.length;++M){const B=s[M],H=z[M];$[B]=H,Pn(H)}if(N===T.length-1&&m){const M=this.testLoop(c,l,o);for(let B=0;B<s.length;++B){const H=s[B],P=M[B];Pn(P),v["val_"+H]=P}}}),await y.onBatchEnd(N,$),sb($),this.stopTraining_)break}I.dispose()}if(await y.onEpochEnd(b,v),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return QD(this,e,t)}async trainOnBatch(e,t){const s=await this.standardizeUserData(e,t),o=s[0],r=s[1],a=this.makeTrainFunction()(o.concat(r)),c=[];for(const l of a){const u=await l.data();c.push(u[0])}return be(a),yn(s[0],e),yn(s[1],t),Pt(c)}getNamedWeights(e){const t=[],s=e!=null&&e.trainableOnly,o=s?this.trainableWeights:this.weights,r=this.getWeights(s);for(let i=0;i<o.length;++i)s&&!o[i].trainable||t.push({name:o[i].originalName,tensor:r[i]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const t=Sf().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Sf().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=Jn(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>Jn(t))}else{const t=Object.keys(this.loss);e={};const s=this.loss;for(const o of t)if(typeof s[o]=="string")e[o]=Jn(s[o]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Jn(Da(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>Jn(Da(e)));{const e={};for(const t in this.metrics)e[t]=Jn(Da(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const t=xc(e.optimizer_config),s=Wn(t);let o;if(typeof e.loss=="string")o=Ys(e.loss);else if(Array.isArray(e.loss))o=e.loss.map(i=>Ys(i));else if(e.loss!=null){o={};for(const i in e.loss)o[i]=Ys(e.loss[i])}let r;if(Array.isArray(e.metrics))r=e.metrics.map(i=>Ys(i));else if(e.metrics!=null){r={};for(const i in e.metrics)r[i]=Ys(e.metrics[i])}this.compile({loss:o,metrics:r,optimizer:s})}async save(e,t){if(typeof e=="string"){const l=kI(e);if(l.length===0)throw new D(`Cannot find any save handlers for URL '${e}'`);if(l.length>1)throw new D(`Found more than one (${l.length}) save handlers for URL '${e}'`);e=l[0]}if(e.save==null)throw new D("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await kf(this.getNamedWeights(t)),a={modelTopology:this.toJSON(null,!1),format:aA,generatedBy:`TensorFlow.js tfjs-layers v${db}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){a.trainingConfig=this.getTrainingConfig();const l="optimizer",{data:u,specs:h}=await kf(await this.optimizer.getWeights(),l);s.specs.push(...h),s.data=yI([s.data,u])}return this.userDefinedMetadata!=null&&(um(this.userDefinedMetadata,this.name,!0),a.userDefinedMetadata=this.userDefinedMetadata),a.weightData=s.data,a.weightSpecs=s.specs,e.save(a)}setUserDefinedMetadata(e){um(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Ho.className="Model";J(Ho);class xb extends Ho{}xb.className="Functional";J(xb);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function cA(n,e){if(e==null&&(e={}),typeof n=="string"){const t=TI(n,e);if(t.length===0)t.push(uN(n,e));else if(t.length>1)throw new D(`Found more than one (${t.length}) load handlers for URL '${n}'`);n=t[0]}return lA(n,void 0,e)}async function lA(n,e,t){if(t==null&&(t={}),n.load==null)throw new D("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const s=await n.load();let o=s.modelTopology;o.model_config!=null&&(o=o.model_config);const r=t.strict==null?!0:t.strict,i=s.weightData!=null&&s.weightSpecs!=null&&r,a=Wn(xc(o),e,i),c=s.trainingConfig;if(c!=null&&a.loadTrainingConfig(c),s.userDefinedMetadata!=null&&a.setUserDefinedMetadata(s.userDefinedMetadata),s.weightData!=null){if(s.weightSpecs==null)throw new D("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:l,optimizerWeights:u}=uA(s.weightData,s.weightSpecs);a.loadWeights(l,r),a.optimizer!=null&&u.length>0&&await a.optimizer.setWeights(u),be(l),be(u.map(h=>h.tensor))}return a}function uA(n,e){const t=dI(n,e),s={},o=[];return e.forEach(r=>{r.group==="optimizer"?o.push({name:r.name,tensor:t[r.name]}):s[r.name]=t[r.name]}),{modelWeights:s,optimizerWeights:o}}class tr extends Ho{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:Bl("sequential_"),e.layers!=null)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(s=>s<0))throw new D(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof tr||e instanceof Ho;let s;if(t){if(s=e,s.outputs.length!==1)throw new D("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new D("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new D("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const o=lD({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(o)}if(t)this.outputs=s.outputs,this.inputs=s.inputs;else{if(e.inboundNodes.length!==1)throw new D(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new D("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Zy(this.outputs[0])}this.inboundNodes=[],new Wl({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:go(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(o=>o.shape),outputShapes:this.outputs[0].shape})}else{const o=e.apply(this.outputs[0]);if(Array.isArray(o))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[o],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(Te(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Ho({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,s=console.log){this.built||this.build(),super.summary(e,t,s)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,s={}){if(!this.built)throw new un("The model needs to be compiled before being used.");return this.model.evaluate(e,t,s)}async evaluateDataset(e,t){if(!this.built)throw new un("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,s={}){if(!this.built)throw new un("The model needs to be compiled before being used.");return this.model.fit(e,t,s)}async fitDataset(e,t){if(!this.built)throw new un("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,s={},o=!1){let r,i={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new D("Legacy serialization format not supported yet.");r=t}else k(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),r=t.layers,delete t.layers,i=t;const a=new e(i);if(!(a instanceof tr))throw new xe(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const c of r){const u=Wn(c,void 0,o);o&&u.setFastWeightInitDuringBuild(!0),a.add(u)}return a}set stopTraining(e){if(this.model==null)throw new D("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new D("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const s={};s.className=t.getClassName(),s.config=t.getConfig(),e.push(s)}return{name:this.name,layers:e}}}tr.className="Sequential";J(tr);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function gm(n){return new tr(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Nt=class extends mr{getConfig(){return{}}};class yb extends Nt{apply(e,t=1){return jR(e,t)}}yb.className="elu";J(yb);class bb extends Nt{apply(e){return Ox(e)}}bb.className="selu";J(bb);class wb extends Nt{apply(e){return Co(e)}}wb.className="relu";J(wb);class vb extends Nt{apply(e){return V(()=>Xr(6,Co(e)))}}vb.className="relu6";J(vb);class Cb extends Nt{apply(e){return e}}Cb.className="linear";J(Cb);class Ib extends Nt{apply(e){return dr(e)}}Ib.className="sigmoid";J(Ib);class $b extends Nt{apply(e){return XR(e)}}$b.className="hardSigmoid";J($b);class Sb extends Nt{apply(e){return oa(e)}}Sb.className="softplus";J(Sb);class kb extends Nt{apply(e){return KR(e)}}kb.className="softsign";J(kb);class Tb extends Nt{apply(e){return Rl(e)}}Tb.className="tanh";J(Tb);let Fp=class extends Nt{apply(e,t=-1){return Md(e,t)}};Fp.className="softmax";J(Fp);class Nb extends Nt{apply(e,t=-1){return kx(e,t)}}Nb.className="logSoftmax";J(Nb);class Eb extends Nt{apply(e){return V(()=>V(()=>{const t=Math.sqrt(2),s=A(.5,Z(1,vx(ue(e,t))));return A(e,s)}))}}Eb.className="gelu";J(Eb);class Rb extends Nt{apply(e){return V(()=>A(.5,A(e,Z(1,Rl(A(kt(ue(2,Math.PI)),Z(e,A(.044715,po(e,3)))))))))}}Rb.className="gelu_new";J(Rb);class Db extends Nt{apply(e){return V(()=>A(e,Rl(oa(e))))}}Db.className="mish";J(Db);class Ab extends Nt{apply(e,t=1){return V(()=>A(dr(A(e,t)),e))}}Ab.className="swish";J(Ab);function Ns(n){return n.getClassName()}function wu(n,e={}){return ha(n,ln.getMap().classNameMap,e,"activation")}function Es(n){if(n==null){const e={};return e.className="linear",e.config={},wu(e)}if(typeof n=="string"){const e={};return e.className=n,e.config={},wu(e)}else return n instanceof Nt?n:wu(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function hA(n){if(n!=null&&typeof n!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}class Fb extends mr{}class Ob extends Fb{constructor(e){super(),hA(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return V(()=>{let t=We([1]);return this.hasL1&&(t=Z(t,le(A(this.l1,Rt(e))))),this.hasL2&&(t=Z(t,le(A(this.l2,pa(e))))),_(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Ob.className="L1L2";J(Ob);const xm={l1l2:"L1L2"};function Le(n){return bp(n)}function ym(n,e={}){return ha(n,ln.getMap().classNameMap,e,"regularizer")}function je(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in xm?xm[n]:n,config:{}};return ym(t)}else return n instanceof Fb?n:ym(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Mb extends Ce{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=fe(e);let s=Co(e);return this.maxValue!=null&&(s=tn(s,0,this.maxValue)),s}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Mb.className="ReLU";J(Mb);class _b extends Ce{constructor(e){super(e??{}),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=fe(e);return Sd(s,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}_b.className="LeakyReLU";J(_b);class Lb extends Ce{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=qe(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=je(e.alphaRegularizer),this.alphaConstraint=ht(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new D(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=Te(e);const t=e.slice(1);if(this.sharedAxes!=null)for(const o of this.sharedAxes)t[o-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let o=1;o<e.length;++o)s[o]=e[o];this.inputSpec=[new lt({ndim:e.length,axes:s})],this.built=!0}call(e,t){return e=fe(e),Dd(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Xe(this.alphaInitializer),alphaRegularizer:Le(this.alphaRegularizer),alphaConstraint:ut(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Lb.className="PReLU";J(Lb);let Pb=class extends Ce{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new xe(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=fe(e);return Fl(s)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Pb.className="ELU";J(Pb);class zb extends Ce{constructor(e){super(e??{}),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){const s=fe(e);return A(s,se(nn(s,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}zb.className="ThresholdedReLU";J(zb);class Bb extends Ce{constructor(e){super(e??{}),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new Fp().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){return V(()=>{let s=fe(e);const o=t.mask;if(o!=null){const r=A(pe(Ps(s.shape),se(o,s.dtype)),Ee(-1e9));s=Z(s,r)}return this.axis instanceof Array?this.axis.length>1?Gn(pe(s,Tx(s,this.axis,!0))):this.softmax(s,this.axis[0]):this.softmax(s,this.axis)})}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}Bb.className="Softmax";J(Bb);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function qo(n,e,t){if(typeof n=="number")return go(n,e);if(n.length!==e)throw new D(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${n.length} elements.`);for(let s=0;s<e;++s){const o=n[s];if(!UR(o))throw new D(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(n)} including a non-integer number ${o}`)}return n}function kn(n,e,t,s,o=1){if(n==null)return n;const r=e+(e-1)*(o-1);let i;return t==="same"?i=n:i=n-r+1,Math.floor((i+s-1)/s)}function Mn(n,e,t,s){if(n==null)return null;if(s==="valid")n=n*e+Ts([t-e,0]);else if(s==="same")n=n*e;else throw new D(`Unsupport padding mode: ${s}.`);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Op(n,e){return V(()=>(nt(e),e==="channelsFirst"?$e(n,[0,2,3,1]):n))}function Vb(n,e){return V(()=>(nt(e),e==="channelsFirst"?$e(n,[0,2,3,4,1]):n))}function dA(n,e,t,s=1,o="valid",r,i=1){return V(()=>{if(r==null&&(r=Nn()),nt(r),n.shape.length!==3)throw new D(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(e.shape.length!==3)throw new D(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new D(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(r==="channelsFirst"&&(n=$e(n,[0,2,1])),o==="causal")throw new xe("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let a=gx(n,e,s,o==="same"?"same":"valid","NWC",i);return t!=null&&(a=Rn(a,t)),a})}function bm(n,e,t,s=[1,1],o="valid",r,i,a=null){return V(()=>{if(r==null&&(r=Nn()),nt(r),n.rank!==3&&n.rank!==4)throw new D(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(e.rank!==3&&e.rank!==4)throw new D(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let c=Op(n,r);if(o==="causal")throw new xe("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return c=a2({x:c,filter:e,strides:s,pad:o==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:t,activation:a}),r==="channelsFirst"&&(c=$e(c,[0,3,1,2])),c})}function pA(n,e,t,s=[1,1,1],o="valid",r,i){return V(()=>{if(r==null&&(r=Nn()),nt(r),n.rank!==4&&n.rank!==5)throw new D(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(e.rank!==4&&e.rank!==5)throw new D(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let a=Vb(n,r);if(o==="causal")throw new xe("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return a=sS(a,e,s,o==="same"?"same":"valid","NDHWC",i),t!=null&&(a=Rn(a,t)),r==="channelsFirst"&&(a=$e(a,[0,4,1,2,3])),a})}class Hl extends Ce{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Hl.verifyArgs(t),this.rank=e,gt(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new xe(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=qo(t.kernelSize,e,"kernelSize"),this.strides=qo(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,sn(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,nt(this.dataFormat),this.activation=Es(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=qe(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=ht(t.biasConstraint),this.biasRegularizer=je(t.biasRegularizer),this.activityRegularizer=je(t.activityRegularizer),this.dilationRate=qo(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new D(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new D(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new D(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(On("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!wp(e.kernelSize,"number",1,3))throw new D(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Ns(this.activation),useBias:this.useBias,biasInitializer:Xe(this.biasInitializer),biasRegularizer:Le(this.biasRegularizer),activityRegularizer:Le(this.activityRegularizer),biasConstraint:ut(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class gr extends Hl{constructor(e,t){super(e,t),this.kernel=null,gr.verifyArgs(t),this.filters=t.filters,gt(this.filters,"filters"),this.kernelInitializer=qe(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=ht(t.kernelConstraint),this.kernelRegularizer=je(t.kernelRegularizer)}build(e){e=Te(e);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new D(`The channel dimension of the input should be defined. Found ${e[t]}`);const s=e[t],o=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:s}}],this.built=!0}call(e,t){return V(()=>{e=fe(e);let s;const o=this.bias==null?null:this.bias.read(),r=Ly(this.activation.getClassName());if(r!=null&&this.rank===2)s=bm(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(this.rank===1)s=dA(e,this.kernel.read(),o,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=bm(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=pA(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new xe("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(e){e=Te(e);const t=[],s=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<s.length;++r){const i=kn(s[r],this.kernelSize[r],this.padding,this.strides[r],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[r]);t.push(i)}let o=[e[0]];return this.dataFormat==="channelsLast"?(o=o.concat(t),o.push(this.filters)):(o.push(this.filters),o=o.concat(t)),o}getConfig(){const e={filters:this.filters,kernelInitializer:Xe(this.kernelInitializer),kernelRegularizer:Le(this.kernelRegularizer),kernelConstraint:ut(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new D(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class xa extends gr{constructor(e){super(2,e),xa.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!wp(e.kernelSize,"number",1,2))throw new D(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}xa.className="Conv2D";J(xa);class ya extends gr{constructor(e){super(3,e),ya.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new D(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}ya.className="Conv3D";J(ya);class Wb extends xa{constructor(e){if(super(e),this.inputSpec=[new lt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new D(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Te(e),e.length!==4)throw new D("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new D("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],o=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new lt({ndim:4,axes:{[t]:s}})],this.built=!0}call(e,t){return V(()=>{let s=fe(e);if(s.shape.length!==4)throw new D(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const o=s.shape,r=o[0];let i,a;this.dataFormat==="channelsFirst"?(i=2,a=3):(i=1,a=2);const c=o[i],l=o[a],u=this.kernelSize[0],h=this.kernelSize[1],d=this.strides[0],p=this.strides[1],f=Mn(c,d,u,this.padding),m=Mn(l,p,h,this.padding),g=[r,f,m,this.filters];this.dataFormat!=="channelsLast"&&(s=$e(s,[0,2,3,1]));let x=xx(s,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(x=$e(x,[0,3,1,2])),this.bias!=null&&(x=Rn(x,this.bias.read(),this.dataFormat)),this.activation!=null&&(x=this.activation.apply(x)),x})}computeOutputShape(e){e=Te(e);const t=e.slice();let s,o,r;this.dataFormat==="channelsFirst"?(s=1,o=2,r=3):(s=3,o=1,r=2);const i=this.kernelSize[0],a=this.kernelSize[1],c=this.strides[0],l=this.strides[1];return t[s]=this.filters,t[o]=Mn(t[o],c,i,this.padding),t[r]=Mn(t[r],l,a,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Wb.className="Conv2DTranspose";J(Wb);class Ub extends ya{constructor(e){if(super(e),this.inputSpec=[new lt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new D(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Te(e),e.length!==5)throw new D("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new D("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],o=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new lt({ndim:5,axes:{[t]:s}})],this.built=!0}call(e,t){return V(()=>{let s=fe(e);if(s.shape.length!==5)throw new D(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const o=s.shape,r=o[0];let i,a,c;this.dataFormat==="channelsFirst"?(c=2,i=3,a=4):(c=1,i=2,a=3);const l=o[c],u=o[i],h=o[a],d=this.kernelSize[0],p=this.kernelSize[1],f=this.kernelSize[2],m=this.strides[0],g=this.strides[1],x=this.strides[2],y=Mn(l,m,d,this.padding),w=Mn(u,g,p,this.padding),b=Mn(h,x,f,this.padding),v=[r,y,w,b,this.filters];this.dataFormat!=="channelsLast"&&(s=$e(s,[0,2,3,4,1]));let I=iS(s,this.kernel.read(),v,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(I=$e(I,[0,4,1,2,3])),this.bias!==null&&(I=Rn(I,this.bias.read(),this.dataFormat)),this.activation!==null&&(I=this.activation.apply(I)),I})}computeOutputShape(e){e=Te(e);const t=e.slice();let s,o,r,i;this.dataFormat==="channelsFirst"?(s=1,o=2,r=3,i=4):(s=4,o=1,r=2,i=3);const a=this.kernelSize[0],c=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],h=this.strides[1],d=this.strides[2];return t[s]=this.filters,t[o]=Mn(t[o],u,a,this.padding),t[r]=Mn(t[r],h,c,this.padding),t[i]=Mn(t[i],d,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Ub.className="Conv3DTranspose";J(Ub);class Gb extends gr{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new D("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new D("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new D(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=qe(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=je(t.depthwiseRegularizer),this.depthwiseConstraint=ht(t.depthwiseConstraint),this.pointwiseInitializer=qe(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=je(t.pointwiseRegularizer),this.pointwiseConstraint=ht(t.pointwiseConstraint)}build(e){if(e=Te(e),e.length<this.rank+2)throw new D(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new D(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const s=e[t],o=this.kernelSize.concat([s,this.depthMultiplier]),r=[];for(let a=0;a<this.rank;++a)r.push(1);r.push(s*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",o,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new lt({ndim:this.rank+2,axes:{[t]:s}})],this.built=!0}call(e,t){return V(()=>{e=fe(e);let s;if(this.rank===1)throw new xe("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=$e(e,[0,2,3,1])),s=Mx(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=Rn(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=$e(s,[0,3,1,2])),s})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Xe(this.depthwiseInitializer),e.pointwiseInitializer=Xe(this.pointwiseInitializer),e.depthwiseRegularizer=Le(this.depthwiseRegularizer),e.pointwiseRegularizer=Le(this.pointwiseRegularizer),e.depthwiseConstraint=ut(this.depthwiseConstraint),e.pointwiseConstraint=ut(this.pointwiseConstraint),e}}Gb.className="SeparableConv";class Hb extends Gb{constructor(e){super(2,e)}}Hb.className="SeparableConv2D";J(Hb);class ql extends gr{constructor(e){super(1,e),ql.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!wp(e.kernelSize,"number",1,1))throw new D(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}ql.className="Conv1D";J(ql);class qb extends Ce{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return V(()=>{if(e=fe(e),this.dataFormat==="channelsLast"){const s=Ra(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Ra(s,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=Ra(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Ra(s,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}qb.className="Cropping2D";J(qb);class jb extends Ce{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,nt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,BR(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){const t=e[2]==null?null:this.size[0]*e[2],s=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,s]}else{const t=e[1]==null?null:this.size[0]*e[1],s=e[2]==null?null:this.size[1]*e[2];return[e[0],t,s,e[3]]}}call(e,t){return V(()=>{let s=fe(e);const o=s.shape;if(this.dataFormat==="channelsFirst"){s=$e(s,[0,2,3,1]);const r=this.size[0]*o[2],i=this.size[1]*o[3],a=this.interpolation==="nearest"?Qn.resizeNearestNeighbor(s,[r,i]):Qn.resizeBilinear(s,[r,i]);return $e(a,[0,3,1,2])}else{const r=this.size[0]*o[1],i=this.size[1]*o[2];return this.interpolation==="nearest"?Qn.resizeNearestNeighbor(s,[r,i]):Qn.resizeBilinear(s,[r,i])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}jb.className="UpSampling2D";J(jb);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function fA(n,e,t=[1,1],s="valid",o,r){return V(()=>{o==null&&(o=Nn()),nt(o);let i=Op(n,o);if(n.rank!==4)throw new D(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(e.rank!==4)throw new D(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return i=vd(i,e,t,s==="same"?"same":"valid","NHWC",r),o==="channelsFirst"&&(i=$e(i,[0,3,1,2])),i})}class Kb extends Hl{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=qe(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=ht(e.depthwiseConstraint),this.depthwiseRegularizer=je(e.depthwiseRegularizer)}build(e){if(e=Te(e),e.length<4)throw new D(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new D(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const s=e[t],o=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",o,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return V(()=>{e=fe(e);let s=fA(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=Rn(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(e){e=Te(e);const t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],o=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=kn(t,this.kernelSize[0],this.padding,this.strides[0]),i=kn(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],o,r,i]:[e[0],r,i,o]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Xe(this.depthwiseInitializer),e.depthwiseRegularizer=Le(this.depthwiseRegularizer),e.depthwiseConstraint=ut(this.depthwiseRegularizer),e}}Kb.className="DepthwiseConv2D";J(Kb);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Xb(n,e,t,s){if(Array.isArray(n)){if(e!=null||t!=null)throw new D("When inputs is an array, neither initialState or constants should be provided");s!=null&&(t=n.slice(n.length-s,n.length),n=n.slice(0,n.length-s)),n.length>1&&(e=n.slice(1,n.length)),n=n[0]}function o(r){return r==null||Array.isArray(r)?r:[r]}return e=o(e),t=o(t),{inputs:n,initialState:e,constants:t}}function Yb(n,e,t,s=!1,o,r,i=!1,a=!1){return V(()=>{const c=e.shape.length;if(c<3)throw new D(`Input should be at least 3D, but is ${c}D.`);const l=[1,0].concat(Tn(2,c));e=$e(e,l),i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),o!=null&&(o=se(se(o,"bool"),"float32"),o.rank===c-1&&(o=Lt(o,-1)),o=$e(o,l)),s&&(e=fo(e,0),o!=null&&(o=fo(o,0)));const u=[];let h,d=t;const p=e.shape[0],f=mo(e);let m;o!=null&&(m=mo(o));for(let x=0;x<p;++x){const y=f[x],w=V(()=>n(y,d));if(o==null)h=w[0],d=w[1];else{const b=V(()=>{const v=m[x],I=pe(pn(v),v),T=Z(A(w[0],v),A(d[0],I)),N=d.map(($,S)=>Z(A(w[1][S],v),A($,I)));return{output:T,newStates:N}});h=b.output,d=b.newStates}a&&u.push(h)}let g;return a&&(g=ts(u,1)),[h,g,d]})}class Bs extends Ce{constructor(e){super(e);let t;if(e.cell==null)throw new D("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new Pp({cells:e.cell}):t=e.cell,t.stateSize==null)throw new D("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new lt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Tn(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){eh(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const s=t[0];let o;if(this.returnSequences?o=[e[0],e[1],s]:o=[e[0],s],this.returnState){const r=[];for(const i of t)r.push([e[0],i]);return[o].concat(r)}else return o}computeMask(e,t){return V(()=>{Array.isArray(t)&&(t=t[0]);const s=this.returnSequences?t:null;if(this.returnState){const o=this.states.map(r=>null);return[s].concat(o)}else return s})}get states(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let s=0;s<e;++s)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new xe("Constants support is not implemented in RNN yet.");eh(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new lt({shape:[t,null,...s]});const o=[e[0]].concat(e.slice(2));this.cell.build(o);let r;if(Array.isArray(this.cell.stateSize)?r=this.cell.stateSize:r=[this.cell.stateSize],this.stateSpec!=null){if(!Re(this.stateSpec.map(i=>i.shape[i.shape.length-1]),r))throw new D(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map(i=>new lt({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){V(()=>{if(!this.stateful)throw new Fn("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new D("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>We([s,o])):this.states_=[We([s,this.cell.stateSize])];else if(e==null)be(this.states_),this.keptStates!=null&&(be(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>We([s,o])):this.states_[0]=We([s,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new D(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):be(this.states_);for(let o=0;o<this.states_.length;++o){const r=e[o],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[o]:this.cell.stateSize,a=[s,i];if(!Re(r.shape,a))throw new D(`State ${o} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[o]=r}}this.states_=this.states_.map(o=>Pn(o.clone()))})}apply(e,t){let s=t==null?null:t.initialState,o=t==null?null:t.constants;t==null&&(t={});const r=Xb(e,s,o,this.numConstants);e=r.inputs,s=r.initialState,o=r.constants;let i=[],a=[];if(s!=null){t.initialState=s,i=i.concat(s),this.stateSpec=[];for(const l of s)this.stateSpec.push(new lt({shape:l.shape}));a=a.concat(this.stateSpec)}if(o!=null&&(t.constants=o,i=i.concat(o),this.numConstants=o.length),i[0]instanceof qn){const l=[e].concat(i),u=this.inputSpec.concat(a),h=this.inputSpec;this.inputSpec=u;const d=super.apply(l,t);return this.inputSpec=h,d}else return super.apply(e,t)}call(e,t){return V(()=>{const s=t==null?null:t.mask,o=t==null?null:t.training;let r=t==null?null:t.initialState;e=fe(e),r==null&&(this.stateful?r=this.states_:r=this.getInitialState(e));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==i)throw new D(`RNN Layer has ${i} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:o},l=Yb((f,m)=>{const g=this.cell.call([f].concat(m),a);return[g[0],g.slice(1)]},e,r,this.goBackwards,s,null,this.unroll,this.returnSequences),u=l[0],h=l[1],d=l[2];this.stateful&&this.resetStates(d,o);const p=this.returnSequences?h:u;return this.returnState?[p].concat(d):p})}getInitialState(e){return V(()=>{let t=We(e.shape);return t=le(t,[1,2]),t=da(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?Zu(t,[1,s]):t):this.cell.stateSize>1?[Zu(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===Bs.className&&(t.cell={className:this.cell.getClassName(),config:s}),Object.assign(Object.assign(Object.assign({},s),e),t)}static fromConfig(e,t,s={}){const o=t.cell,r=Wn(o,s);return new e(Object.assign(t,{cell:r}))}}Bs.className="RNN";J(Bs);class jl extends Ce{}class Mp extends jl{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,gt(this.units,"units"),this.activation=Es(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=qe(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=qe(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=qe(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=je(e.kernelRegularizer),this.recurrentRegularizer=je(e.recurrentRegularizer),this.biasRegularizer=je(e.biasRegularizer),this.kernelConstraint=ht(e.kernelConstraint),this.recurrentConstraint=ht(e.recurrentConstraint),this.biasConstraint=ht(e.biasConstraint),this.dropout=er([1,Ts([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=er([1,Ts([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Te(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return V(()=>{if(e=e,e.length!==2)throw new D(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let s=e[1];e=e[0];const o=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Rs({ones:()=>pn(e),rate:this.dropout,training:o,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Rs({ones:()=>pn(s),rate:this.recurrentDropout,training:o,dropoutFunc:this.dropoutFunc}));let r;const i=this.dropoutMask,a=this.recurrentDropoutMask;i!=null?r=Vn(A(e,i),this.kernel.read()):r=Vn(e,this.kernel.read()),this.bias!=null&&(r=Rn(r,this.bias.read())),a!=null&&(s=A(s,a));let c=Z(r,Vn(s,this.recurrentKernel.read()));return this.activation!=null&&(c=this.activation.apply(c)),[c,c]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Ns(this.activation),useBias:this.useBias,kernelInitializer:Xe(this.kernelInitializer),recurrentInitializer:Xe(this.recurrentInitializer),biasInitializer:Xe(this.biasInitializer),kernelRegularizer:Le(this.kernelRegularizer),recurrentRegularizer:Le(this.recurrentRegularizer),biasRegularizer:Le(this.biasRegularizer),activityRegularizer:Le(this.activityRegularizer),kernelConstraint:ut(this.kernelConstraint),recurrentConstraint:ut(this.recurrentConstraint),biasConstraint:ut(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}Mp.className="SimpleRNNCell";J(Mp);class Jb extends Bs{constructor(e){e.cell=new Mp(e),super(e)}call(e,t){return V(()=>{this.cell.dropoutMask!=null&&(be(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(be(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,o=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:s,training:o,initialState:r})})}static fromConfig(e,t){return new e(t)}}Jb.className="SimpleRNN";J(Jb);class _p extends jl{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new D("GRUCell does not support reset_after parameter set to true.");this.units=e.units,gt(this.units,"units"),this.activation=Es(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Es(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=qe(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=qe(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=qe(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=je(e.kernelRegularizer),this.recurrentRegularizer=je(e.recurrentRegularizer),this.biasRegularizer=je(e.biasRegularizer),this.kernelConstraint=ht(e.kernelConstraint),this.recurrentConstraint=ht(e.recurrentConstraint),this.biasConstraint=ht(e.biasConstraint),this.dropout=er([1,Ts([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=er([1,Ts([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Te(e);const t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return V(()=>{if(e=e,e.length!==2)throw new D(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training==null?!1:t.training;let o=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Rs({ones:()=>pn(e),rate:this.dropout,training:s,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Rs({ones:()=>pn(o),rate:this.recurrentDropout,training:s,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,i=this.recurrentDropoutMask;let a,c,l;0<this.dropout&&this.dropout<1&&(e=A(e,r[0]));let u=Vn(e,this.kernel.read());this.useBias&&(u=Rn(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(o=A(o,i[0]));const h=this.recurrentKernel.read(),[d,p]=en(h,[2*this.units,this.units],h.rank-1),f=Vn(o,d),[m,g,x]=en(u,3,u.rank-1),[y,w]=en(f,2,f.rank-1);a=this.recurrentActivation.apply(Z(m,y)),c=this.recurrentActivation.apply(Z(g,w));const b=Vn(A(c,o),p);l=this.activation.apply(Z(x,b));const v=Z(A(a,o),A(Z(1,Qe(a)),l));return[v,v]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Ns(this.activation),recurrentActivation:Ns(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Xe(this.kernelInitializer),recurrentInitializer:Xe(this.recurrentInitializer),biasInitializer:Xe(this.biasInitializer),kernelRegularizer:Le(this.kernelRegularizer),recurrentRegularizer:Le(this.recurrentRegularizer),biasRegularizer:Le(this.biasRegularizer),activityRegularizer:Le(this.activityRegularizer),kernelConstraint:ut(this.kernelConstraint),recurrentConstraint:ut(this.recurrentConstraint),biasConstraint:ut(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}_p.className="GRUCell";J(_p);class Zb extends Bs{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new _p(e),super(e)}call(e,t){return V(()=>{this.cell.dropoutMask!=null&&(be(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(be(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,o=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:s,training:o,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}Zb.className="GRU";J(Zb);class Kl extends jl{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,gt(this.units,"units"),this.activation=Es(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Es(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=qe(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=qe(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=qe(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=je(e.kernelRegularizer),this.recurrentRegularizer=je(e.recurrentRegularizer),this.biasRegularizer=je(e.biasRegularizer),this.kernelConstraint=ht(e.kernelConstraint),this.recurrentConstraint=ht(e.recurrentConstraint),this.biasConstraint=ht(e.biasConstraint),this.dropout=er([1,Ts([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=er([1,Ts([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=Te(e);const s=e[e.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let o;if(this.useBias){if(this.unitForgetBias){const r=this.biasInitializer,i=this.units;o=new(t=class extends mn{apply(c,l){const u=r.apply([i]),h=new Cp().apply([i]),d=r.apply([i*2]);return tm(tm(u,h),d)}},t.className="CustomInit",t)}else o=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,o,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return V(()=>{const s=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new D(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let o=e[1];const r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Rs({ones:()=>pn(e),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Rs({ones:()=>pn(o),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,a=this.recurrentDropoutMask;let c,l,u,h;0<this.dropout&&this.dropout<1&&(e=A(e,i[0]));let d=Vn(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(o=A(o,a[0])),d=Z(d,Vn(o,this.recurrentKernel.read())),this.useBias&&(d=Rn(d,this.bias.read()));const[p,f,m,g]=en(d,4,d.rank-1);c=this.recurrentActivation.apply(p),l=this.recurrentActivation.apply(f),u=Z(A(l,r),A(c,this.activation.apply(m))),h=this.recurrentActivation.apply(g);const x=A(h,this.activation.apply(u));return[x,x,u]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Ns(this.activation),recurrentActivation:Ns(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Xe(this.kernelInitializer),recurrentInitializer:Xe(this.recurrentInitializer),biasInitializer:Xe(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Le(this.kernelRegularizer),recurrentRegularizer:Le(this.recurrentRegularizer),biasRegularizer:Le(this.biasRegularizer),activityRegularizer:Le(this.activityRegularizer),kernelConstraint:ut(this.kernelConstraint),recurrentConstraint:ut(this.recurrentConstraint),biasConstraint:ut(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}Kl.className="LSTMCell";J(Kl);class Lp extends Bs{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Kl(e),super(e)}call(e,t){return V(()=>{this.cell.dropoutMask!=null&&(be(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(be(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,o=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:s,training:o,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}Lp.className="LSTM";J(Lp);class Pp extends jl{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return V(()=>{e=e;let s=e.slice(1);const o=[];for(const a of this.cells.slice().reverse())Array.isArray(a.stateSize)?o.push(s.splice(0,a.stateSize.length)):o.push(s.splice(0,1));o.reverse();const r=[];let i;for(let a=0;a<this.cells.length;++a){const c=this.cells[a];s=o[a],a===0?i=[e[0]].concat(s):i=[i[0]].concat(s),i=c.call(i,t),r.push(i.slice(1))}s=[];for(const a of r.slice().reverse())s.push(...a);return[i[0]].concat(s)})}build(e){eh(e)&&(e=e[0]),e=e;let t;this.cells.forEach((s,o)=>{no(`RNNCell_${o}`,()=>{s.build(e),Array.isArray(s.stateSize)?t=s.stateSize[0]:t=s.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t=r=>({className:r.getClassName(),config:r.getConfig()}),o={cells:this.cells.map(t)};return Object.assign(Object.assign({},e),o)}static fromConfig(e,t,s={}){const o=[];for(const r of t.cells)o.push(Wn(r,s));return new e({cells:o})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.cells)t.push(...s.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return th(e)}setWeights(e){const t=[];for(const s of this.cells){const o=s.weights.length,r=e.splice(o);for(let i=0;i<s.weights.length;++i)t.push([s.weights[i],r[i]])}Ep(t)}}Pp.className="StackedRNNCells";J(Pp);function Rs(n){const{ones:e,rate:t,training:s=!1,count:o=1,dropoutFunc:r}=n,i=()=>r!=null?r(e(),t):Gy(e(),t),a=()=>fa(i,e,s);return!o||o<=1?Pn(a().clone()):Array(o).fill(void 0).map(a).map(l=>Pn(l.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var mA=function(n,e){var t={};for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&e.indexOf(s)<0&&(t[s]=n[s]);if(n!=null&&typeof Object.getOwnPropertySymbols=="function")for(var o=0,s=Object.getOwnPropertySymbols(n);o<s.length;o++)e.indexOf(s[o])<0&&Object.prototype.propertyIsEnumerable.call(n,s[o])&&(t[s[o]]=n[s[o]]);return t};class Qb extends Bs{constructor(e){if(e.unroll)throw new xe("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new xe("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new lt({ndim:5})]}call(e,t){return V(()=>{if(this.cell.dropoutMask!=null&&(be(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(be(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new D("ConvRNN2D cell does not support constants");const s=t==null?null:t.mask,o=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:s,training:o,initialState:r})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return V(()=>{const{stateSize:t}=this.cell,s=e.shape,o=this.computeSingleOutputShape(s),r=[o[0],...o.slice(2)],i=We(r);return Array.isArray(t)?Array(t.length).fill(i):[i]})}resetStates(e,t=!1){V(()=>{if(!this.stateful)throw new Fn("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,o=this.computeSingleOutputShape(s),r=[o[0],...o.slice(2)];if(s[0]==null)throw new D("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>We(r)):this.states_=[We(r)];else if(e==null)be(this.states_),this.keptStates!=null&&(be(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>We(r)):this.states_[0]=We(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new D(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):be(this.states_);for(let a=0;a<this.states_.length;++a){const c=e[a],l=r;if(!Re(c.shape,l))throw new D(`State ${a} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${c.shape}`);this.states_[a]=c}}this.states_=this.states_.map(a=>Pn(a.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:s,kernelSize:o,padding:r,strides:i,dilationRate:a}=this.cell,c=t==="channelsFirst",l=e[c?3:2],u=e[c?4:3],h=kn(l,o[0],r,i[0],a[0]),d=kn(u,o[1],r,i[1],a[1]);return[...e.slice(0,2),...c?[s,h,d]:[h,d,s]]}}Qb.className="ConvRNN2D";class zp extends Kl{constructor(e){const{filters:t,kernelSize:s,strides:o,padding:r,dataFormat:i,dilationRate:a}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,gt(this.filters,"filters"),this.kernelSize=qo(s,2,"kernelSize"),this.kernelSize.forEach(c=>gt(c,"kernelSize")),this.strides=qo(o||1,2,"strides"),this.strides.forEach(c=>gt(c,"strides")),this.padding=r||"valid",sn(this.padding),this.dataFormat=i||"channelsLast",nt(this.dataFormat),this.dilationRate=qo(a||1,2,"dilationRate"),this.dilationRate.forEach(c=>gt(c,"dilationRate"))}build(e){var t;e=Te(e);const s=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[s]==null)throw new D(`The channel dimension of the input should be defined. Found ${e[s]}`);const o=e[s],r=4,i=this.kernelSize.concat([o,this.filters*r]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,this.filters*r]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let c;if(this.unitForgetBias){const l=this.biasInitializer,u=this.filters;c=new(t=class extends mn{apply(d,p){const f=l.apply([u]),m=Ps([u]),g=l.apply([u*2]);return vp([f,m,g])}},t.className="CustomInit",t)}else c=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*r],null,c,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return V(()=>{if(e.length!==3)throw new D(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training||!1,o=e[0],r=e[1],i=e[2],a=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Rs({ones:()=>pn(o),rate:this.dropout,training:s,count:a,dropoutFunc:this.dropoutFunc}));const c=this.dropoutMask,l=(G,K,Y)=>!K||!K[Y]?G:A(K[Y],G);let u=l(o,c,0),h=l(o,c,1),d=l(o,c,2),p=l(o,c,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Rs({ones:()=>pn(r),rate:this.recurrentDropout,training:s,count:a,dropoutFunc:this.dropoutFunc}));const f=this.recurrentDropoutMask;let m=l(r,f,0),g=l(r,f,1),x=l(r,f,2),y=l(r,f,3);const w=3,[b,v,I,T]=en(this.kernel.read(),a,w),[N,$,S,C]=this.useBias?en(this.bias.read(),a):[null,null,null,null];u=this.inputConv(u,b,N,this.padding),h=this.inputConv(h,v,$,this.padding),d=this.inputConv(d,I,S,this.padding),p=this.inputConv(p,T,C,this.padding);const[R,F,z,M]=en(this.recurrentKernel.read(),a,w);m=this.recurrentConv(m,R),g=this.recurrentConv(g,F),x=this.recurrentConv(x,z),y=this.recurrentConv(y,M);const B=this.recurrentActivation.apply(Z(u,m)),H=this.recurrentActivation.apply(Z(h,g)),P=Z(A(H,i),A(B,this.activation.apply(Z(d,x)))),U=A(this.recurrentActivation.apply(Z(p,y)),this.activation.apply(P));return[U,U,P]})}getConfig(){const e=super.getConfig(),{units:t}=e,s=mA(e,["units"]),o={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},s),o)}inputConv(e,t,s,o){const r=ho(e,t,this.strides,o||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?Rn(r,s,this.dataFormat):r}recurrentConv(e,t){return ho(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}zp.className="ConvLSTM2DCell";J(zp);class e0 extends Qb{constructor(e){const t=new zp(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}e0.className="ConvLSTM2D";J(e0);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Xl extends Ce{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;const t=e.shape,s=[];for(let o=0;o<this.noiseShape.length;++o)s.push(this.noiseShape[o]==null?t[o]:this.noiseShape[o]);return s}call(e,t){return V(()=>{this.invokeCallHook(e,t);const s=fe(e);if(0<this.rate&&this.rate<1){const o=t.training==null?!1:t.training,r=this.getNoiseShape(s);return fa(()=>Gy(s,this.rate,r,this.seed),()=>s,o)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Xl.className="Dropout";J(Xl);class t0 extends Xl{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}t0.className="SpatialDropout1D";J(t0);class Bp extends Ce{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,gt(this.units,"units"),this.activation=Es(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=qe(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=qe(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=ht(e.kernelConstraint),this.biasConstraint=ht(e.biasConstraint),this.kernelRegularizer=je(e.kernelRegularizer),this.biasRegularizer=je(e.biasRegularizer),this.activityRegularizer=je(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=Te(e);const t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=Te(e);const t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return V(()=>{this.invokeCallHook(e,t);const s=fe(e),o=Ly(this.activation.getClassName());let r;return o!=null?r=Vn(s,this.kernel.read(),o,this.bias?this.bias.read():null):(r=Vn(s,this.kernel.read()),this.bias!=null&&(r=Rn(r,this.bias.read())),this.activation!=null&&(r=this.activation.apply(r))),r})}getConfig(){const e={units:this.units,activation:Ns(this.activation),useBias:this.useBias,kernelInitializer:Xe(this.kernelInitializer),biasInitializer:Xe(this.biasInitializer),kernelRegularizer:Le(this.kernelRegularizer),biasRegularizer:Le(this.biasRegularizer),activityRegularizer:Le(this.activityRegularizer),kernelConstraint:ut(this.kernelConstraint),biasConstraint:ut(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Bp.className="Dense";J(Bp);class n0 extends Ce{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Te(e);for(const t of e.slice(1))if(t==null)throw new D(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],$s(e,1)]}call(e,t){return V(()=>{this.invokeCallHook(e,t);let s=fe(e);if(this.dataFormat==="channelsFirst"&&s.rank>1){const o=[0];for(let r=2;r<s.rank;++r)o.push(r);o.push(1),s=$e(s,o)}return qR(s)})}getConfig(){const e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}n0.className="Flatten";J(n0);class s0 extends Ce{constructor(e){super(e),this.supportsMasking=!0,this.activation=Es(e.activation)}call(e,t){return V(()=>{this.invokeCallHook(e,t);const s=fe(e);return this.activation.apply(s)})}getConfig(){const e={activation:Ns(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}s0.className="Activation";J(s0);class o0 extends Ce{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return V(()=>(e=fe(e),GR(e,this.n)))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}o0.className="RepeatVector";J(o0);class r0 extends Ce{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){const s="Total size of new array must be unchanged.",o=t.slice();let r=1,i=null;for(let c=0;c<o.length;++c){const l=o[c];if(this.isUnknown(l))if(i===null)i=c;else throw new D("Can only specifiy one unknown dimension.");else r*=l}const a=$s(e);if(i!==null){if(r===0||a%r!==0)throw new D(s);o[i]=a/r}else if(a!==r)throw new D(s);return o}computeOutputShape(e){let t=!1;for(let s=0;s<e.length;++s)if(this.isUnknown(e[s])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return V(()=>{this.invokeCallHook(e,t);const s=fe(e),o=s.shape,r=o.slice(0,1).concat(this.fixUnknownDimension(o.slice(1),this.targetShape));return _(s,r)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}r0.className="Reshape";J(r0);class i0 extends Ce{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Tn(1,e.dims.length+1);if(!Re(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new lt({ndim:this.dims.length+1})]}computeOutputShape(e){e=Te(e);const t=e.slice();return this.dims.forEach((s,o)=>{t[o+1]=e[s]}),t}call(e,t){return $e(fe(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}i0.className="Permute";J(i0);class a0 extends Ce{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const s=fe(e);return Hu(rc(s,this.maskValue),-1)}call(e,t){return V(()=>{this.invokeCallHook(e,t);const s=fe(e),i=Hu(rc(s,this.maskValue),-1,!0);return A(s,se(i,s.dtype))})}}a0.className="Masking";J(a0);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class c0 extends Ce{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Ae(e.inputLength))}this.inputDim=e.inputDim,gt(this.inputDim,"inputDim"),this.outputDim=e.outputDim,gt(this.outputDim,"outputDim"),this.embeddingsInitializer=qe(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=je(e.embeddingsRegularizer),this.activityRegularizer=je(e.activityRegularizer),this.embeddingsConstraint=ht(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return V(()=>this.maskZero?(e=fe(e),rc(e,Se(e))):null)}computeOutputShape(e){if(e=Te(e),this.inputLength==null)return[...e,this.outputDim];const t=Ae(this.inputLength);if(t.length!==e.length-1)throw new D(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let s=0;for(let o=0;o<t.length;++o){const r=t[o],i=e[o+1];if(r!=null&&i!=null&&r!==i)throw new D(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);r==null&&(t[s]=i),s++}}return[e[0],...t,this.outputDim]}call(e,t){return V(()=>{this.invokeCallHook(e,t);let s=fe(e);s.dtype!=="int32"&&(s=Bn(s,"int32"));const o=Uy(this.embeddings.read(),_(s,[s.size]));return _(o,Te(this.computeOutputShape(s.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Xe(this.embeddingsInitializer),embeddingsRegularizer:Le(this.embeddingsRegularizer),activityRegularizer:Le(this.activityRegularizer),embeddingsConstraint:ut(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}c0.className="Embedding";J(c0);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class So extends Ce{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new xe}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;const s=e.slice(0,e.length-t.length);for(let o=0;o<t.length;++o){const r=e[e.length-t.length+o],i=t[o];if(r==null||i==null||r<0||i<0)s.push(null);else if(r===1)s.push(i);else if(i===1)s.push(r);else{if(r!==i)throw new D("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));s.push(r)}}return s}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Te(e)]),e=e,e.length<2)throw new D(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const r of e)r!=null&&r[0]!==null&&t.push(r[0]);if(t=Is(t),t.length>1)throw new D(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let s=e[0]==null?null:e[0].slice(1);for(let r=1;r<e.length;++r){const i=e[r]==null?null:e[r].slice(1);s=this.computeElementwiseOpOutputShape(s,i)}const o=e.map(r=>r.length);e.indexOf(null)===-1&&Is(o).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return V(()=>{if(e=e,this.reshapeRequired){const s=[],o=e.map(r=>r.rank);if(o.indexOf(null)===-1){const r=Ts(o);for(let i of e){const a=i.rank;for(let c=0;c<r-a;++c)i=da(i,1);s.push(i)}return this.mergeFunction(s)}else{let r=!1;for(const c of e){const l=c.rank;if(l==null){const u=c.shape,h=u[0],d=u.slice(1).concat([h]);let p=_(c,[h].concat($s(u.slice(1))));p=$e(p,[1,0]),p=_(p,d),s.push(p),r=!0}else if(l>1){const u=Tn(1,l).concat([0]);s.push($e(c,u)),r=!0}else s.push(c)}let i=this.mergeFunction(s);const a=i.rank;if(r){if(a==null){const c=i.shape,l=c.length,u=c[l-1],h=[u].concat(c.slice(0,c.length-1));i=_($e(_(i,[-1,u]),[1,0]),h)}else if(a>1){const c=[a-1].concat(Tn(0,a-1));i=$e(i,c)}}return i}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let o=1;o<e.length;++o){const r=e[o]==null?null:e[o].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let s=[];for(const o of e)o!=null&&o[0]!==null&&s.push(o[0]);return s=Is(s),s.length===1?t=s.concat(t):t=[null].concat(t),t}computeMask(e,t){return V(()=>{if(t==null)return null;if(!Array.isArray(t))throw new D("`mask` should be an Array");if(!Array.isArray(e))throw new D("`inputs` should be an Array");if(t.length!==e.length)throw new D(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(o=>o==null))return null;t=t.map(o=>o==null?o:Lt(o,0));let s=t[0];for(let o=1;o<t.length-1;++o)s=es(s,t[o]);return s})}}class l0 extends So{constructor(e){super(e)}mergeFunction(e){return V(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=Z(t,e[s]);return t})}}l0.className="Add";J(l0);class u0 extends So{constructor(e){super(e)}mergeFunction(e){return V(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=A(t,e[s]);return t})}}u0.className="Multiply";J(u0);class h0 extends So{constructor(e){super(e)}mergeFunction(e){return V(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=Z(t,e[s]);return A(1/e.length,t)})}}h0.className="Average";J(h0);class d0 extends So{constructor(e){super(e)}mergeFunction(e){return V(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=Ls(t,e[s]);return t})}}d0.className="Maximum";J(d0);class p0 extends So{constructor(e){super(e)}mergeFunction(e){return V(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=Xr(t,e[s]);return t})}}p0.className="Minimum";J(p0);class f0 extends So{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new D("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const o of e)if(o!=null){t=!1;break}if(t)return;const s=[];for(let o=0;o<e.length;++o){const r=e[o].slice();r.splice(this.axis,1);let i=!1;for(const a of s)if(Re(a,r)){i=!0;break}i||s.push(r)}if(s.length>1)throw new D("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return V(()=>vp(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new D("A `Concatenate` layer should be called on a list of inputs.");const t=e,s=t[0].slice(),o=this.axis<0?s.length+this.axis:this.axis;for(const r of t.slice(1)){if(s[o]==null||r[o]==null){s[o]=null;break}s[o]+=r[o]}return s}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new D("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new D("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new D(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return V(()=>{let s=!0;if(t.forEach(i=>{if(i!=null){s=!1;return}}),s)return null;const o=[];for(let i=0;i<e.length;++i)t[i]==null?o.push(se(pn(e[i]),"bool")):t[i].rank<e[i].rank?o.push(Lt(t[i],-1)):o.push(t[i]);const r=zt(o,this.axis);return mx(r,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}f0.className="Concatenate";J(f0);function Dr(n,e){for(;n<0;)n+=e;return n}function gA(n,e,t){if(n.shape.length>3||e.shape.length>3)throw new xe("batchDot is not implemented for tensors of 4D or higher rank yet");if(k(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),k(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),n.dtype==="complex64"||e.dtype==="complex64")throw new xe("batchDot is not implemented for complex64-type Tensors yet.");const s=n.shape.length,o=e.shape.length;t==null&&(t=[s-1,o-2]);const r=t;return V(()=>{let i;if(s>o){i=s-o;const c=[];for(let l=0;l<i;++l)c.push(1);e=_(e,e.shape.concat(c))}else if(o>s){i=o-s;const c=[];for(let l=0;l<i;++l)c.push(1);n=_(n,n.shape.concat(c))}else i=0;let a;if(n.shape.length===2&&e.shape.length===2)r[0]===r[1]?a=le(A(n,e),r[0]):a=le(A($e(n,[1,0]),e),r[1]);else{const c=r[0]!==n.shape.length-1,l=r[1]===e.shape.length-1;a=Ne(n,e,c,l)}if(i>0){let c;s>o?c=s+o-3:c=s-1;const l=[];for(let u=c;u<c+i;++u)l.push(u);a=ia(a,l)}return a.shape.length===1&&(a=Lt(a,1)),a})}class m0 extends So{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){k(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],s=e[1];if(t.length>3||s.length>3)throw new xe("Dot layer does not support tensors of 4D or higher rank yet.");const o=this.interpretAxes(t,s);if(t[o[0]]!==s[o[1]])throw new D(`Dimension incompatibility: ${t[o[0]]} !== ${s[o[1]]}`)}mergeFunction(e){if(e.length!==2)throw new D(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],s=e[1],o;return Array.isArray(this.axes)?o=this.axes.map((r,i)=>Dr(r,e[i].shape.length)):o=[Dr(this.axes,t.shape.length),Dr(this.axes,s.shape.length)],this.normalize&&(t=dc(t,o[0]),s=dc(s,o[1])),gA(t,s,o)}interpretAxes(e,t){let s;return Array.isArray(this.axes)?s=this.axes:s=[Dr(this.axes,e.length),Dr(this.axes,t.length)],s}computeOutputShape(e){k(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),s=e[1].slice();if(t.length>3||s.length>3)throw new xe("Dot layer does not support tensors of 4D or higher rank yet.");const o=this.interpretAxes(t,s);t.splice(o[0],1),s.splice(o[1],1),s.splice(0,1);const r=t.concat(s);return r.length===1&&r.push(1),r}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}m0.className="Dot";J(m0);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class g0 extends Ce{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return V(()=>{this.invokeCallHook(e,t);const s=fe(e);return fa(()=>Z(Vl(s.shape,0,this.stddev),s),()=>s,t.training||!1)})}}g0.className="GaussianNoise";J(g0);class x0 extends Ce{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return V(()=>{this.invokeCallHook(e,t);const s=fe(e);return this.rate>0&&this.rate<1?fa(()=>{const r=Math.sqrt(this.rate/(1-this.rate));return A(s,Vl(s.shape,1,r))},()=>s,t.training||!1):s})}}x0.className="GaussianDropout";J(x0);class y0 extends Ce{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||fe(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return V(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(e);return fa(()=>{const r=fe(e),a=-1.6732632423543772*1.0507009873554805;let c=vo(ra(s),this.rate);c=Bn(c,"float32");const l=((1-this.rate)*(1+this.rate*a**2))**-.5,u=-l*a*this.rate,h=Z(A(r,c),A(Z(c,-1),a));return Z(A(h,l),u)},()=>fe(e),t.training||!1)}return e})}}y0.className="AlphaDropout";J(y0);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Qr(n,e,t,s,o,r=.001){let i;if(n.rank===2)i=F$(n,e,t,s,o,r);else if(n.rank===3)i=M$(n,e,t,s,o,r);else if(n.rank===4)i=L$(n,e,t,s,o,r);else throw new xe(`batchNormalization is not implemented for array of rank ${n.rank} yet`);return i}function xA(n,e,t,s,o=.001){return V(()=>{const r=Nd(n,s),i=r.mean,a=r.variance;return[Qr(n,i,a,t,e,o),i,a]})}function yA(n,e,t,s,o=.001){return V(()=>{const r=Nd(n,s),i=r.mean,a=r.variance,c=[];for(const f of Tn(0,n.rank))s.indexOf(f)!==-1?c.push(1):c.push(n.shape[f]);const l=_(i,c),u=_(a,c),h=e==null?null:_(e,c),d=t==null?null:_(t,c);return[Qr(n,l,u,d,h,o),i,a]})}function bA(n,e,t,s,o=.001){return Re(s.slice().sort(),Tn(0,n.rank-1))?xA(n,e,t,s,o):yA(n,e,t,s,o)}class b0 extends Ce{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=qe(e.betaInitializer||"zeros"),this.gammaInitializer=qe(e.gammaInitializer||"ones"),this.movingMeanInitializer=qe(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=qe(e.movingVarianceInitializer||"ones"),this.betaConstraint=ht(e.betaConstraint),this.gammaConstraint=ht(e.gammaConstraint),this.betaRegularizer=je(e.betaRegularizer),this.gammaRegularizer=je(e.gammaRegularizer)}build(e){e=Te(e);const t=this.axis>=0?this.axis:this.axis+e.length,s=e[t];if(s==null)throw new D(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new lt({ndim:e.length,axes:{[t]:s}})];const o=[s];this.scale&&(this.gamma=this.addWeight("gamma",o,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",o,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",o,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",o,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return V(()=>{const s=t.training==null?!1:t.training,o=fe(e),r=o.shape,i=r.length,a=Tn(0,i),c=this.axis>=0?this.axis:this.axis+i;a.splice(c,1);const l=go(1,i);l[c]=r[c];const u=a.slice();u.sort();const h=!Re(u,Tn(0,i).slice(0,i-1)),d=()=>{if(h){const y=_(this.movingMean.read(),l),w=_(this.movingVariance.read(),l),b=this.center?_(this.beta.read(),l):null,v=this.scale?_(this.gamma.read(),l):null;return Qr(o,y,w,b,v,this.epsilon)}else return Qr(o,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!s)return d();const[p,f,m]=bA(o,this.gamma.read(),this.beta.read(),a,this.epsilon),g=(y,w,b)=>{V(()=>{const v=1-b,I=y.read(),T=A(pe(I,w),v);y.write(pe(I,T))})};return(()=>{g(this.movingMean,f,this.momentum),g(this.movingVariance,m,this.momentum)})(),p})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Xe(this.betaInitializer),gammaInitializer:Xe(this.gammaInitializer),movingMeanInitializer:Xe(this.movingMeanInitializer),movingVarianceInitializer:Xe(this.movingVarianceInitializer),betaRegularizer:Le(this.betaRegularizer),gammaRegularizer:Le(this.gammaRegularizer),betaConstraint:ut(this.betaConstraint),gammaConstraint:ut(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}b0.className="BatchNormalization";J(b0);class w0 extends Ce{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=qe(e.betaInitializer||"zeros"),this.gammaInitializer=qe(e.gammaInitializer||"ones"),this.betaRegularizer=je(e.betaRegularizer),this.gammaRegularizer=je(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=Te(e);const t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(const r of this.axis)if(r<0||r>=t)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==Is(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(r=>e[r]),o=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,o):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,o):this.beta=null,this.built=!0}call(e,t){const s=fe(e),o=s.shape,r=o.length;return V(()=>{let{mean:a,variance:c}=Nd(s,this.axis,!0);const l=go(1,r);for(const m of this.axis)l[m]=o[m];const u=m=>m!=null&&m.shape.length!==r?_(m,l):m;let h=this.scale?u(this.gamma.read()):null,d=this.center?u(this.beta.read()):null;const p=[],f=[];for(let m=0;m<r;++m)this.axis.indexOf(m)!==-1?(p.push(o[m]),f.push(1)):(p.push(1),f.push(o[m]));return a=In(a,p),c=In(c,p),h!=null&&(h=In(h,f)),d!=null&&(d=In(d,f)),Qr(s,a,c,d,h,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Xe(this.betaInitializer),gammaInitializer:Xe(this.gammaInitializer),betaRegularizer:Le(this.betaRegularizer),gammaRegularizer:Le(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}w0.className="LayerNormalization";J(w0);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function wA(n,e,t){return V(()=>{if(n.rank!==4)throw new D(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new D("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=Nn()),t!=="channelsLast"&&t!=="channelsFirst")throw new D(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return t==="channelsFirst"?s=[[0,0],[0,0],e[0],e[1]]:s=[[0,0],e[0],e[1],[0,0]],Ed(n,s)})}class v0 extends Ce{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?Nn():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new D(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,s;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],s=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new D(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new D(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);s=e.padding[1]}this.padding=[t,s]}this.inputSpec=[new lt({ndim:4})]}computeOutputShape(e){e=Te(e);let t,s;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?s=e[3]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],e[1],t,s]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?s=e[2]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],t,s,e[3]])}call(e,t){return V(()=>wA(fe(e),this.padding,this.dataFormat))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}v0.className="ZeroPadding2D";J(v0);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Yl(n,e,t,s,o,r){return V(()=>{nt(o),zy(r),sn(s),t==null&&(t=[1,1]),s==null&&(s="valid"),o==null&&(o=Nn()),r==null&&(r="max"),n=Op(n,o);let i;const a=s==="same"?"same":"valid";return r==="max"?i=Td(n,e,t,a):i=xd(n,e,t,a),o==="channelsFirst"&&(i=$e(i,[0,3,1,2])),i})}function C0(n,e,t,s,o,r){return V(()=>{nt(o),zy(r),sn(s),t==null&&(t=[1,1,1]),s==null&&(s="valid"),o==null&&(o=Nn()),r==null&&(r="max"),n=Vb(n,o);let i;const a=s==="same"?"same":"valid";return r==="max"?i=vk(n,e,t,a):i=I$(n,e,t,a),o==="channelsFirst"&&(i=$e(i,[0,4,1,2,3])),i})}class I0 extends Ce{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new D(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(gt(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new D(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);gt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,sn(this.padding),this.inputSpec=[new lt({ndim:3})]}computeOutputShape(e){e=Te(e);const t=kn(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return V(()=>{this.invokeCallHook(e,t),e=da(fe(e),2);const s=this.poolingFunction(fe(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return ia(s,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class $0 extends I0{constructor(e){super(e)}poolingFunction(e,t,s,o,r){return nt(r),sn(o),Yl(e,t,s,o,r,"max")}}$0.className="MaxPooling1D";J($0);class S0 extends I0{constructor(e){super(e)}poolingFunction(e,t,s,o,r){return nt(r),sn(o),Yl(e,t,s,o,r,"avg")}}S0.className="AveragePooling1D";J(S0);class k0 extends Ce{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new D(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];gt(this.poolSize,"poolSize"),gt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,nt(this.dataFormat),sn(this.padding),this.inputSpec=[new lt({ndim:4})]}computeOutputShape(e){e=Te(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=kn(t,this.poolSize[0],this.padding,this.strides[0]),s=kn(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s]:[e[0],t,s,e[3]]}call(e,t){return V(()=>(this.invokeCallHook(e,t),this.poolingFunction(fe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class T0 extends k0{constructor(e){super(e)}poolingFunction(e,t,s,o,r){return nt(r),sn(o),Yl(e,t,s,o,r,"max")}}T0.className="MaxPooling2D";J(T0);class N0 extends k0{constructor(e){super(e)}poolingFunction(e,t,s,o,r){return nt(r),sn(o),Yl(e,t,s,o,r,"avg")}}N0.className="AveragePooling2D";J(N0);class E0 extends Ce{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new D(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];gt(this.poolSize,"poolSize"),gt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,nt(this.dataFormat),sn(this.padding),this.inputSpec=[new lt({ndim:5})]}computeOutputShape(e){e=Te(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],o=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=kn(t,this.poolSize[0],this.padding,this.strides[0]),s=kn(s,this.poolSize[1],this.padding,this.strides[1]),o=kn(o,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s,o]:[e[0],t,s,o,e[4]]}call(e,t){return V(()=>(this.invokeCallHook(e,t),this.poolingFunction(fe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class R0 extends E0{constructor(e){super(e)}poolingFunction(e,t,s,o,r){return nt(r),sn(o),C0(e,t,s,o,r,"max")}}R0.className="MaxPooling3D";J(R0);class D0 extends E0{constructor(e){super(e)}poolingFunction(e,t,s,o,r){return nt(r),sn(o),C0(e,t,s,o,r,"avg")}}D0.className="AveragePooling3D";J(D0);class A0 extends Ce{constructor(e){super(e),this.inputSpec=[new lt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new xe}}class F0 extends A0{constructor(e){super(e||{})}call(e,t){return V(()=>{const s=fe(e);return ot(s,1)})}}F0.className="GlobalAveragePooling1D";J(F0);class O0 extends A0{constructor(e){super(e||{})}call(e,t){return V(()=>{const s=fe(e);return Sn(s,1)})}}O0.className="GlobalMaxPooling1D";J(O0);class M0 extends Ce{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,nt(this.dataFormat),this.inputSpec=[new lt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new xe}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class _0 extends M0{call(e,t){return V(()=>{const s=fe(e);return this.dataFormat==="channelsLast"?ot(s,[1,2]):ot(s,[2,3])})}}_0.className="GlobalAveragePooling2D";J(_0);class L0 extends M0{call(e,t){return V(()=>{const s=fe(e);return this.dataFormat==="channelsLast"?Sn(s,[1,2]):Sn(s,[2,3])})}}L0.className="GlobalMaxPooling2D";J(L0);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class P0 extends Ce{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,s={}){const o=t.layer,r=Wn(o,s);delete t.layer;const i={layer:r};return Object.assign(i,t),new e(i)}}class z0 extends P0{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=Te(e),e.length<3)throw new D(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=Te(e);const t=[e[0]].concat(e.slice(2)),s=this.layer.computeOutputShape(t),o=e[1];return[s[0],o].concat(s.slice(1))}call(e,t){return V(()=>(e=fe(e),Yb((i,a)=>[fe(this.layer.call(i,t)),[]],e,[],!1,null,null,!1,!0)[1]))}}z0.className="TimeDistributed";J(z0);function vA(n){$o(zR,"BidirectionalMergeMode",n)}const CA="concat";class B0 extends P0{constructor(e){super(e);const t=e.layer.getConfig(),s={};s.className=e.layer.getClassName(),s.config=t,this.forwardLayer=Wn(s),t.goBackwards=t.goBackwards!==!0;const o={};if(o.className=e.layer.getClassName(),o.config=t,this.backwardLayer=Wn(o),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?CA:e.mergeMode,vA(this.mergeMode),e.weights)throw new xe("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,s=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,s)),this.backwardLayer.setWeights(e.slice(s))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let s,o,r;return this.returnState&&(r=t.slice(1)),s=t[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,o=[s]):this.mergeMode==null?o=[s,s.slice()]:o=[s],this.returnState?this.mergeMode==null?o.concat(r).concat(r.slice()):[s].concat(r).concat(r.slice()):Pt(o)}apply(e,t){let s=t==null?null:t.initialState,o=t==null?null:t.constants;t==null&&(t={});const r=Xb(e,s,o,this.numConstants);if(e=r.inputs,s=r.initialState,o=r.constants,Array.isArray(e)&&(s=e.slice(1),e=e[0]),(s==null||s.length===0)&&o==null)return super.apply(e,t);const i=[],a=[];if(s!=null){const l=s.length;if(l%2>0)throw new D("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=s,i.push(...s);const u=s.map(h=>new lt({shape:h.shape}));this.forwardLayer.stateSpec=u.slice(0,l/2),this.backwardLayer.stateSpec=u.slice(l/2),a.push(...u)}if(o!=null)throw new xe("Support for constants in Bidirectional layers is not implemented yet.");const c=i[0]instanceof qn;for(const l of i)if(l instanceof qn!==c)throw new D("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(c){const l=[e].concat(i),u=this.inputSpec.concat(a),h=this.inputSpec;this.inputSpec=u;const d=super.apply(l,t);return this.inputSpec=h,d}else return super.apply(e,t)}call(e,t){return V(()=>{const s=t.initialState;let o,r;if(s==null)o=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{const c=s.slice(0,s.length/2),l=s.slice(s.length/2);o=this.forwardLayer.call(e,Object.assign(t,{initialState:c})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:l}))}let i;this.returnState&&(Array.isArray(o)&&(i=o.slice(1).concat(r.slice(1))),o=o[0],r=r[0]),this.returnSequences&&(r=fo(r,1));let a;return this.mergeMode==="concat"?a=vp([o,r]):this.mergeMode==="sum"?a=Z(o,r):this.mergeMode==="ave"?a=A(.5,Z(o,r)):this.mergeMode==="mul"?a=A(o,r):this.mergeMode==null&&(a=[o,r]),this.returnState?this.mergeMode==null?a.concat(i):[a].concat(i):a})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){no(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),no(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[t,t]:s=t:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const r=this.forwardLayer.states.map(i=>null);return Array.isArray(s)?s.concat(r).concat(r):[s].concat(r).concat(r)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const s=Wn(t.layer);if(delete t.layer,t.numConstants!=null)throw new xe("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const o=t;return o.layer=s,new e(o)}}B0.className="Bidirectional";J(B0);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class V0 extends Ce{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return V(()=>(e=fe(e),e.dtype!=="float32"&&(e=Bn(e,"float32")),Z(A(e,this.scale),this.offset)))}}V0.className="Rescaling";J(V0);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:IA,cropAndResize:$A}=Qn;class W0 extends Ce{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,s,o,r,i,a,c){return V(()=>{let l,u=!1;const h=t/i,d=s/a,p=(o+t)/i,f=(r+s)/a,m=[h,d,p,f],g=[];e.rank===3?(u=!0,l=ts([e])):l=e;for(let v=0;v<l.shape[0];v++)g.push(m);const x=Wr(g,[g.length,4]),y=Yr(0,g.length,1,"int32"),b=$A(l,x,y,[o,r],"nearest");return Bn(u?fe(mo(b)):b,c)})}upsize(e,t,s,o){return V(()=>{const r=IA(e,[t,s]);return Bn(r,o)})}call(e,t){return V(()=>{const s=fe(e),o=s.dtype,r=s.shape,i=r[r.length-3],a=r[r.length-2];let c=0;i!==this.height&&(c=Math.floor((i-this.height)/2));let l=0;return a!==this.width&&(l=Math.floor((a-this.width)/2),l===0&&(l=1)),c>=0&&l>=0?this.centerCrop(s,c,l,this.height,this.width,i,a,o):this.upsize(e,this.height,this.width,o)})}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=Te(e);const t=e.length-3,s=e.length-2;return e[t]=this.height,e[s]=this.width,e}}W0.className="CenterCrop";J(W0);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function SA(n,e,t,s){let o=fe(n);if(o.dtype!=="int32"&&(o=Bn(o,"int32")),e==="int")return o;const r=o.shape;if(o.rank===0&&(o=Lt(o,-1)),e==="oneHot"&&o.shape[o.shape.length-1]!==1&&(o=Lt(o,-1)),o.rank>2)throw new D(`When outputMode is not int, maximum output rank is 2 Received outputMode ${e} and input shape ${r} which would result in output rank ${o.rank}.`);const i=["multiHot","oneHot"].includes(e),a=o;let c;if(typeof s<"u"&&e==="count"?c=Rf(a,s,t,i):c=Rf(a,[],t,i),e!=="tfIdf")return c;if(s)return A(c,s);throw new D("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class U0 extends Ce{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return e=Te(e),e==null?[this.numTokens]:this.outputMode==="oneHot"&&e[e.length-1]!==1?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return V(()=>{e=fe(e),e.dtype!=="int32"&&(e=Bn(e,"int32"));let s;if(typeof t.countWeights<"u"){if(this.outputMode!=="count")throw new D(`countWeights is not used when outputMode !== count.
              Received countWeights=${t.countWeights}`);s=fe(t.countWeights)}const o=Sn(e),r=sc(e),i=nn(this.numTokens,o).bufferSync().get(0),a=vo(r,0).bufferSync().get(0);if(!(i&&a))throw new D(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return SA(e,this.outputMode,this.numTokens,s)})}}U0.className="CategoryEncoding";J(U0);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const kA=["bilinear","nearest"],wm=new Set(kA);class G0 extends Ce{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation)if(wm.has(e.interpolation))this.interpolation=e.interpolation;else throw new D(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){e=Te(e);const t=e[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return V(()=>{const s=[this.height,this.width];if(this.interpolation==="bilinear")return Qn.resizeBilinear(e,s,!this.cropToAspectRatio);if(this.interpolation==="nearest")return Qn.resizeNearestNeighbor(e,s,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...wm]} are supported`)})}}G0.className="Resizing";J(G0);/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class H0{constructor(e){this.seed=e}next(){if(this.seed!==void 0)return this.seed++}}H0.className="RandomSeed";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class q0 extends Ce{constructor(e){super(e),this.randomGenerator=new H0(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}q0.className="BaseRandomLayer";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const TA=["bilinear","nearest"],vm=new Set(TA);class j0 extends q0{constructor(e){super(e);const{factor:t,interpolation:s="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new D(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new D(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new D(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(s)if(vm.has(s))this.interpolation=s;else throw new D(`Invalid interpolation parameter: ${s} is not implemented`)}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=Te(e);const t=e[2];return[this.imgHeight,-1,t]}call(e,t){return V(()=>{const s=fe(e);this.imgHeight=s.shape[s.shape.length-3];const o=s.shape[s.shape.length-2];this.widthFactor=ra([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let r=this.widthFactor.dataSync()[0]*o;r=Math.round(r);const i=[this.imgHeight,r];switch(this.interpolation){case"bilinear":return Qn.resizeBilinear(e,i);case"nearest":return Qn.resizeNearestNeighbor(e,i);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...vm]} are supported`)}})}}j0.className="RandomWidth";J(j0);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ar(n){return new Bp(n)}function Aa(n){return new Xl(n)}function Cm(n){return new Lp(n)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NA=W();NA.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var Im;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(Im||(Im={}));var $m;(function(n){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})($m||($m={}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var Sm;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(Sm||(Sm={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function re(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&k(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EA=Ux;class Jl extends bh{nextDataId(){return Jl.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new gg(this,Dn())}write(e,t,s){this.firstUse&&(this.firstUse=!1,W().get("IS_NODE")&&Zt(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const o={id:this.nextDataId()};return this.data.set(o,{values:e,dtype:s,refCount:1}),o}makeTensorInfo(e,t,s){let o;if(t==="string"&&s!=null&&s.length>0&&ri(s[0])){const r=s.map(i=>Cs(i));o=this.write(r,e,t)}else o=this.write(s,e,t);return{dataId:o,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){const t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){const t=this.data.get(e);t.refCount--}}move(e,t,s,o,r){this.data.set(e,{values:t,dtype:o,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:s}=this.data.get(e);if(t==="complex64"){const o=this.readSync(s.real.dataId),r=this.readSync(s.imag.dataId);return ns(o,r)}return SC(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(o=>ks(o));return we(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return we(e.shape,e.dtype,t)}makeOutput(e,t,s){return Dn().makeTensorFromTensorInfo(this.makeTensorInfo(t,s,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(e);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=_t();return e(),{kernelMs:_t()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){re([e],"where");const t=this.readSync(e.dataId);return EA(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Jl.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K0(n){const e=new Float32Array(n.length);for(let t=0;t<n.length;++t)e[t]=Math.abs(n[t]);return e}const RA=n=>{const{x:e}=n.inputs,t=n.backend;re(e,"abs");let s=new Float32Array(j(e.shape));const o=t.data.get(e.dataId).values;return s=K0(o),t.makeOutput(s,e.shape,e.dtype)},DA={kernelName:Ec,backendName:"cpu",kernelFunc:RA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function st(n){return(e,t,s,o,r)=>{const i=me(e,t),a=i.length,c=ce(i),l=j(i),u=$t(r,l),h=e.length,d=t.length,p=ce(e),f=ce(t),m=Zo(e,i),g=Zo(t,i);if(m.length+g.length===0)for(let x=0;x<u.length;++x)u[x]=n(s[x%s.length],o[x%o.length]);else for(let x=0;x<u.length;++x){const y=ur(x,a,c),w=y.slice(-h);m.forEach(T=>w[T]=0);const b=Ln(w,h,p),v=y.slice(-d);g.forEach(T=>v[T]=0);const I=Ln(v,d,f);u[x]=n(s[b],o[I])}return[u,i]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ht(n){const{inputs:e,backend:t}=n,{real:s,imag:o}=e,r=t.data.get(s.dataId).values,i=t.data.get(o.dataId).values,a=t.makeTensorInfo(s.shape,"complex64"),c=t.data.get(a.dataId);return c.complexTensorInfos={real:t.makeTensorInfo(s.shape,"float32",r),imag:t.makeTensorInfo(o.shape,"float32",i)},a}const AA={kernelName:Fh,backendName:"cpu",kernelFunc:Ht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yc(n,e,t="float32"){if(t==="complex64"){const o=yc(n,e,"float32"),r=yc(n,e,"float32");return Ht({inputs:{real:o,imag:r},backend:n})}const s=St(j(e),t);return n.makeTensorInfo(e,t,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jn(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const FA={kernelName:ki,backendName:"cpu",kernelFunc:jn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xo(n){const{inputs:e,backend:t}=n,{input:s}=e,o=t.data.get(s.dataId).complexTensorInfos.real,r=t.data.get(o.dataId).values;return t.makeTensorInfo(o.shape,o.dtype,r)}const OA={kernelName:sd,backendName:"cpu",kernelFunc:xo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X0(n,e,t,s){if(s==="int32"){const o=Int32Array.from(n);return[e,"int32",o]}if(s==="bool"){const o=wo([0],t),[r,i]=st((a,c)=>a!==c?1:0)(e,[],n,o,"bool");return[i,"bool",r]}throw new Error(`Error in Cast: failed to cast ${t} to ${s}`)}function Ds(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{dtype:r}=s;if(r==="complex64"){if(o.dtype==="complex64")return jn({inputs:{x:o},backend:t});const u=yc(t,o.shape,o.dtype),h=Ds({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),d=Ht({inputs:{real:h,imag:u},backend:t});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(h),d}if(o.dtype==="complex64"){const u=xo({inputs:{input:o},backend:t}),h=Ds({inputs:{x:u},backend:t,attrs:{dtype:r}});return t.disposeIntermediateTensorInfo(u),h}if(!yg(o.dtype,r)){const u=jn({inputs:{x:o},backend:t});return{dataId:u.dataId,shape:u.shape,dtype:r}}const i=t.data.get(o.dataId).values,[a,c,l]=X0(i,o.shape,o.dtype,r);return t.makeTensorInfo(a,c,l)}const MA={kernelName:pi,backendName:"cpu",kernelFunc:Ds};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pt(n,e,t,s){return t==null?({inputs:o,backend:r})=>{const{a:i,b:a}=o,c=r;re([i,a],n);const l=c.data.get(i.dataId).values,u=c.data.get(a.dataId).values,h=i.dtype==="string"?ss(l):l,d=i.dtype==="string"?ss(u):u,p=s||i.dtype,[f,m]=e(i.shape,a.shape,h,d,p);return c.makeTensorInfo(m,p,f)}:({inputs:o,backend:r})=>{const{a:i,b:a}=o,c=r;if(i.dtype==="complex64"||a.dtype==="complex64"){const l=Ds({inputs:{x:i},backend:c,attrs:{dtype:"complex64"}}),u=c.data.get(l.dataId),h=u.complexTensorInfos.real,d=u.complexTensorInfos.imag,p=c.data.get(h.dataId).values,f=c.data.get(d.dataId).values,m=Ds({inputs:{x:a},backend:c,attrs:{dtype:"complex64"}}),g=c.data.get(m.dataId),x=g.complexTensorInfos.real,y=g.complexTensorInfos.imag,w=c.data.get(x.dataId).values,b=c.data.get(y.dataId).values,[v,I,T]=t(i.shape,a.shape,p,f,w,b),N=c.makeTensorInfo(T,"float32",v),$=c.makeTensorInfo(T,"float32",I),S=Ht({inputs:{real:N,imag:$},backend:c});return c.disposeIntermediateTensorInfo(l),c.disposeIntermediateTensorInfo(m),c.disposeIntermediateTensorInfo(N),c.disposeIntermediateTensorInfo($),S}else{const l=c.data.get(i.dataId).values,u=c.data.get(a.dataId).values,h=s||i.dtype,[d,p]=e(i.shape,a.shape,l,u,h);return c.makeTensorInfo(p,h,d)}}}function Vp(n){return(e,t,s,o,r,i)=>{const a=me(e,t),c=j(a),l=a.length,u=ce(a),h=$t("float32",c),d=$t("float32",c),p=Zo(e,a),f=Zo(t,a),m=ns(s,o),g=ns(r,i),x=e.length,y=ce(e),w=t.length,b=ce(t);if(p.length+f.length===0)for(let v=0;v<h.length;v++){const I=v%m.length,T=v%g.length,N=n(m[I*2],m[I*2+1],g[T*2],g[T*2+1]);h[v]=N.real,d[v]=N.imag}else for(let v=0;v<h.length;v++){const I=ur(v,l,u),T=I.slice(-x);p.forEach(R=>T[R]=0);const N=Ln(T,x,y),$=I.slice(-w);f.forEach(R=>$[R]=0);const S=Ln($,w,b),C=n(m[N*2],m[N*2+1],g[S*2],g[S*2+1]);h[v]=C.real,d[v]=C.imag}return[h,d,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y0=st(((n,e)=>n+e)),_A=Vp(((n,e,t,s)=>({real:n+t,imag:e+s}))),nr=pt(hr,Y0,_A),LA={kernelName:hr,backendName:"cpu",kernelFunc:nr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wp(n,e,t,s,o){const r=j(s),i=St(o,t);for(let a=0;a<n.length;a++){const c=n[a];if(c<0)throw new Error("Input x must be non-negative!");c>=o||(r>0?i[c]+=e[a]:i[c]+=1)}return i}function J0(n,e,t,s=!1){const o=n.shape[0],r=n.shape[1],i=we([o,t],e.dtype);for(let a=0;a<o;a++)for(let c=0;c<r;c++){const l=n.get(a,c);if(l<0)throw new Error("Input x must be non-negative!");l>=t||(s?i.set(1,a,l):e.size>0?i.set(i.get(a,l)+e.get(a,c),a,l):i.set(i.get(a,l)+1,a,l))}return i}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z0=st(((n,e)=>n&e)),PA=pt(Ah,Z0),zA={kernelName:Ah,backendName:"cpu",kernelFunc:PA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kn(n){return(e,t,s)=>{const o=Ze(t,e.length);for(let r=0;r<e.length;++r)o[r]=n(e[r],s);return o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fe(n,e,t){const s=Kn(e);return Vs(n,s,t)}function Vs(n,e,t){return({inputs:s,attrs:o,backend:r})=>{const{x:i}=s;re(i,n);const a=r,c=a.data.get(i.dataId).values;let l;if(i.dtype==="string"){if(!Array.isArray(c))throw new Error("String tensor's value was not an instance of Array");l=ss(c)}else l=c;const u=t||i.dtype,h=e(l,u,o);return a.makeTensorInfo(i.shape,u,h)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q0=Kn(n=>Math.ceil(n)),BA=Vs(fi,Q0),VA={kernelName:fi,backendName:"cpu",kernelFunc:BA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e1(n,e,t,s){const o=Ze(t,j(e));if(s&&t!=="string"){let r=0;n.forEach(i=>{const a=j(i.shape);o.set(i.vals,r),r+=a})}else{let r=0;n.forEach(i=>{const a=t==="string"?ss(i.vals):i.vals;let c=0;for(let l=0;l<i.shape[0];++l){const u=l*e[1]+r;for(let h=0;h<i.shape[1];++h)o[u+h]=a[c++]}r+=i.shape[1]})}return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t1=st((n,e)=>n===e?1:0),n1=pt(Gc,t1,null,"bool"),WA={kernelName:Gc,backendName:"cpu",kernelFunc:n1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s1=Kn(n=>Math.exp(n)),o1=Vs(vi,s1,"float32"),UA={kernelName:vi,backendName:"cpu",kernelFunc:o1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r1=Kn(n=>Math.expm1(n)),GA=Vs(Ci,r1),HA={kernelName:Ci,backendName:"cpu",kernelFunc:GA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i1=Kn(n=>Math.floor(n)),qA=Vs(Ii,i1),jA={kernelName:Ii,backendName:"cpu",kernelFunc:qA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a1=st((n,e)=>Math.floor(n/e)),KA=pt($i,a1,null,"int32"),XA={kernelName:$i,backendName:"cpu",kernelFunc:KA};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c1(n,e,t,s,o,r,i,a,c){const l=we([s,r],t);for(let u=0;u<s;u++){const h=[];let d=0;for(let p=0;p<o;p++){const f=n[u*o+p];d+=f*i[p],h.push(f)}if(d<0||d>=c/r)throw new Error(`Invalid indices: ${h} does not index into ${a}`);for(let p=0;p<r;p++)l.values[u*r+p]=e.get(...e.indexToLoc(d*r+p))}return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l1(n,e,t){const s=we(t,n.dtype);for(let o=0;o<s.size;++o){const i=s.indexToLoc(o).slice(),a=i[0],c=i[2],l=e.locToIndex([a,c]);i[2]=e.values[l];const u=n.locToIndex(i);0<=u&&u<n.values.length&&(s.values[o]=n.values[u])}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u1=st((n,e)=>n>e?1:0),YA=pt(Kc,u1,null,"bool"),JA={kernelName:Kc,backendName:"cpu",kernelFunc:YA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h1=st((n,e)=>n>=e?1:0),ZA=pt(Si,h1,null,"bool"),QA={kernelName:Si,backendName:"cpu",kernelFunc:ZA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d1=st((n,e)=>n<e?1:0),eF=pt(Yc,d1,null,"bool"),tF={kernelName:Yc,backendName:"cpu",kernelFunc:eF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p1=st((n,e)=>n<=e?1:0),nF=pt(Jc,p1,null,"bool"),sF={kernelName:Jc,backendName:"cpu",kernelFunc:nF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f1(n,e,t){const s=(e-n)/(t-1),o=St(t,"float32");o[0]=n;for(let r=1;r<o.length;r++)o[r]=o[r-1]+s;return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m1=Kn(n=>Math.log(n)),oF=Vs(Ri,m1),rF={kernelName:Ri,backendName:"cpu",kernelFunc:oF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g1(n,e,t,s){const o=$t(s,j(t));for(let r=0;r<o.length;++r){const i=r*e;let a=n[i];for(let c=0;c<e;++c){const l=n[i+c];(Number.isNaN(l)||l>a)&&(a=l)}o[r]=a}return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x1=st(((n,e)=>Math.max(n,e))),iF=pt(Ai,x1),aF={kernelName:Ai,backendName:"cpu",kernelFunc:iF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y1=st(((n,e)=>Math.min(n,e))),cF=pt(Fi,y1),lF={kernelName:Fi,backendName:"cpu",kernelFunc:cF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Up=st(((n,e)=>n*e)),uF=Vp(((n,e,t,s)=>({real:n*t-e*s,imag:n*s+e*t}))),Zl=pt(Mi,Up,uF),hF={kernelName:Mi,backendName:"cpu",kernelFunc:Zl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b1(n,e,t){const s=Fs(-1,t);return Up([],e,s,n,t)}function dF(n){const{inputs:e,backend:t}=n,{x:s}=e;re(s,"neg");const o=t.data.get(s.dataId).values,[r,i]=b1(o,s.shape,s.dtype);return t.makeTensorInfo(i,s.dtype,r)}const pF={kernelName:cl,backendName:"cpu",kernelFunc:dF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w1=st(((n,e)=>n!==e?1:0)),fF=pt(ll,w1,null,"bool"),mF={kernelName:ll,backendName:"cpu",kernelFunc:fF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gp(n,e,t,s,o){const r=e.length,i=j(e),a=ce(e),c=ce(o),l=$t(t,j(o));for(let u=0;u<i;++u){const h=ur(u,r,a),d=new Array(h.length);for(let f=0;f<d.length;f++)d[f]=h[s[f]];const p=Ln(d,r,c);l[p]=n[u]}return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vt(n){const{inputs:e,attrs:t,backend:s}=n,{x:o}=e,{perm:r}=t;re(o,"transpose");const i=o.shape.length,a=new Array(i);for(let h=0;h<a.length;h++)a[h]=o.shape[r[h]];const c=s.data.get(o.dataId).values,l=Gp(c,o.shape,o.dtype,r,a);return{dataId:s.write(l,a,o.dtype),shape:a,dtype:o.dtype}}const gF={kernelName:Uo,backendName:"cpu",kernelFunc:Vt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v1(n,e,t,s){const[o,r]=xt(n,s),i=Kt(e,"int32"),a=St(j(o),i),c=j(r);for(let l=0;l<a.length;++l){const u=l*c;let h=1;for(let d=0;d<c;++d)h*=t[u+d];a[l]=h}return{outVals:a,outShape:o,outDtype:i}}function xF(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,keepDims:i}=s;re(o,"prod");const a=o.shape.length,c=ve(r,o.shape),l=Ye(c,a);let u=c,h=o;const d=[];l!=null&&(h=Vt({inputs:{x:o},backend:t,attrs:{perm:l}}),d.push(h),u=tt(u.length,a));const p=t.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=v1(h.shape,h.dtype,p,u);let x=m;return i&&(x=rt(m,c)),d.forEach(y=>t.disposeIntermediateTensorInfo(y)),t.makeTensorInfo(x,g,f)}const yF={kernelName:ml,backendName:"cpu",kernelFunc:xF};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bF(n,e,t){n.forEach((s,o)=>{if(s<0||s>=t){const r=ur(o,e.length,ce(e)).join(",");throw new Error(`indices[${r}] = ${s} is not in [0, ${t})`)}})}function wF(n,e){for(let t=0;t<n.length;++t){const s=n[t],o=t===n.length-1?e:n[t+1].length;if(s.length===0)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>o)throw new Error("Ragged splits must not point past values");for(let r=1;r<s.length;++r)if(s[r-1]>s[r])throw new Error("Ragged splits must be sorted in ascending order")}}function vF(n,e,t,s){const o=[];let r=0;const i=e.length-1+t.length,a=new Array(i).fill(null).map(()=>[0]);wF(t,s);let c=1;for(let l=0;l<e.length-1;++l){c*=e[l];const u=e[l+1];for(let h=1;h<c+1;++h)a[l].push(h*u)}for(let l=0;l<n.length;++l){let u=n[l],h=n[l]+1;for(let d=0;d<t.length;++d){const p=t[d],f=d+e.length-1;if(f>=0){const m=a[f],g=m[m.length-1]-p[u];for(let x=u;x<h;++x)a[f].push(p[x+1]+g)}u=p[u],h=p[h]}h!==u&&(o.push([u,h]),r+=h-u)}return{outSplits:a,valueSlices:o,numValues:r}}function CF(n){const e=[];for(let t=0;t<n.length;++t){const s=n[t].length,o=Ze("int32",s);e.push(o),n[t].forEach((r,i)=>o[i]=r)}return e}function km(n,e){const t=n.slice(0,e);for(;t.length<e;)t.push(1);for(let s=e;s<n.length;s++)t[e-1]*=n[s];return t}function IF(n,e,t,s,o,r){const i=km(e,2)[1],a=km(r,2)[1];let c=0;for(const l of t)for(let u=l[0];u<l[1];++u){for(let h=0;h<s;++h)o[c*a+h]=n[u*i+h];++c}}function $F(n,e,t,s,o){const r=e.slice();r[0]=o;const i=Ze(t,j(r)),a=n.length,c=a===0?0:a/e[0];return IF(n,e,s,c,i,r),[i,r]}function C1(n,e,t,s,o,r,i,a){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const c=e[0][0]-1;if(bF(r,i,c),s.length===0)throw new Error("params.rank must be nonzero");const l=s[0],{outSplits:u,valueSlices:h,numValues:d}=vF(r,i,n,l),p=CF(u),f=$F(t,s,o,h,d);return[p,f[0],f[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tm=2147483647;function I1(n,e,t,s,o,r,i){if(e.length>1)throw new Error("starts must be a scalar or vector");if(o.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const a=e.length===0,c=o.length===0,l=i.length===0,u=[];a||u.push(e[0]),c||u.push(o[0]),l||u.push(i[0]);for(let g=1;g<u.length;++g)if(u[g]!==u[g-1])throw new Error("starts, limits, and deltas must have the same shape");const h=u.length===0?1:u[0],d=Ze("int32",h+1);d[0]=0;for(let g=0;g<h;++g){const x=a?n[0]:n[g],y=c?s[0]:s[g],w=l?r[0]:r[g];if(w===0)throw new Error("Requires delta != 0");let b;if(w>0&&y<x||w<0&&y>x)b=0;else if(b=Math.ceil(Math.abs((y-x)/w)),b>Tm)throw new Error(`Requires ((limit - start) / delta) <= ${Tm}`);d[g+1]=d[g]+b}const p=d[h],f=Ze(t,p);let m=0;for(let g=0;g<h;++g){const x=d[g+1]-d[g];let y=a?n[0]:n[g];const w=l?r[0]:r[g];for(let b=0;b<x;++b)f[m++]=y,y+=w}return[d,f]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var rn=Cn;class bc{constructor(e,t,s,o,r,i,a,c,l,u){this.shape=e,this.shapeShape=t,this.values=s,this.valuesShape=o,this.valuesDType=r,this.defaultValue=i,this.defaultValueShape=a,this.rowPartitionValues=c,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=uy(u),this.raggedRank=hy(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===rn.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===rn.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case rn.VALUE_ROWIDS:return bc.getMaxWidthValueRowID(t);case rn.ROW_SPLITS:return bc.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${rn[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(t===0||t===1)return 0;let s=0;for(let o=0;o<t-1;++o){const r=e[o+1]-e[o];r>s&&(s=r)}return s}static getMaxWidthValueRowID(e){const t=e.length;if(t===0)return 0;let s=0,o=e[0],r=0;for(let i=1;i<t;++i){const a=e[i];a!==o&&(o=a,r=Math.max(i-s,r),s=i)}return Math.max(t-s,r)}tensorShapeFromTensor(e,t,s=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return Em(e,s)}calculateOutputSize(e){const t=this.valuesShape,s=this.defaultValueShape;dy(s,t);const o=this.tensorShapeFromTensor(this.shape,this.shapeShape),i=ly(this.raggedRank,o,t);i[0]<0&&(i[0]=e);for(let a=1;a<=this.raggedRank;++a)i[a]<0&&(i[a]=this.getMaxWidth(a));return i}calculateFirstParentOutputIndex(e,t,s){const o=Math.min(e,s),r=[];let i=0;for(let a=0;a<o;++a,i+=t)r.push(i);for(let a=o;a<e;++a)r.push(-1);return k(r.length===e,()=>"Final length of result must be equal to firstDimension."),r}calculateOutputIndexRowSplit(e,t,s,o){const r=e.length,i=[];for(let a=0;a<r-1;++a){const c=e[a+1]-e[a];let l=Math.min(o,c),u=t[a];u===-1&&(l=0);for(let h=0;h<l;++h)i.push(u),u+=s;for(let h=0;h<c-l;++h)i.push(-1)}if(r>0&&i.length!==e[r-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(e,t,s,o){const r=e.length,i=[];if(r===0)return[];let a=0,c=e[0];if(c>=t.length)throw new Error(`Got currentValueRowId=${c}, which is not less than ${t.length}`);let l=t[c];i.push(l);for(let u=1;u<r;++u){const h=e[u];if(h===c)l>=0&&(++a,a<o?l+=s:l=-1);else{if(a=0,c=h,h>=t.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${t.length}`);l=t[h]}i.push(l)}if(i.length!==e.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(e,t,s,o){const r=this.getRowPartitionTensor(e),i=this.getRowPartitionTypeByDimension(e);switch(i){case rn.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,t,s,o);case rn.ROW_SPLITS:if(r.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${r.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(r,t,s,o);default:throw new Error(`Unsupported partition type: ${rn[i]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case rn.FIRST_DIM_SIZE:return e[0];case rn.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case rn.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${rn[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),s=this.calculateOutputSize(t),o=new Array(this.raggedRank+1);o[o.length-1]=1;for(let c=o.length-2;c>=0;--c)o[c]=o[c+1]*s[c+1];const r=Em(s,!1),i=Ze(this.valuesDType,j(r));if(o[0]*s[0]>0){let c=this.calculateFirstParentOutputIndex(t,o[0],s[0]);for(let l=1;l<=this.raggedRank;++l)c=this.calculateOutputIndex(l-1,c,o[l],s[l]);this.setOutput(this.raggedRank,c,i,r)}return[r,i]}setOutput(e,t,s,o){if(s.length===0)return;const r=this.values,i=s;let a=o.slice();a=a.slice(e+1);const c=j(a),l=t.length;let u=this.defaultValue;if(u.length!==c&&u.length!==1){const f=this.defaultValueShape;V(()=>{const m=_(u,f);u=Ur(m,a).dataSync()})}let h=0,d=0,p=0;for(let f=0;f<=l;++f){let m=f<l?t[f]:-1;if(m===p){++p;continue}if(d<p){const g=r.subarray(h*c),x=i.subarray(d*c),y=(p-d)*c;Nm(x,g,y)}if(f>=l){const g=s.length;m=Math.floor(g/c)}if(m>p)if(this.defaultValue.length===1)i.subarray(p*c,m*c).fill(this.defaultValue[0]),p=m;else for(;m>p;){const g=i.slice(p*c);Nm(g,u,c),++p}m<0?(h=f+1,d=p):(h=f,d=p,p=d+1)}}}function Nm(n,e,t){for(let s=0;s<t;s++)n[s]=e[s]}function Em(n,e){const t=[];for(let s of n){if(s<0){if(!e)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}t.push(s)}return t}function $1(n,e,t,s,o,r,i,a,c,l){return new bc(n,e,t,s,o,r,i,a,c,l).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S1(n,e,t,s){const o=n===e,r=n<e&&t<0,i=e<n&&t>1;if(o||r||i)return St(0,s);const a=Math.abs(Math.ceil((e-n)/t)),c=St(a,s);e<n&&t===1&&(t=-1),c[0]=n;for(let l=1;l<c.length;l++)c[l]=c[l-1]+t;return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k1=Kn(n=>1/Math.sqrt(n)),SF=Vs(Vi,k1),kF={kernelName:Vi,backendName:"cpu",kernelFunc:SF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qs(n,e,t,s,o,r,i,a,c,l){const u=[s/o,o],h=n.values,d=e.values;if(s===0)return we(t,e.dtype);const p=c instanceof wt?c:we(u,e.dtype);typeof c=="string"||typeof c=="number"?p.values.fill(c):typeof c=="boolean"&&p.values.fill(+c);for(let f=0;f<r;f++){const m=[];let g=0;for(let x=0;x<i;x++){const y=h[f*i+x];m.push(y),g+=y*a[x]}if(g<0||g>=s/o)throw new Error(`Invalid indices: ${m} does not index into ${t}`);for(let x=0;x<o;x++)l?p.values[g*o+x]+=d[f*o+x]:p.values[g*o+x]=e.rank===0?d[0]:d[f*o+x]}return p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TF=Kn(n=>1/(1+Math.exp(-n))),T1=Fe(qi,n=>1/(1+Math.exp(-n))),NF={kernelName:qi,backendName:"cpu",kernelFunc:T1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N1(n,e,t,s,o){const r=Yd(s,e,t),i=j(t),a=ce(s);if(r){const h=Jd(e,a);return o==="string"?n.slice(h,h+i):n.subarray(h,h+i)}const c=o==="string"?ss(n):n,l=we(s,o,c),u=we(t,o);for(let h=0;h<u.size;++h){const d=u.indexToLoc(h),p=d.map((f,m)=>f+e[m]);u.set(l.get(...p),...d)}return o==="string"?Ay(u.values):u.values}function yo(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{begin:r,size:i}=s;re(o,"slice");const[a,c]=_l(o,r,i);Kd(o,a,c);const l=t.data.get(o.dataId).values,u=N1(l,a,c,o.shape,o.dtype);return t.makeTensorInfo(c,o.dtype,u)}const EF={kernelName:vl,backendName:"cpu",kernelFunc:yo};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E1(n,e,t,s,o,r,i){const a=e[0],c=r[0],l=new Array(c),u=new Array(a),h=e[1];if(c===0){if(a!==0)throw new Error(by(a));const g=Ze(t,0),x=Ze(o,0);return[g,[0,h],x,l,u]}let d=!0,p=0;const f=new Array(c).fill(0);for(let g=0;g<a;++g){const x=n[g*h];if(x<0)throw new Error(wy(g,x));if(x>=c)throw new Error(vy(g,x,c));++f[x],d=d&&x>=p,p=x}let m=!0;for(let g=0;g<c;++g){const x=f[g]===0;l[g]=x,m=m&&!x,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&d){const g=n,x=s;for(let y=0;y<a;++y)u[y]=y;return[g,[a,h],x,l,u]}else{const g=f[c-1],x=Ze(t,g*h),y=Ze(o,g),w=new Array(c).fill(0);for(let b=0;b<a;++b){const v=n[b*h],I=w[v],T=(v===0?0:f[v-1])+I;w[v]++;for(let N=0;N<h;++N)x[T*h+N]=n[b*h+N];y[T]=s[b],u[b]=T}for(let b=0;b<c;++b)if(w[b]===0){const I=b===0?0:f[b-1];x[I*h+0]=b;for(let T=1;T<h;++T)x[I*h+T]=0;y[I]=i}return[x,[g,h],y,l,u]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R1(n,e,t,s,o){const r=j(s),i=e[0],a=o.length,c=[];let l=1,u=-1;for(let g=0;g<a;++g){const x=o[g];if(x===-1){if(u!==-1)throw new Error(Cy(u,g));u=g,c.push(1)}else{if(x<0)throw new Error(Iy(g,x));l*=x,c.push(x)}}if(u!==-1){if(l<=0)throw new Error($y());const g=Math.trunc(r/l);if(l*g!==r)throw new Error(Sy(s,c));c[u]=g}if(j(c)!==r)throw new Error(ky(s,c));const d=s.length,p=[];if(d>0){p[d-1]=1;for(let g=d-2;g>=0;--g)p[g]=p[g+1]*s[g+1]}const f=[];if(a>0){f[a-1]=1;for(let g=a-2;g>=0;--g)f[g]=f[g+1]*c[g+1]}const m=Ze(t,i*a);for(let g=0;g<i;++g){let x=0;for(let y=0;y<d;++y)x+=n[g*d+y]*p[y];for(let y=0;y<a;++y)m[g*a+y]=Math.trunc(x/f[y]),x%=f[y]}return[m,[i,a],c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hp(n,e,t,s,o,r=!1,i=0){const a=s.length,c=[e[0],n.length/e[0]],l=c[1],h=a>0?o[a-1]+1:0;if(h<0)throw new Error(Yu());const d=e.slice();d[0]=h;const p=d.reduce((w,b)=>w*b,1),f=Ze(t,p);if(a===0)return h>0&&f.fill(i),[f,d];if(h<=0)throw new Error(Yu());let m=0,g=1,x=0,y=o[m];for(;;){let w=0;if(g<a){if(w=o[g],y===w){++g;continue}if(y>=w)throw new Error(Ty())}if(y<0||y>=h)throw new Error(Ny(y,h));y>x&&f.fill(i,x*l,y*l);for(let b=m;b<g;++b){const v=s[b];if(v<0||v>=c[0])throw new Error(Ey(b,s[b],c[0]));for(let I=0;I<l;I++)f[y*l+I]+=n[v*l+I]}if(r)for(let b=0;b<l;b++)f[y*l+b]/=g-m;if(m=g,++g,x=y+1,y=w,g>a)break}return x<h&&f.fill(i,x*l,h*l),[f,d]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RF=Kn(n=>Math.sqrt(n)),DF=Fe(Ki,n=>Math.sqrt(n)),AF={kernelName:Ki,backendName:"cpu",kernelFunc:DF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D1=st(((n,e)=>{const t=n-e;return t*t})),FF=pt(Xi,D1),OF={kernelName:Xi,backendName:"cpu",kernelFunc:FF};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A1=Kn((n,e)=>{const{pattern:t,replaceGlobal:s,rewrite:o}=e;return n.replace(new RegExp(t,s?"g":""),o)}),MF=Vs(ad,A1),_F={kernelName:ad,backendName:"cpu",kernelFunc:MF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F1(n,e,t,s){const o=we(n,e.dtype);for(let r=0;r<o.size;r++){const i=o.indexToLoc(r),a=new Array(i.length);for(let c=0;c<a.length;c++)a[c]=i[c]*t[c]+s[c];o.set(e.get(...a),...i)}return o}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LF{constructor(e,t,s,o,r,i){this.separator=Cs(e),this.nGramWidths=t,this.leftPad=Cs(s),this.rightPad=Cs(o),this.padWidth=r,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const s=this.getPadWidth(t);return Math.max(0,e+2*s-t+1)}createNGrams(e,t,s,o,r,i){for(let a=0;a<r;++a){const c=this.getPadWidth(i),l=Math.max(0,c-a),u=Math.max(0,c-(r-(a+1))),h=i-(l+u),d=t+(l>0?0:a-c);let p=0;p+=l*this.leftPad.length;for(let y=0;y<h;++y)p+=e[d+y].length;p+=u*this.rightPad.length;const f=l+u+h-1;p+=f*this.separator.length,s[o+a]=new Uint8Array(p);const m=s[o+a];let g=0;const x=y=>y.forEach(w=>m[g++]=w);for(let y=0;y<l;++y)x(this.leftPad),x(this.separator);for(let y=0;y<h-1;++y)x(e[d+y]),x(this.separator);if(h>0){x(e[d+h-1]);for(let y=0;y<u;++y)x(this.separator),x(this.rightPad)}else{for(let y=0;y<u-1;++y)x(this.rightPad),x(this.separator);x(this.rightPad)}}}compute(e,t){const s=e.length,o=t.length;if(o>0){let c=t[0];if(c!==0)throw new Error(`First split value must be 0, got ${c}`);for(let l=1;l<o;++l){let u=t[l]>=c;if(u=u&&t[l]<=s,!u)throw new Error(`Invalid split value ${t[l]}, must be in [${c}, ${s}]`);c=t[l]}if(c!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${c}`)}const r=o-1,i=Ze("int32",o);if(s===0||o===0){const c=new Array(s);for(let l=0;l<=r;++l)i[l]=0;return[c,i]}i[0]=0;for(let c=1;c<=r;++c){const l=t[c]-t[c-1];let u=0;this.nGramWidths.forEach(h=>{u+=this.getNumNGrams(l,h)}),this.preserveShort&&l>0&&u===0&&(u=1),i[c]=i[c-1]+u}const a=new Array(i[r]);for(let c=0;c<r;++c){const l=t[c];let u=i[c];if(this.nGramWidths.forEach(h=>{const d=t[c+1]-t[c],p=this.getNumNGrams(d,h);this.createNGrams(e,l,a,u,p,h),u+=p}),this.preserveShort&&u===i[c]){const h=t[c+1]-t[c];if(h===0)continue;const d=h+2*this.padWidth;this.createNGrams(e,l,a,u,1,d)}}return[a,i]}}function O1(n,e,t,s,o,r,i,a){return new LF(t,s,o,r,i,a).compute(n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PF(n,e,t,s){if(!n.length)return;if(e.length===0){for(let r=0;r<n.length;++r)s.push(n.subarray(r,r+1));return}if(e.length===1){const r=e[0];let i=n.indexOf(r);for(;i!==-1;){const a=n.subarray(0,i);(!t||a.length!==0)&&s.push(a),n=n.subarray(i+1),i=n.indexOf(r)}(!t||n.length!==0)&&s.push(n);return}let o=0;for(let r=0;r<n.length+1;r++)if(r===n.length||e.indexOf(n[r])!==-1){const i=n.subarray(o,r);(!t||i.length!==0)&&s.push(i),o=r+1}}function M1(n,e,t){const s=n.length,o=[];let r=0,i=0;const a=new Array(s);for(let d=0;d<s;++d){const p=o.length;PF(n[d],e,t,o);const f=o.length-p;a[d]=f,r+=f,i=Math.max(i,f)}const c=Ze("int32",r*2),l=new Array(r),u=[s,i];let h=0;for(let d=0;d<s;++d)for(let p=0;p<a[d];++p)c[h*2]=d,c[h*2+1]=p,l[h]=o[h],++h;return[c,l,u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _1(n,e){const t=Ze("int32",n.length);for(let s=0;s<n.length;++s)t[s]=qC(n[s]).modulo(e).getLowBitsUnsigned();return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L1=st(((n,e)=>n-e)),zF=Vp(((n,e,t,s)=>({real:n-t,imag:e-s}))),qp=pt(Yi,L1,zF),BF={kernelName:Yi,backendName:"cpu",kernelFunc:qp};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P1(n,e){const t=new Array(n.rank);for(let o=0;o<t.length;o++)t[o]=n.shape[o]*e[o];const s=we(t,n.dtype);for(let o=0;o<s.values.length;++o){const r=s.indexToLoc(o),i=new Array(n.rank);for(let c=0;c<i.length;c++)i[c]=r[c]%n.shape[c];const a=n.locToIndex(i);s.values[o]=n.values[a]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zr=(n,e)=>{const t=e.value-n.value;return t===0?n.index-e.index:t};function z1(n,e,t=0,s=n.length-1){for(;s>t;){if(s-t>600){const a=s-t+1,c=e-t+1,l=Math.log(a),u=.5*Math.exp(2*l/3),h=.5*Math.sqrt(l*u*(a-u)/a)*Math.sign(c-a/2),d=Math.max(t,Math.floor(e-c*u/a+h)),p=Math.min(s,Math.floor(e+(a-c)*u/a+h));z1(n,e,d,p)}const o=n[e];let r=t,i=s;for(Oo(n,t,e),zr(n[s],o)>0&&Oo(n,t,s);r<i;){for(Oo(n,r,i),r++,i--;zr(n[r],o)<0;)r=r+1;for(;zr(n[i],o)>0;)i=i-1}zr(n[t],o)===0?Oo(n,t,i):(i=i+1,Oo(n,i,s)),i<=e&&(t=i+1),e<=i&&(s=i-1)}}function B1(n,e,t,s,o){const r=e[e.length-1],[i,a]=[n.length/r,r],c=$t(t,i*s),l=$t("int32",i*s);for(let h=0;h<i;h++){const d=h*a,p=n.subarray(d,d+a);let f=new Array(p.length);p.forEach((y,w)=>f[w]={value:y,index:w}),s<f.length&&(z1(f,s),f=f.slice(0,s)),o&&f.sort(zr);const m=h*s,g=c.subarray(m,m+s),x=l.subarray(m,m+s);for(let y=0;y<s;y++)g[y]=f[y].value,x[y]=f[y].index}const u=e.slice();return u[u.length-1]=s,[we(u,t,c),we(u,"int32",l)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V1(n,e,t,s){const o=ve(e,t)[0],r=[1,t[0],1];for(let f=0;f<o;f++)r[0]*=t[f];r[1]=t[o];for(let f=o+1;f<t.length;f++)r[2]*=t[f];const i=new Map,a=new Int32Array(t[o]),c=new wt(r,s,n),l=[],u=r[0]===1&&r[2]===1;for(let f=0;f<t[o];f++){let m;if(u)m=n[f].toString();else{const x=[];for(let y=0;y<r[0];y++)for(let w=0;w<r[2];w++)x.push(c.get(y,f,w));m=x.join(",")}const g=i.get(m);if(g!=null)a[f]=g;else{const x=i.size;i.set(m,x),a[f]=x,l.push(f)}}const h=r.slice();h[1]=i.size;const d=new wt(h,s);l.forEach((f,m)=>{for(let g=0;g<r[0];g++)for(let x=0;x<r[2];x++)d.set(c.get(g,f,x),g,m,x)});const p=t.slice();return p[o]=h[1],{outputValues:d.values,outputShape:p,indices:a}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var VF=Object.freeze({__proto__:null,addImpl:Y0,bincountImpl:Wp,bincountReduceImpl:J0,bitwiseAndImpl:Z0,castImpl:X0,ceilImpl:Q0,concatImpl:e1,equalImpl:t1,expImpl:s1,expm1Impl:r1,floorDivImpl:a1,floorImpl:i1,gatherNdImpl:c1,gatherV2Impl:l1,greaterEqualImpl:h1,greaterImpl:u1,lessEqualImpl:p1,lessImpl:d1,linSpaceImpl:f1,logImpl:m1,maxImpl:g1,maximumImpl:x1,minimumImpl:y1,multiplyImpl:Up,negImpl:b1,notEqualImpl:w1,prodImpl:v1,raggedGatherImpl:C1,raggedRangeImpl:I1,raggedTensorToTensorImpl:$1,rangeImpl:S1,rsqrtImpl:k1,scatterImpl:Qs,sigmoidImpl:TF,simpleAbsImpl:K0,sliceImpl:N1,sparseFillEmptyRowsImpl:E1,sparseReshapeImpl:R1,sparseSegmentReductionImpl:Hp,sqrtImpl:RF,squaredDifferenceImpl:D1,staticRegexReplaceImpl:A1,stridedSliceImpl:F1,stringNGramsImpl:O1,stringSplitImpl:M1,stringToHashBucketFastImpl:_1,subImpl:L1,tileImpl:P1,topKImpl:B1,transposeImpl:Gp,uniqueImpl:V1});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ax("cpu",()=>new Jl,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W1=Fe(bi,n=>n>=0?n:Math.exp(n)-1),WF={kernelName:bi,backendName:"cpu",kernelFunc:W1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U1(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{alpha:r}=s;re([o],"leakyRelu");const i=j(o.shape),a=t.data.get(o.dataId).values,c=$t("float32",i);for(let l=0;l<a.length;l++)c[l]=a[l]<0?r*a[l]:a[l];return t.makeTensorInfo(o.shape,"float32",c)}const UF={kernelName:Xc,backendName:"cpu",kernelFunc:U1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GF=st((n,e)=>n<0?e*n:n);function G1(n){const{inputs:e,backend:t}=n,{x:s,alpha:o}=e;re([s,o],"prelu");const r=t.data.get(s.dataId).values,i=t.data.get(o.dataId).values,[a,c]=GF(s.shape,o.shape,r,i,"float32");return t.makeTensorInfo(c,"float32",a)}const HF={kernelName:fl,backendName:"cpu",kernelFunc:G1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H1=Fe(Pi,n=>Math.max(0,n)),qF={kernelName:Pi,backendName:"cpu",kernelFunc:H1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q1=Fe(zi,n=>Math.min(Math.max(0,n),6)),jF={kernelName:zi,backendName:"cpu",kernelFunc:q1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wc(n,e,t,s,o){if(t==="linear")return jn({inputs:{x:e},backend:n});if(t==="relu")return H1({inputs:{x:e},backend:n});if(t==="elu")return W1({inputs:{x:e},backend:n});if(t==="relu6")return q1({inputs:{x:e},backend:n});if(t==="prelu")return G1({inputs:{x:e,alpha:s},backend:n});if(t==="leakyrelu")return U1({inputs:{x:e},backend:n,attrs:{alpha:o}});if(t==="sigmoid")return T1({inputs:{x:e},backend:n});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ue(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{shape:r}=s,i=j(o.shape),a=xg(r,i),c=j(a);k(i===c,()=>`The new shape (${a}) has ${c} elements and the old shape (${o.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),t.incRef(o.dataId);const l=t.data.get(o.dataId);if(l.complexTensorInfos!=null){const u=l.complexTensorInfos.real,h=l.complexTensorInfos.imag;u.shape=a,h.shape=a}return{dataId:o.dataId,shape:a,dtype:o.dtype}}const KF={kernelName:gl,backendName:"cpu",kernelFunc:Ue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j1(n){const{inputs:e,backend:t,attrs:s}=n,{a:o,b:r}=e,{transposeA:i,transposeB:a}=s;re([o,r],"matMul");const c=o.shape.length,l=r.shape.length,u=i?o.shape[c-2]:o.shape[c-1],h=a?r.shape[l-1]:r.shape[l-2],d=i?o.shape[c-1]:o.shape[c-2],p=a?r.shape[l-2]:r.shape[l-1],f=o.shape.slice(0,-2),m=r.shape.slice(0,-2),g=j(f),x=j(m),w=me(o.shape.slice(0,-2),r.shape.slice(0,-2)).concat([d,p]);k(u===h,()=>`Error in matMul: inner shapes (${u}) and (${h}) of Tensors with shapes ${o.shape} and ${r.shape} and transposeA=${i} and transposeB=${a} must match.`);const b=i?[g,u,d]:[g,d,u],v=a?[x,p,h]:[x,h,p],I=Ue({inputs:{x:o},backend:t,attrs:{shape:b}}),T=Ue({inputs:{x:r},backend:t,attrs:{shape:v}}),N=i?I.shape[1]:I.shape[2],$=i?I.shape[2]:I.shape[1],S=a?T.shape[1]:T.shape[2],C=Math.max(g,x),R=t.data.get(I.dataId).values,F=t.data.get(T.dataId).values,z=ce(I.shape),M=ce(T.shape),[B,H,P]=i?[z[0],1,z[1]]:[z[0],z[1],1],[U,G,K]=a?[1,M[1],M[0]]:[M[1],1,M[0]],Y=$*S,X=we([C,$,S],I.dtype),ee=X.values,Q=t.blockSize;for(let oe=0;oe<C;oe++){const ae=oe%g,de=oe%x;for(let he=0;he<$;he+=Q){const ge=Math.min(he+Q,$);for(let ye=0;ye<S;ye+=Q){const De=Math.min(ye+Q,S);for(let Pe=0;Pe<N;Pe+=Q){const Je=Math.min(Pe+Q,N);for(let ze=he;ze<ge;ze++)for(let Oe=ye;Oe<De;Oe++){let Ke=0;for(let He=Pe;He<Je;He++){const Xn=R[ae*B+ze*H+He*P],yt=F[He*U+Oe*G+de*K];Ke+=Xn*yt}ee[oe*Y+(ze*S+Oe)]+=Ke}}}}}return t.disposeIntermediateTensorInfo(I),t.disposeIntermediateTensorInfo(T),t.makeTensorInfo(w,X.dtype,X.values)}const XF={kernelName:Oc,backendName:"cpu",kernelFunc:j1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YF(n){const{inputs:e,backend:t,attrs:s}=n,{a:o,b:r,bias:i,preluActivationWeights:a}=e,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:h}=s;let d,p,f;const m=[];d=j1({inputs:{a:o,b:r},attrs:{transposeA:c,transposeB:l},backend:t}),i&&(p=nr({inputs:{a:d,b:i},backend:t}),m.push(d),d=p),u&&(f=wc(t,d,u,a,h),m.push(d),d=f);for(const x of m)t.disposeIntermediateTensorInfo(x);return d}const JF={kernelName:Za,backendName:"cpu",kernelFunc:YF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZF=Fe(ii,n=>Math.acos(n)),QF={kernelName:ii,backendName:"cpu",kernelFunc:ZF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eO=Fe(ai,n=>Math.acosh(n)),tO={kernelName:ai,backendName:"cpu",kernelFunc:eO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nO(n){const{inputs:e,backend:t}=n,s=e;re(e,"addN");const o=s.map(a=>t.data.get(a.dataId).values),r=we(s[0].shape,s[0].dtype),i=r.values;for(let a=0;a<s.length;a++){const c=o[a];for(let l=0;l<i.length;l++)i[l]+=c[l]}return t.makeTensorInfo(r.shape,r.dtype,r.values)}const sO={kernelName:kh,backendName:"cpu",kernelFunc:nO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oO(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,keepDims:i}=s;re(o,"all");const a=ve(r,o.shape);let c=a;const l=Ye(c,o.shape.length);let u=o;l!=null&&(u=Vt({inputs:{x:o},backend:t,attrs:{perm:l}}),c=tt(c.length,o.shape.length)),Ct("all",c,u.shape.length);const[h,d]=xt(u.shape,c),p=j(d),f=St(j(h),u.dtype),m=t.data.get(u.dataId).values;for(let x=0;x<f.length;++x){const y=x*p;let w=m[y];for(let b=0;b<p;++b){const v=m[y+b];w=w&&v}f[x]=w}l!=null&&t.disposeIntermediateTensorInfo(u);const g=t.makeTensorInfo(h,u.dtype,f);if(i){const x=rt(h,a),y=Ue({inputs:{x:g},backend:t,attrs:{shape:x}});return t.disposeIntermediateTensorInfo(g),y}return g}const rO={kernelName:Th,backendName:"cpu",kernelFunc:oO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iO(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,keepDims:i}=s;re(o,"any");const a=ve(r,o.shape);let c=a;const l=Ye(c,o.shape.length);let u=o;l!=null&&(u=Vt({inputs:{x:o},backend:t,attrs:{perm:l}}),c=tt(c.length,o.shape.length)),Ct("any",c,u.shape.length);const[h,d]=xt(u.shape,c),p=j(d),f=St(j(h),u.dtype),m=t.data.get(u.dataId).values;for(let x=0;x<f.length;++x){const y=x*p;let w=m[y];for(let b=0;b<p;++b){const v=m[y+b];w=w||v}f[x]=w}l!=null&&t.disposeIntermediateTensorInfo(u);const g=t.makeTensorInfo(h,u.dtype,f);if(i){const x=rt(h,a),y=Ue({inputs:{x:g},backend:t,attrs:{shape:x}});return t.disposeIntermediateTensorInfo(g),y}return g}const aO={kernelName:Nh,backendName:"cpu",kernelFunc:iO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cO(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r}=s;re(o,"argMax");let i=ve(r,o.shape);const a=Ye(i,o.shape.length);let c=o;const l=[];a!=null&&(c=Vt({inputs:{x:o},backend:t,attrs:{perm:a}}),l.push(c),i=tt(i.length,c.shape.length)),i=[i[0]],Ct("argMax",i,c.shape.length);const[u,h]=xt(c.shape,i),d=j(u),p=St(d,"int32"),f=j(h),m=t.data.get(c.dataId).values;for(let g=0;g<p.length;++g){const x=g*f;let y=m[x],w=0;for(let b=0;b<f;++b){const v=m[x+b];v>y&&(y=v,w=b)}p[g]=w}return l.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(u,"int32",p)}const lO={kernelName:Rc,backendName:"cpu",kernelFunc:cO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uO(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r}=s;re(o,"argMin");let i=ve(r,o.shape);const a=Ye(i,o.shape.length);let c=o;const l=[];a!=null&&(c=Vt({inputs:{x:o},backend:t,attrs:{perm:a}}),l.push(c),i=tt(i.length,c.shape.length)),i=[i[0]],Ct("argMin",i,c.shape.length);const[u,h]=xt(c.shape,i),d=j(u),p=St(d,"int32"),f=j(h),m=t.data.get(c.dataId).values;for(let g=0;g<p.length;++g){const x=g*f;let y=m[x],w=0;for(let b=0;b<f;++b){const v=m[x+b];v<y&&(y=v,w=b)}p[g]=w}return l.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(u,"int32",p)}const hO={kernelName:Dc,backendName:"cpu",kernelFunc:uO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dO=Fe(ci,n=>Math.asin(n)),pO={kernelName:ci,backendName:"cpu",kernelFunc:dO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fO=Fe(li,n=>Math.asinh(n)),mO={kernelName:li,backendName:"cpu",kernelFunc:fO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gO=Fe(ui,n=>Math.atan(n)),xO={kernelName:ui,backendName:"cpu",kernelFunc:gO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yO=st((n,e)=>Math.atan2(n,e)),bO=pt(di,yO),wO={kernelName:di,backendName:"cpu",kernelFunc:bO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vO=Fe(hi,n=>Math.atanh(n)),CO={kernelName:hi,backendName:"cpu",kernelFunc:vO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jp(n,e,t,s,o,r){const i=o.strideHeight,a=o.strideWidth,c=o.dilationHeight,l=o.dilationWidth,u=o.effectiveFilterHeight,h=o.effectiveFilterWidth,d=o.padInfo.top,p=o.padInfo.left,f=r==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=we(o.outShape,t),g=m.values,x=o.outShape[1]*o.outShape[2]*o.outShape[3],y=o.outShape[2]*o.outShape[3],w=o.outShape[3];for(let b=0;b<o.batchSize;++b){const v=b*x,I=b*s[0];for(let T=0;T<o.inChannels;++T)for(let N=0;N<o.outHeight;++N){const $=N*i-d,S=Math.max(0,$),C=Math.min(o.inHeight,u+$),R=v+N*y;for(let F=0;F<o.outWidth;++F){const z=F*a-p,M=Math.max(0,z),B=Math.min(o.inWidth,h+z);let H=f,P=0,U=0;for(let K=S;K<C;K+=c){const Y=I+K*s[1];for(let X=M;X<B;X+=l){const ee=Y+X*s[2],Q=n[ee+T];r==="max"&&Q>H?H=Q:r==="avg"&&(P+=Q,U++)}if(isNaN(H))break}const G=R+F*w+T;g[G]=r==="avg"?P/U:H}}}return m}function K1(n,e,t,s,o=!1,r=!1){const i=we(s.outShape,"int32"),a=s.strideHeight,c=s.strideWidth,l=s.dilationHeight,u=s.dilationWidth,h=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,m=we(e,t,n);for(let g=0;g<s.batchSize;++g)for(let x=0;x<s.inChannels;++x)for(let y=0;y<s.outHeight;++y){const w=y*a-p;let b=w;for(;b<0;)b+=l;const v=Math.min(s.inHeight,h+w);for(let I=0;I<s.outWidth;++I){const T=I*c-f;let N=T;for(;N<0;)N+=u;const $=Math.min(s.inWidth,d+T);let S=Number.NEGATIVE_INFINITY,C=-1;for(let R=b;R<v;R+=l){const F=R-w;for(let z=N;z<$;z+=u){const M=z-T,B=m.get(g,R,z,x);B>S&&(S=B,o?C=r?((g*s.inHeight+R)*s.inWidth+z)*s.inChannels+x:(R*s.inWidth+z)*s.inChannels+x:C=F*d+M)}}i.set(C,g,y,I,x)}}return i}function X1(n,e,t,s,o,r){const i=o.strideDepth,a=o.strideHeight,c=o.strideWidth,l=o.dilationDepth,u=o.dilationHeight,h=o.dilationWidth,d=o.effectiveFilterDepth,p=o.effectiveFilterHeight,f=o.effectiveFilterWidth,m=o.padInfo.front,g=o.padInfo.top,x=o.padInfo.left,y=r==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,w=we(o.outShape,t),b=w.values,v=o.outShape[1]*o.outShape[2]*o.outShape[3]*o.outShape[4],I=o.outShape[2]*o.outShape[3]*o.outShape[4],T=o.outShape[3]*o.outShape[4],N=o.outShape[4];for(let $=0;$<o.batchSize;++$){const S=$*v,C=$*s[0];for(let R=0;R<o.inChannels;++R)for(let F=0;F<o.outDepth;++F){const z=F*i-m;let M=z;for(;M<0;)M+=l;const B=Math.min(o.inDepth,d+z),H=S+F*I;for(let P=0;P<o.outHeight;++P){const U=P*a-g;let G=U;for(;G<0;)G+=u;const K=Math.min(o.inHeight,p+U),Y=H+P*T;for(let X=0;X<o.outWidth;++X){const ee=X*c-x;let Q=ee;for(;Q<0;)Q+=h;const oe=Math.min(o.inWidth,f+ee),ae=Y+X*N;let de=y,he=0,ge=0;for(let De=M;De<B;De+=l){const Pe=C+De*s[1];for(let Je=G;Je<K;Je+=u){const ze=Pe+Je*s[2];for(let Oe=Q;Oe<oe;Oe+=h){const Ke=ze+Oe*s[3],He=n[Ke+R];if(r==="max"&&He>de?de=He:r==="avg"&&(he+=He,ge++),isNaN(de))break}if(isNaN(de))break}if(isNaN(de))break}const ye=ae+R;b[ye]=r==="avg"?he/Math.max(ge,1):de}}}}return w}function IO(n,e){const t=we(e.outShape,"int32"),s=e.strideDepth,o=e.strideHeight,r=e.strideWidth,i=e.dilationDepth,a=e.dilationHeight,c=e.dilationWidth,l=e.effectiveFilterDepth,u=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left;for(let m=0;m<e.batchSize;++m)for(let g=0;g<e.inChannels;++g)for(let x=0;x<e.outDepth;++x){const y=x*s-d;let w=y;for(;w<0;)w+=i;const b=Math.min(e.inDepth,l+y);for(let v=0;v<e.outHeight;++v){const I=v*o-p;let T=I;for(;T<0;)T+=a;const N=Math.min(e.inHeight,u+I);for(let $=0;$<e.outWidth;++$){const S=$*r-f;let C=S;for(;C<0;)C+=c;const R=Math.min(e.inWidth,h+S);let F=Number.NEGATIVE_INFINITY,z=-1;for(let M=w;M<b;M+=i){const B=M-y;for(let H=T;H<N;H+=a){const P=H-I;for(let U=C;U<R;U+=c){const G=U-S,K=n.get(m,M,H,U,g);K>=F&&(F=K,z=B*u*h+P*u+G)}}}t.set(z,m,x,v,$,g)}}}return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $O(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e;re(o,"avgPool");const{filterSize:r,strides:i,pad:a,dimRoundingMode:c}=s,l=1;k(Tt(i,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);const u=fn(o.shape,r,i,l,a,c);let h;if(u.filterWidth===1&&u.filterHeight===1&&Re(u.inShape,u.outShape))h=jn({inputs:{x:o},backend:t});else{const d=t.data.get(o.dataId).values,p=ce(o.shape),f=jp(d,o.shape,o.dtype,p,u,"avg");h=t.makeTensorInfo(u.outShape,o.dtype,f.values)}return h}const SO={kernelName:Ac,backendName:"cpu",kernelFunc:$O};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kO(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{filterSize:r,strides:i,pad:a,dimRoundingMode:c,dataFormat:l}=s;re(o,"avgPool3d");const u=rs(o.shape,r,i,1,a,c,l),h=t.data.get(o.dataId).values,d=X1(h,o.shape,o.dtype,ce(o.shape),u,"avg");return t.makeTensorInfo(d.shape,"float32",d.values)}const TO={kernelName:Fc,backendName:"cpu",kernelFunc:kO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NO(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,input:r}=e,{filterSize:i,strides:a,pad:c,dimRoundingMode:l}=s;re([o,r],"avgPool3DGrad");const u=rs(r.shape,i,a,1,c,l),h=u.strideDepth,d=u.strideHeight,p=u.strideWidth,f=u.filterDepth,m=u.filterHeight,g=u.filterWidth,x=u.dilationDepth,y=u.dilationHeight,w=u.dilationWidth,b=u.effectiveFilterDepth,v=u.effectiveFilterHeight,I=u.effectiveFilterWidth,T=b-1-u.padInfo.front,N=I-1-u.padInfo.left,$=v-1-u.padInfo.top,S=we(r.shape,"float32"),C=1/(f*m*g),R=t.bufferSync(o);for(let F=0;F<u.batchSize;++F)for(let z=0;z<u.inChannels;++z)for(let M=0;M<u.inDepth;++M)for(let B=0;B<u.inHeight;++B)for(let H=0;H<u.inWidth;++H){const P=M-T,U=B-$,G=H-N;let K=0;for(let Y=0;Y<b;Y+=x){const X=(P+Y)/h;if(!(X<0||X>=u.outDepth||Math.floor(X)!==X))for(let ee=0;ee<v;ee+=y){const Q=(U+ee)/d;if(!(Q<0||Q>=u.outHeight||Math.floor(Q)!==Q))for(let oe=0;oe<I;oe+=w){const ae=(G+oe)/p;if(ae<0||ae>=u.outWidth||Math.floor(ae)!==ae)continue;const de=R.get(F,X,Q,ae,z);K+=de}}}S.set(K*C,F,M,B,H,z)}return t.makeTensorInfo(S.shape,S.dtype,S.values)}const EO={kernelName:Rh,backendName:"cpu",kernelFunc:NO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RO(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,input:r}=e,i=r;re([o,r],"avgPoolGrad");const{filterSize:a,strides:c,pad:l}=s,u=fn(i.shape,a,c,1,l),h=u.strideHeight,d=u.strideWidth,p=u.filterHeight,f=u.filterWidth,m=u.dilationHeight,g=u.dilationWidth,x=u.effectiveFilterHeight,y=u.effectiveFilterWidth,w=y-1-u.padInfo.left,b=x-1-u.padInfo.top,v=we(i.shape,"float32"),I=1/(p*f),T=t.data.get(o.dataId).values,N=we(o.shape,"float32",T);for(let $=0;$<u.batchSize;++$)for(let S=0;S<u.inChannels;++S)for(let C=0;C<u.inHeight;++C)for(let R=0;R<u.inWidth;++R){const F=C-b,z=R-w;let M=0;for(let B=0;B<x;B+=m){const H=(F+B)/h;if(!(H<0||H>=u.outHeight||Math.floor(H)!==H))for(let P=0;P<y;P+=g){const U=(z+P)/d;if(U<0||U>=u.outWidth||Math.floor(U)!==U)continue;const G=N.get($,H,U,S);M+=G}}v.set(M*I,$,C,R,S)}return t.makeTensorInfo(v.shape,v.dtype,v.values)}const DO={kernelName:Eh,backendName:"cpu",kernelFunc:RO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AO(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,scale:r,offset:i,mean:a,variance:c}=e;k(a.shape.length===c.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),k(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),k(r==null||a.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),re([o,a,c,r,i],"batchNorm");let{varianceEpsilon:l}=s;l==null&&(l=.001);const u=t.data.get(o.dataId).values,h=t.data.get(a.dataId).values,d=t.data.get(c.dataId).values,p=r?t.data.get(r.dataId).values:new Float32Array([1]),f=i?t.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(u.length),g=f.length,x=p.length,y=d.length,w=h.length;let b=0,v=0,I=0,T=0;for(let N=0;N<u.length;++N)m[N]=f[b++]+(u[N]-h[v++])*p[I++]/Math.sqrt(d[T++]+l),b>=g&&(b=0),v>=w&&(v=0),I>=x&&(I=0),T>=y&&(T=0);return t.makeTensorInfo(o.shape,o.dtype,m)}const FO={kernelName:qc,backendName:"cpu",kernelFunc:AO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OO(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{blockShape:r,crops:i}=s;re([o],"batchToSpaceND");const a=r.reduce((x,y)=>x*y),c=ca(o.shape,r,a),l=la(c.length,r.length),u=ua(o.shape,r,a),h=np(i,r.length),d=sp(u,i,r.length),p=Ue({inputs:{x:o},backend:t,attrs:{shape:c}}),f=Vt({inputs:{x:p},backend:t,attrs:{perm:l}}),m=Ue({inputs:{x:f},backend:t,attrs:{shape:u}}),g=yo({inputs:{x:m},backend:t,attrs:{begin:h,size:d}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),g}const MO={kernelName:Mc,backendName:"cpu",kernelFunc:OO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _O(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,weights:r}=e,{size:i}=s,a=t.data.get(o.dataId).values,c=t.data.get(r.dataId).values,l=Wp(a,c,r.dtype,r.shape,i);return t.makeTensorInfo([i],r.dtype,l)}const LO={kernelName:Dh,backendName:"cpu",kernelFunc:_O};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PO(n){const{inputs:e,backend:t}=n,{s0:s,s1:o}=e,r=t.data.get(s.dataId).values,i=t.data.get(o.dataId).values,a=me(Array.from(r),Array.from(i));return t.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const zO={kernelName:Ig,backendName:"cpu",kernelFunc:PO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BO=Fe(mi,(n,e)=>{const t=e;return n>t.clipValueMax?t.clipValueMax:n<t.clipValueMin?t.clipValueMin:n}),VO={kernelName:mi,backendName:"cpu",kernelFunc:BO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WO=n=>{const{x:e}=n.inputs,t=n.backend,s=new Float32Array(j(e.shape)),o=t.data.get(e.dataId),r=o.complexTensorInfos.real,i=o.complexTensorInfos.imag,a=t.data.get(r.dataId).values,c=t.data.get(i.dataId).values;for(let l=0;l<a.length;l++){const u=a[l],h=c[l];s[l]=Math.hypot(u,h)}return t.makeOutput(s,e.shape,"float32")},UO={kernelName:_c,backendName:"cpu",kernelFunc:WO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sr(n){const{inputs:e,backend:t}=n,{input:s}=e,o=t.data.get(s.dataId).complexTensorInfos.imag,r=t.data.get(o.dataId).values;return t.makeTensorInfo(o.shape,o.dtype,r)}const GO={kernelName:Xh,backendName:"cpu",kernelFunc:sr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function or(n){const{inputs:e,backend:t,attrs:s}=n,{axis:o}=s,r=ve(o,e[0].shape)[0],i=e.map(m=>m.shape);Qd(i,r);let a=zn(e.map(m=>m.shape),r);if(j(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);const c=e.filter(m=>j(m.shape)>0);if(c.length===1)return jn({inputs:{x:c[0]},backend:t});if(c[0].dtype==="complex64"){const m=c.map(b=>xo({inputs:{input:b},backend:t})),g=c.map(b=>sr({inputs:{input:b},backend:t})),x=or({inputs:m,backend:t,attrs:{axis:r}}),y=or({inputs:g,backend:t,attrs:{axis:r}}),w=Ht({inputs:{real:x,imag:y},backend:t});return m.forEach(b=>t.disposeIntermediateTensorInfo(b)),g.forEach(b=>t.disposeIntermediateTensorInfo(b)),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(y),w}const l=c.map(m=>{const x=[-1,j(m.shape.slice(r))];return Ue({inputs:{x:m},backend:t,attrs:{shape:x}})}),u=l.map(m=>({vals:t.data.get(m.dataId).values,shape:m.shape}));a=zn(l.map(m=>m.shape),1);const h=l[0].shape[0]===1,d=e1(u,a,e[0].dtype,h),p=zn(c.map(m=>m.shape),r),f=t.makeTensorInfo(p,e[0].dtype,d);return l.forEach(m=>t.disposeIntermediateTensorInfo(m)),f}const HO={kernelName:Lc,backendName:"cpu",kernelFunc:or};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y1(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:r}=e,{strides:i,pad:a,dataFormat:c,dilations:l,dimRoundingMode:u}=s;re([o,r],"conv2d");const h=is(c),d=vt(o.shape,r.shape,i,l,a,u,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,x=d.padInfo.left,y=d.padInfo.top,w=d.dataFormat==="channelsLast",b=new wt(d.outShape,o.dtype),v=ce(o.shape),I=ce(r.shape),T=v[0],N=w?v[1]:v[2],$=w?v[2]:1,S=w?1:v[1],C=b.strides[0],R=w?b.strides[1]:b.strides[2],F=w?b.strides[2]:1,z=w?1:b.strides[1],M=t.data.get(o.dataId).values,B=t.data.get(r.dataId).values,H=b.values;for(let P=0;P<d.batchSize;++P){const U=P*T,G=P*C;for(let K=0;K<d.outHeight;++K){const Y=G+K*R,X=K*d.strideHeight-y;for(let ee=0;ee<p;++ee){const Q=X+ee*m;if(Q<0||Q>=d.inHeight)continue;const oe=ee*I[0],ae=U+Q*N;for(let de=0;de<d.outWidth;++de){const he=Y+de*F,ge=de*d.strideWidth-x;for(let ye=0;ye<f;++ye){const De=ge+ye*g;if(De<0||De>=d.inWidth)continue;const Pe=oe+ye*I[1],Je=ae+De*$;let ze=Pe;for(let Oe=0;Oe<d.inChannels;++Oe){const Ke=M[Je+Oe*S];for(let He=0;He<d.outChannels;++He)H[he+He*z]+=Ke*B[ze+He];ze+=d.outChannels}}}}}}return t.makeTensorInfo(b.shape,b.dtype,H)}const qO={kernelName:Pc,backendName:"cpu",kernelFunc:Y1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jO(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,dy:r}=e,{strides:i,pad:a,dataFormat:c,dimRoundingMode:l,filterShape:u}=s;re([o,r],"conv2dBackpropFilter");const h=is(c),d=vt(o.shape,u,i,1,a,l,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,x=d.dataFormat==="channelsLast",y=new wt(d.filterShape,"float32"),w=d.padInfo.left,b=d.padInfo.top,v=t.data.get(o.dataId).values,I=t.data.get(r.dataId).values,T=new wt(o.shape,o.dtype,v),N=new wt(r.shape,r.dtype,I);for(let $=0;$<m;++$){const S=Math.max(0,Math.ceil((b-$)/p)),C=Math.min(d.outHeight,(d.inHeight+b-$)/p);for(let R=0;R<g;++R){const F=Math.max(0,Math.ceil((w-R)/f)),z=Math.min(d.outWidth,(d.inWidth+w-R)/f);for(let M=0;M<d.inChannels;++M)for(let B=0;B<d.outChannels;++B){let H=0;for(let P=0;P<d.batchSize;++P)for(let U=S;U<C;++U){const G=$+U*p-b;for(let K=F;K<z;++K){const Y=R+K*f-w;x?H+=T.get(P,G,Y,M)*N.get(P,U,K,B):H+=T.get(P,M,G,Y)*N.get(P,B,U,K)}}y.set(H,$,R,M,B)}}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}const KO={kernelName:Oh,backendName:"cpu",kernelFunc:jO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XO(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,filter:r}=e,{inputShape:i,strides:a,pad:c,dataFormat:l,dimRoundingMode:u}=s;re([o,r],"conv2dBackpropInput");const h=ce(r.shape),d=ce(o.shape);let p=is(l);const f=vt(i,r.shape,a,1,c,u,!1,p),m=new wt(f.inShape,"float32"),g=m.values,x=t.data.get(o.dataId).values,y=t.data.get(r.dataId).values,[w,b,v]=h,{batchSize:I,filterHeight:T,filterWidth:N,inChannels:$,inHeight:S,inWidth:C,outChannels:R,outHeight:F,outWidth:z,strideHeight:M,strideWidth:B}=f;p=f.dataFormat;const H=T-1-f.padInfo.top,P=N-1-f.padInfo.left,U=p==="channelsLast",G=m.strides[0],K=U?m.strides[1]:m.strides[2],Y=U?m.strides[2]:1,X=U?1:m.strides[1],ee=d[0],Q=U?d[1]:d[2],oe=U?d[2]:1,ae=U?1:d[1];for(let de=0;de<I;++de)for(let he=0;he<$;++he)for(let ge=0;ge<S;++ge){const ye=ge-H,De=Math.max(0,Math.ceil(ye/M)),Pe=Math.min(F,(T+ye)/M);for(let Je=0;Je<C;++Je){const ze=Je-P,Oe=Math.max(0,Math.ceil(ze/B)),Ke=Math.min(z,(N+ze)/B);let He=0;for(let yt=De;yt<Pe;++yt){const cs=yt*M-ye;for(let Jt=Oe;Jt<Ke;++Jt){const Us=Jt*B-ze,xn=ee*de+Q*yt+oe*Jt,Yn=w*(T-1-cs)+b*(N-1-Us)+v*he;for(let ls=0;ls<R;++ls){const us=x[xn+ae*ls],hs=y[Yn+ls];He+=us*hs}}}const Xn=G*de+K*ge+Y*Je+X*he;g[Xn]=He}}return t.makeTensorInfo(m.shape,m.dtype,m.values)}const YO={kernelName:zc,backendName:"cpu",kernelFunc:XO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JO(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:r}=e,{strides:i,pad:a,dilations:c}=s;re([o,r],"conv3d");const l=Ms(o.shape,r.shape,i,c,a),{filterDepth:u,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=l,x=g.front,y=g.left,w=g.top,b=new wt(l.outShape,o.dtype),v=t.data.get(o.dataId).values,I=t.data.get(r.dataId).values,T=b.values,N=ce(o.shape),$=ce(r.shape);for(let S=0;S<l.batchSize;++S){const C=S*N[0],R=S*b.strides[0];for(let F=0;F<l.outDepth;++F){const z=R+F*b.strides[1],M=F*l.strideDepth-x;for(let B=0;B<u;++B){const H=M+B*p;if(H<0||H>=l.inDepth)continue;const P=B*$[0],U=C+H*N[1];for(let G=0;G<l.outHeight;++G){const K=z+G*b.strides[2],Y=G*l.strideHeight-w;for(let X=0;X<h;++X){const ee=Y+X*f;if(ee<0||ee>=l.inHeight)continue;const Q=P+X*$[1],oe=U+ee*N[2];for(let ae=0;ae<l.outWidth;++ae){const de=K+ae*l.outChannels,he=ae*l.strideWidth-y;for(let ge=0;ge<d;++ge){const ye=he+ge*m;if(ye<0||ye>=l.inWidth)continue;const De=Q+ge*$[2],Pe=oe+ye*l.inChannels;let Je=De;for(let ze=0;ze<l.inChannels;++ze){const Oe=v[Pe+ze];for(let Ke=0;Ke<l.outChannels;++Ke)T[de+Ke]+=Oe*I[Je+Ke];Je+=l.outChannels}}}}}}}}return t.makeTensorInfo(b.shape,b.dtype,b.values)}const ZO={kernelName:Bc,backendName:"cpu",kernelFunc:JO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QO(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,dy:r}=e,{strides:i,pad:a,filterShape:c}=s;re([o,r],"conv3dBackpropFilterV2");const l=ce(o.shape),u=ce(r.shape),h=Ms(o.shape,c,i,1,a),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,x=h.filterWidth,y=new wt(h.filterShape,"float32"),w=y.values,[b,v,I,T]=y.strides,N=t.data.get(r.dataId).values,[$,S,C,R]=u,F=t.data.get(o.dataId).values,[z,M,B,H]=l,P=h.padInfo.front,U=h.padInfo.left,G=h.padInfo.top;for(let K=0;K<m;++K){const Y=Math.max(0,Math.ceil((P-K)/d)),X=Math.min(h.outDepth,(h.inDepth+P-K)/d),ee=K*b;for(let Q=0;Q<g;++Q){const oe=Math.max(0,Math.ceil((G-Q)/p)),ae=Math.min(h.outHeight,(h.inHeight+G-Q)/p),de=Q*v+ee;for(let he=0;he<x;++he){const ge=Math.max(0,Math.ceil((U-he)/f)),ye=Math.min(h.outWidth,(h.inWidth+U-he)/f),De=he*I+de;for(let Pe=0;Pe<h.inChannels;++Pe){const Je=Pe*T+De;for(let ze=0;ze<h.outChannels;++ze){let Oe=0;for(let Ke=0;Ke<h.batchSize;++Ke){const He=Ke*z,Xn=Ke*$;for(let yt=Y;yt<X;++yt){const Jt=(K+yt*d-P)*M+He,Us=yt*S+Xn;for(let xn=oe;xn<ae;++xn){const ls=(Q+xn*p-G)*B+Jt,us=xn*C+Us;for(let hs=ge;hs<ye;++hs){const ou=(he+hs*f-U)*H+ls,ru=hs*R+us;Oe+=F[ou+Pe]*N[ru+ze]}}}}w[Je+ze]=Oe}}}}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}const eM={kernelName:Mh,backendName:"cpu",kernelFunc:QO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tM(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,filter:r}=e,{pad:i,strides:a,inputShape:c}=s;re([o],"conv3dBackpropInputV2");const l=ce(o.shape),u=ce(r.shape),h=Ms(c,r.shape,a,1,i),d=new wt(h.inShape,"float32"),p=d.values,[f,m,g,x]=d.strides,y=t.data.get(o.dataId).values,[w,b,v,I]=l,T=t.data.get(r.dataId).values,[N,$,S,C]=u,{batchSize:R,filterDepth:F,filterHeight:z,filterWidth:M,inChannels:B,inDepth:H,inHeight:P,inWidth:U,outChannels:G,outDepth:K,outHeight:Y,outWidth:X,strideDepth:ee,strideHeight:Q,strideWidth:oe}=h,ae=F-1-h.padInfo.front,de=z-1-h.padInfo.top,he=M-1-h.padInfo.left;for(let ge=0;ge<R;++ge)for(let ye=0;ye<B;++ye)for(let De=0;De<H;++De){const Pe=De-ae,Je=Math.max(0,Math.ceil(Pe/ee)),ze=Math.min(K,(F+Pe)/ee);for(let Oe=0;Oe<P;++Oe){const Ke=Oe-de,He=Math.max(0,Math.ceil(Ke/Q)),Xn=Math.min(Y,(z+Ke)/Q);for(let yt=0;yt<U;++yt){const cs=yt-he,Jt=Math.max(0,Math.ceil(cs/oe)),Us=Math.min(X,(M+cs)/oe);let xn=0;for(let Yn=Je;Yn<ze;++Yn){const ls=Yn*ee-Pe;for(let us=He;us<Xn;++us){const hs=us*Q-Ke;for(let Sr=Jt;Sr<Us;++Sr){const ou=Sr*oe-cs,ru=w*ge+b*Yn+v*us+I*Sr,nv=N*(F-1-ls)+$*(z-1-hs)+S*(M-1-ou)+C*ye;for(let Sa=0;Sa<G;++Sa){const sv=y[ru+Sa],ov=T[nv+Sa];xn+=sv*ov}}}}p[f*ge+m*De+g*Oe+x*yt+ye]=xn}}}return t.makeTensorInfo(d.shape,d.dtype,d.values)}const nM={kernelName:_h,backendName:"cpu",kernelFunc:tM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sM=Fe(gi,n=>Math.cos(n)),oM={kernelName:gi,backendName:"cpu",kernelFunc:sM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rM=Fe(xi,n=>Math.cosh(n)),iM={kernelName:xi,backendName:"cpu",kernelFunc:rM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aM(n){const{inputs:e,backend:t,attrs:s}=n,{image:o,boxes:r,boxInd:i}=e,{cropSize:a,method:c,extrapolationValue:l}=s,[u,h,d,p]=o.shape,f=r.shape[0],[m,g]=a,x=we([f,m,g,p],"float32"),y=t.data.get(r.dataId).values,w=t.data.get(i.dataId).values,b=t.data.get(o.dataId).values,v=ce(o.shape),I=ce(x.shape);for(let T=0;T<f;T++){const N=T*4,$=y[N],S=y[N+1],C=y[N+2],R=y[N+3],F=w[T];if(F>=u)continue;const z=m>1?(C-$)*(h-1)/(m-1):0,M=g>1?(R-S)*(d-1)/(g-1):0;for(let B=0;B<m;B++){const H=m>1?$*(h-1)+B*z:.5*($+C)*(h-1);if(H<0||H>h-1){for(let P=0;P<g;P++)for(let U=0;U<p;U++){const G=U+P*I[2]+B*I[1]+T*I[0];x.values[G]=l}continue}if(c==="bilinear"){const P=Math.floor(H),U=Math.ceil(H),G=H-P;for(let K=0;K<g;K++){const Y=g>1?S*(d-1)+K*M:.5*(S+R)*(d-1);if(Y<0||Y>d-1){for(let oe=0;oe<p;oe++){const ae=oe+K*I[2]+B*I[1]+T*I[0];x.values[ae]=l}continue}const X=Math.floor(Y),ee=Math.ceil(Y),Q=Y-X;for(let oe=0;oe<p;oe++){let ae=oe+X*v[2]+P*v[1]+F*v[0];const de=b[ae];ae=oe+ee*v[2]+P*v[1]+F*v[0];const he=b[ae];ae=oe+X*v[2]+U*v[1]+F*v[0];const ge=b[ae];ae=oe+ee*v[2]+U*v[1]+F*v[0];const ye=b[ae],De=de+(he-de)*Q,Pe=ge+(ye-ge)*Q;ae=oe+K*I[2]+B*I[1]+T*I[0],x.values[ae]=De+(Pe-De)*G}}}else for(let P=0;P<g;++P){const U=g>1?S*(d-1)+P*M:.5*(S+R)*(d-1);if(U<0||U>d-1){for(let Y=0;Y<p;Y++){const X=Y+P*I[2]+B*I[1]+T*I[0];x.values[X]=l}continue}const G=Math.round(U),K=Math.round(H);for(let Y=0;Y<p;Y++){const X=Y+G*v[2]+K*v[1]+F*v[0],ee=Y+P*I[2]+B*I[1]+T*I[0];x.values[ee]=b[X]}}}}return t.makeTensorInfo(x.shape,x.dtype,x.values)}const cM={kernelName:Ph,backendName:"cpu",kernelFunc:aM};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lM(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,exclusive:i,reverse:a}=s;re(o,"cumprod");const c=Ye([r],o.shape.length);let l=o;c!=null&&(l=Vt({inputs:{x:o},backend:t,attrs:{perm:c}}));const u=tt(1,o.shape.length)[0];if(u!==l.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${u}`);const h=Kt(l.dtype,"int32"),d=Ih(j(l.shape),h),p=t.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=a?(x,y)=>x+f-y-1:(x,y)=>x+y;for(let x=0;x<p.length;x+=f)for(let y=0;y<f;y++){const w=m(x,y);if(y===0)d[w]=i?1:p[w];else{const b=m(x,y-1);d[w]=i?p[b]*d[b]:p[w]*d[b]}}const g=t.makeTensorInfo(l.shape,h,d);if(c!=null){const x=_s(c),y=Vt({inputs:{x:g},backend:t,attrs:{perm:x}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(l),y}return g}const uM={kernelName:Lh,backendName:"cpu",kernelFunc:lM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hM(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,exclusive:i,reverse:a}=s;re(o,"cumsum");const c=Ye([r],o.shape.length);let l=o;c!=null&&(l=Vt({inputs:{x:o},backend:t,attrs:{perm:c}}));const u=tt(1,o.shape.length)[0];if(u!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${u}`);const h=Kt(l.dtype,"int32"),d=St(j(l.shape),h),p=t.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=a?(x,y)=>x+f-y-1:(x,y)=>x+y;for(let x=0;x<p.length;x+=f)for(let y=0;y<f;y++){const w=m(x,y);if(y===0)d[w]=i?0:p[w];else{const b=m(x,y-1);d[w]=i?p[b]+d[b]:p[w]+d[b]}}const g=t.makeTensorInfo(l.shape,h,d);if(c!=null){const x=_s(c),y=Vt({inputs:{x:g},backend:t,attrs:{perm:x}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(l),y}return g}const dM={kernelName:Vc,backendName:"cpu",kernelFunc:hM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pM(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,weights:r}=e,{size:i,binaryOutput:a}=s;if(o.shape.length===1){const c=t.data.get(o.dataId).values,l=t.data.get(r.dataId).values,u=Wp(c,l,r.dtype,r.shape,i);return t.makeTensorInfo([i],r.dtype,u)}else if(o.shape.length===2){const c=t.bufferSync(o),l=t.bufferSync(r),u=J0(c,l,i,a);return t.makeTensorInfo(u.shape,r.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}const fM={kernelName:zh,backendName:"cpu",kernelFunc:pM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mM(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{blockSize:r,dataFormat:i}=s;k(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);const a=o.shape[0],c=o.shape[1],l=o.shape[2],u=o.shape[3],h=c*r,d=l*r,p=u/(r*r),f=t.data.get(o.dataId).values,m=new Float32Array(a*h*d*p);let g=0;for(let x=0;x<a;++x)for(let y=0;y<h;++y){const w=Math.floor(y/r),b=y%r;for(let v=0;v<d;++v){const I=Math.floor(v/r),T=v%r,N=(b*r+T)*p;for(let $=0;$<p;++$){const C=$+N+u*(I+l*(w+c*x));m[g++]=f[C]}}}return t.makeTensorInfo([a,h,d,p],o.dtype,m)}const gM={kernelName:Bh,backendName:"cpu",kernelFunc:mM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J1(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:r}=e,{strides:i,pad:a,dilations:c,dimRoundingMode:l}=s;re([o,r],"depthwiseConv2DNative");const u=ce(o.shape),h=ce(r.shape);let d=c;d==null&&(d=[1,1]),k(Tt(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);const p=vt(o.shape,r.shape,i,d,a,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:x,padInfo:y}=p,w=y.left,b=y.top,v=p.outChannels/p.inChannels,I=new wt(p.outShape,o.dtype),T=t.data.get(o.dataId).values,N=t.data.get(r.dataId).values,$=I.values;for(let S=0;S<p.batchSize;++S){const C=S*u[0],R=S*I.strides[0];for(let F=0;F<p.outHeight;++F){const z=R+F*I.strides[1],M=F*p.strideHeight-b;for(let B=0;B<f;++B){const H=M+B*g;if(H<0||H>=p.inHeight)continue;const P=B*h[0],U=C+H*u[1];for(let G=0;G<p.outWidth;++G){const K=z+G*I.strides[2],Y=G*p.strideWidth-w;for(let X=0;X<m;++X){const ee=Y+X*x;if(ee<0||ee>=p.inWidth)continue;const Q=P+X*h[1],oe=U+ee*p.inChannels;let ae=K,de=Q;for(let he=0;he<p.inChannels;++he){const ge=T[oe+he];for(let ye=0;ye<v;++ye)$[ae+ye]+=ge*N[de+ye];ae+=v,de+=v}}}}}}return t.makeTensorInfo(I.shape,I.dtype,I.values)}const xM={kernelName:Wc,backendName:"cpu",kernelFunc:J1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yM(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,dy:r}=e,{strides:i,dilations:a,pad:c,dimRoundingMode:l,filterShape:u}=s;re([o,r],"depthwiseConv2dNativeBackpropFilter");const h=vt(o.shape,u,i,a,c,l,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new wt(h.filterShape,"float32"),x=h.padInfo.left,y=h.padInfo.top,w=h.outChannels/h.inChannels,b=t.data.get(o.dataId).values,v=new wt(o.shape,o.dtype,b),I=t.data.get(r.dataId).values,T=new wt(r.shape,r.dtype,I);for(let N=0;N<f;++N){const $=Math.max(0,Math.ceil((y-N)/d)),S=Math.min(h.outHeight,(h.inHeight+y-N)/d);for(let C=0;C<m;++C){const R=Math.max(0,Math.ceil((x-C)/p)),F=Math.min(h.outWidth,(h.inWidth+x-C)/p);for(let z=0;z<h.outChannels;++z){const M=Math.trunc(z/w),B=z%w;let H=0;for(let P=0;P<h.batchSize;++P)for(let U=$;U<S;++U){const G=N+U*d-y;for(let K=R;K<F;++K){const Y=C+K*p-x;H+=v.get(P,G,Y,M)*T.get(P,U,K,z)}}g.set(H,N,C,M,B)}}}return t.makeTensorInfo(g.shape,g.dtype,g.values)}const bM={kernelName:Vh,backendName:"cpu",kernelFunc:yM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wM(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,filter:r}=e,{strides:i,dilations:a,pad:c,dimRoundingMode:l,inputShape:u}=s;re([o,r],"depthwiseConv2DNativeBackpropInput");const h=ce(o.shape),d=ce(r.shape),p=vt(u,r.shape,i,a,c,l,!0),f=new wt(p.inShape,"float32"),m=f.values,[g,x,y]=f.strides,w=t.data.get(o.dataId).values,[b,v,I]=h,T=t.data.get(r.dataId).values,[N,$,S]=d,{batchSize:C,filterHeight:R,filterWidth:F,inChannels:z,inHeight:M,inWidth:B,outChannels:H,outHeight:P,outWidth:U,strideHeight:G,strideWidth:K}=p,Y=R-1-p.padInfo.top,X=F-1-p.padInfo.left,ee=H/z;for(let Q=0;Q<C;++Q)for(let oe=0;oe<z;++oe)for(let ae=0;ae<M;++ae){const de=ae-Y,he=Math.max(0,Math.ceil(de/G)),ge=Math.min(P,(R+de)/G);for(let ye=0;ye<B;++ye){const De=ye-X,Pe=Math.max(0,Math.ceil(De/K)),Je=Math.min(U,(F+De)/K);let ze=0;for(let Oe=he;Oe<ge;++Oe){const Ke=Oe*G-de;for(let He=Pe;He<Je;++He){const Xn=He*K-De,yt=b*Q+v*Oe+I*He,cs=N*(R-1-Ke)+$*(F-1-Xn)+S*oe;for(let Jt=0;Jt<ee;++Jt){const Us=oe*ee+Jt,xn=w[yt+Us],Yn=T[cs+Jt];ze+=xn*Yn}}}m[g*Q+x*ae+y*ye+oe]=ze}}return t.makeTensorInfo(f.shape,f.dtype,f.values)}const vM={kernelName:Wh,backendName:"cpu",kernelFunc:wM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CM(n){const{inputs:e,backend:t}=n,{x:s}=e,o=j(s.shape),r=t.data.get(s.dataId).values,i=we([o,o],s.dtype),a=i.values;for(let l=0;l<r.length;l++)a[l*o+l]=r[l];const c=[...s.shape,...s.shape];return t.makeTensorInfo(c,i.dtype,i.values)}const IM={kernelName:$g,backendName:"cpu",kernelFunc:CM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $M={kernelName:Uc,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:o}=n,{strides:r,pad:i,dilations:a}=t,c=e,l=c.data.get(s.dataId).values,u=s.shape.length,h=c.data.get(o.dataId).values,d=o.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:x,outWidth:y,padInfo:w,strideHeight:b,strideWidth:v,filterHeight:I,filterWidth:T,dilationHeight:N,dilationWidth:$,outShape:S}=sa(s.shape,o.shape,r,i,"NHWC",a),C=j(S),R=S.length,F=Ze(s.dtype,C);for(let M=0;M<p;++M)for(let B=0;B<x;++B){const H=B*b-w.top;for(let P=0;P<y;++P){const U=P*v-w.left;for(let G=0;G<g;++G){let K=Number.MIN_SAFE_INTEGER;for(let X=0;X<I;++X){const ee=H+X*N;if(ee>=0&&ee<f)for(let Q=0;Q<T;++Q){const oe=U+Q*$;if(oe>=0&&oe<m){const ae=Ln([M,ee,oe,G],u,ce(s.shape)),de=Ln([X,Q,G],d,ce(o.shape)),he=l[ae]+h[de];he>K&&(K=he)}}}const Y=Ln([M,B,P,G],R,ce(S));F[Y]=K}}}return{dataId:c.write(wo(F,s.dtype),S,s.dtype),shape:S,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SM={kernelName:Mu,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:o,dy:r}=n,{strides:i,pad:a,dilations:c}=t,l=e,u=$n(s.shape,l.data.get(s.dataId).values),h=$n(o.shape,l.data.get(o.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:x,padInfo:y,strideHeight:w,strideWidth:b,filterHeight:v,filterWidth:I,dilationHeight:T,dilationWidth:N,outShape:$}=sa(s.shape,o.shape,i,a,"NHWC",c);k(r.rank===$.length,()=>`Error in ${Mu}, dy must have the same rank as output ${$.length}, but got ${r.rank}`);const S=$n($,l.data.get(r.dataId).values),C=wg(o.shape,o.dtype);for(let F=0;F<d;++F)for(let z=0;z<g;++z){const M=z*w-y.top;for(let B=0;B<x;++B){const H=B*b-y.left;for(let P=0;P<m;++P){let U=Number.MIN_SAFE_INTEGER,G=0,K=0;for(let Y=0;Y<v;++Y){const X=M+Y*T;if(X>=0&&X<p)for(let ee=0;ee<I;++ee){const Q=H+ee*N;if(Q>=0&&Q<f){const oe=u[F][X][Q][P]+h[Y][ee][P];oe>U&&(U=oe,G=Y,K=ee)}}}C[G][K][P]+=S[F][z][B][P]}}}return{dataId:l.write(wo(C,s.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kM={kernelName:Ou,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:o,dy:r}=n,{strides:i,pad:a,dilations:c}=t,l=e,u=$n(s.shape,l.data.get(s.dataId).values),h=$n(o.shape,l.data.get(o.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:x,padInfo:y,strideHeight:w,strideWidth:b,filterHeight:v,filterWidth:I,dilationHeight:T,dilationWidth:N,outShape:$}=sa(s.shape,o.shape,i,a,"NHWC",c);k(r.rank===$.length,()=>`Error in ${Ou}, dy must have the same rank as output ${$.length}, but got ${r.rank}`);const S=$n($,l.data.get(r.dataId).values),C=wg(s.shape,s.dtype);for(let F=0;F<d;++F)for(let z=0;z<g;++z){const M=z*w-y.top;for(let B=0;B<x;++B){const H=B*b-y.left;for(let P=0;P<m;++P){let U=Number.MIN_SAFE_INTEGER,G=M<0?0:M,K=H<0?0:H;for(let Y=0;Y<v;++Y){const X=M+Y*T;if(X>=0&&X<p)for(let ee=0;ee<I;++ee){const Q=H+ee*N;if(Q>=0&&Q<f){const oe=u[F][X][Q][P]+h[Y][ee][P];oe>U&&(U=oe,G=X,K=Q)}}}C[F][G][K][P]+=S[F][z][B][P]}}}return{dataId:l.write(wo(C,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TM(n){const{inputs:e,backend:t,attrs:s}=n,{image:o}=e,{canvas:r,options:i}=s,{contextOptions:a,imageOptions:c}=i||{},l=c?.alpha||1,u=a?.contextType||"2d";if(u!=="2d")throw new Error(`Context type ${a.contextType} is not supported by the CPU backend.`);const h=r.getContext(u,a?.contextAttributes||{});if(h==null)throw new Error(`Could not get the context with ${u} type.`);const[d,p]=o.shape.slice(0,2),f=o.shape.length===2?1:o.shape[2],m=t.data.get(o.dataId).values,g=o.dtype==="float32"?255:1,x=new Uint8ClampedArray(p*d*4);for(let w=0;w<d*p;++w){const b=[0,0,0,255*l];for(let I=0;I<f;I++){const T=m[w*f+I];if(o.dtype==="float32"){if(T<0||T>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${T}.`)}else if(o.dtype==="int32"&&(T<0||T>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${T}.`);f===1?(b[0]=T*g,b[1]=T*g,b[2]=T*g):b[I]=T*g}const v=w*4;x[v+0]=Math.round(b[0]),x[v+1]=Math.round(b[1]),x[v+2]=Math.round(b[2]),x[v+3]=Math.round(b[3])}r.width=p,r.height=d;const y=new ImageData(x,p,d);return h.putImageData(y,0,0),o}const NM={kernelName:FC,backendName:"cpu",kernelFunc:TM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ba(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,keepDims:i}=s;re(o,"sum");let a;o.dtype==="bool"?a=Ds({inputs:{x:o},backend:t,attrs:{dtype:"int32"}}):a=jn({inputs:{x:o},backend:t});const c=a.shape.length,l=ve(r,a.shape),u=Ye(l,c);let h=l,d=a;u!=null&&(d=Vt({inputs:{x:a},backend:t,attrs:{perm:u}}),h=tt(h.length,c)),Ct("sum",h,d.shape.length);const[p,f]=xt(d.shape,h),m=Kt(d.dtype,"int32");let g=yc(t,p,m);const x=j(f),y=t.data.get(g.dataId).values,w=t.data.get(d.dataId).values;for(let b=0;b<y.length;++b){const v=b*x;let I=0;for(let T=0;T<x;++T)I+=w[v+T];y[b]=I}if(i){const b=rt(g.shape,l),v=g;g=Ue({inputs:{x:g},backend:t,attrs:{shape:b}}),t.disposeIntermediateTensorInfo(v)}return t.disposeIntermediateTensorInfo(a),u!=null&&t.disposeIntermediateTensorInfo(d),g}const EM={kernelName:Cl,backendName:"cpu",kernelFunc:ba};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RM(n){const{inputs:e,backend:t,attrs:s}=n,{equation:o}=s,r=e,{allDims:i,summedDims:a,idDims:c}=hp(o,r.length);pp(i.length,c,r);const{path:l,steps:u}=fp(a,c),h=u.length;let d=null,p=i.length;const f=[];for(let m=0;m<h;++m){for(const g of u[m]){const{permutationIndices:x,expandDims:y}=dp(p,c[g]);let w;mp(x)?w=r[g]:(w=Vt({inputs:{x:r[g]},backend:t,attrs:{perm:x}}),f.push(w));const b=w.shape.slice();for(let v=0;v<y.length;++v)b.splice(y[v],0,1);Re(w.shape,b)||(w=Ue({inputs:{x:w},backend:t,attrs:{shape:b}}),f.push(w)),d===null?d=w:(d=Zl({inputs:{a:w,b:d},backend:t}),f.push(d))}m<h-1&&(l[m]>=0&&(d=ba({inputs:{x:d},backend:t,attrs:{axis:l[m]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&t.disposeIntermediateTensorInfo(m);return d}const DM={kernelName:Uh,backendName:"cpu",kernelFunc:RM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AM(n){const{inputs:e,backend:t}=n,{dy:s,y:o}=e;re([s,o],"eluGrad");const r=new Float32Array(j(o.shape)),i=t.data.get(o.dataId).values,a=t.data.get(s.dataId).values;for(let c=0;c<i.length;++c){const l=i[c];l>=0?r[c]=a[c]:r[c]=a[c]*(l+1)}return t.makeTensorInfo(o.shape,"float32",r)}const FM={kernelName:Gh,backendName:"cpu",kernelFunc:AM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OM=op,MM=rp,_M=ip,LM=ap,PM=cp,zM=lp,BM=Fe(wi,n=>{const e=Math.sign(n),t=Math.abs(n),s=1/(1+OM*t);return e*(1-((((zM*s+PM)*s+LM)*s+_M)*s+MM)*s*Math.exp(-t*t))}),VM={kernelName:wi,backendName:"cpu",kernelFunc:BM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vc(n){const{inputs:e,backend:t,attrs:s}=n,{input:o}=e,{dim:r}=s,i=o.shape.length,a=o.shape.slice();let c=r;return r<0&&(k(-(i+1)<=r,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),c=i+r+1),a.splice(c,0,1),Ue({inputs:{x:o},backend:t,attrs:{shape:a}})}const WM={kernelName:Hc,backendName:"cpu",kernelFunc:vc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UM=st((n,e)=>n/e),Kp=pt(yi,UM),ih={kernelName:yi,backendName:"cpu",kernelFunc:Kp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z1(n,e,t){const s=n.shape,o=s[0],r=s[1],i=t.data.get(n.dataId),a=i.complexTensorInfos.real,c=i.complexTensorInfos.imag,l=[o,r],u=j(l),h=$t("float32",u),d=$t("float32",u);for(let g=0;g<o;g++){const x=yo({inputs:{x:a},backend:t,attrs:{begin:[g,0],size:[1,r]}}),y=yo({inputs:{x:c},backend:t,attrs:{begin:[g,0],size:[1,r]}}),w=Ht({inputs:{real:x,imag:y},backend:t}),{real:b,imag:v}=GM(w,e,t),I=ns(b,v);for(let T=0;T<r;T++){const N=up(I,T);h[g*r+T]=N.real,d[g*r+T]=N.imag}t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(w)}const p=t.makeTensorInfo(l,"float32",h),f=t.makeTensorInfo(l,"float32",d),m=Ht({inputs:{real:p,imag:f},backend:t});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),m}function GM(n,e,t){const s=j(n.shape),o=t.data.get(n.dataId),r=t.data.get(o.complexTensorInfos.real.dataId).values,i=t.data.get(o.complexTensorInfos.imag.dataId).values;if(HM(s)){const a=ah(r,i,s,e,t),c=[n.shape[0],n.shape[1]];if(e){const l=t.makeTensorInfo(c,"float32",a.real),u=t.makeTensorInfo(c,"float32",a.imag),h=t.makeTensorInfo([],"float32",Fs(s,"float32")),d=jn({inputs:{x:h},backend:t}),p=ih.kernelFunc({inputs:{a:l,b:h},backend:t}),f=ih.kernelFunc({inputs:{a:u,b:d},backend:t}),m=t.data.get(p.dataId).values,g=t.data.get(f.dataId).values;return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return a}else{const a=ns(r,i),c=qM(a,s,e);return py(c)}}function HM(n){return(n&n-1)===0}function ah(n,e,t,s,o){if(t===1)return{real:n,imag:e};const r=ns(n,e),i=t/2,a=fy(r),c=a.real,l=a.imag,u=[c.length],h=o.makeTensorInfo(u,"float32",c),d=o.makeTensorInfo(u,"float32",l),p=Ht({inputs:{real:h,imag:d},backend:o}),f=my(r),m=f.real,g=f.imag,x=[m.length],y=o.makeTensorInfo(x,"float32",m),w=o.makeTensorInfo(x,"float32",g),b=Ht({inputs:{real:y,imag:w},backend:o}),v=ah(c,l,i,s,o),I=v.real,T=v.imag,N=[I.length],$=o.makeTensorInfo(N,"float32",I),S=o.makeTensorInfo(N,"float32",T),C=Ht({inputs:{real:$,imag:S},backend:o}),R=ah(m,g,i,s,o),F=R.real,z=R.imag,M=[F.length],B=o.makeTensorInfo(M,"float32",F),H=o.makeTensorInfo(M,"float32",z),P=Ht({inputs:{real:B,imag:H},backend:o}),U=xy(t,s),G=[U.real.length],K=o.makeTensorInfo(G,"float32",U.real),Y=o.makeTensorInfo(G,"float32",U.imag),X=Ht({inputs:{real:K,imag:Y},backend:o}),ee=Zl({inputs:{a:X,b:P},backend:o}),Q=nr({inputs:{a:C,b:ee},backend:o}),oe=qp({inputs:{a:C,b:ee},backend:o}),ae=xo({inputs:{input:Q},backend:o}),de=xo({inputs:{input:oe},backend:o}),he=sr({inputs:{input:Q},backend:o}),ge=sr({inputs:{input:oe},backend:o}),ye=or({inputs:[ae,de],backend:o,attrs:{axis:0}}),De=or({inputs:[he,ge],backend:o,attrs:{axis:0}}),Pe=o.data.get(ye.dataId).values,Je=o.data.get(De.dataId).values;return o.disposeIntermediateTensorInfo(h),o.disposeIntermediateTensorInfo(d),o.disposeIntermediateTensorInfo(p),o.disposeIntermediateTensorInfo(y),o.disposeIntermediateTensorInfo(w),o.disposeIntermediateTensorInfo(b),o.disposeIntermediateTensorInfo($),o.disposeIntermediateTensorInfo(S),o.disposeIntermediateTensorInfo(C),o.disposeIntermediateTensorInfo(B),o.disposeIntermediateTensorInfo(H),o.disposeIntermediateTensorInfo(P),o.disposeIntermediateTensorInfo(K),o.disposeIntermediateTensorInfo(Y),o.disposeIntermediateTensorInfo(X),o.disposeIntermediateTensorInfo(ee),o.disposeIntermediateTensorInfo(Q),o.disposeIntermediateTensorInfo(oe),o.disposeIntermediateTensorInfo(ae),o.disposeIntermediateTensorInfo(he),o.disposeIntermediateTensorInfo(de),o.disposeIntermediateTensorInfo(ge),o.disposeIntermediateTensorInfo(ye),o.disposeIntermediateTensorInfo(De),{real:Pe,imag:Je}}function qM(n,e,t){const s=new Float32Array(e*2);for(let o=0;o<e;o++){let r=0,i=0;for(let a=0;a<e;a++){const c=yy(o*a,e,t),l=up(n,a);r+=l.real*c.real-l.imag*c.imag,i+=l.real*c.imag+l.imag*c.real}t&&(r/=e,i/=e),gy(s,r,i,o)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jM(n){const{inputs:e,backend:t}=n,{input:s}=e,o=j(s.shape),r=s.shape[s.shape.length-1],i=o/r,a=Ue({inputs:{x:s},backend:t,attrs:{shape:[i,r]}}),c=Z1(a,!1,t),l=Ue({inputs:{x:c},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(c),l}const KM={kernelName:Hh,backendName:"cpu",kernelFunc:jM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xp(n){const{backend:e,attrs:t}=n,{shape:s,value:o,dtype:r}=t,i=r||lr(o),a=Ze(i,j(s));return YM(a,o,i),e.makeTensorInfo(s,i,a)}const XM={kernelName:qh,backendName:"cpu",kernelFunc:Xp};function YM(n,e,t){n.fill(e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JM={kernelName:jh,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,o=t,r=$t(s.dtype,j(s.shape)),[i,a,c,l]=s.shape,u=o.data.get(s.dataId).values;for(let d=0;d<i;d++){const p=d*c*a*l;for(let f=0;f<a;f++){const m=f*(c*l);for(let g=0;g<c;g++){const x=g*l;for(let y=0;y<l;y++){const w=Math.round(c-g-1),b=p+m+x+y;let v=u[b];if(w>=0&&w<c){const I=w*l,T=p+m+I+y;v=u[T]}r[b]=v}}}}return{dataId:o.write(r,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZM(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:r,bias:i,preluActivationWeights:a}=e,{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let m=Y1({inputs:{x:o,filter:r},backend:t,attrs:{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d}});if(i){const g=m;if(u==="NCHW"&&i.shape.length===1&&i.shape[0]!==1){const x=Ue({inputs:{x:i},backend:t,attrs:{shape:[i.shape[0],1,1]}});m=nr({inputs:{a:m,b:x},backend:t}),t.disposeIntermediateTensorInfo(x)}else m=nr({inputs:{a:m,b:i},backend:t});t.disposeIntermediateTensorInfo(g)}if(p){const g=m;if(u==="NCHW"&&p==="prelu"&&a.shape.length===1&&a.shape[0]!==1){const x=Ue({inputs:{x:a},backend:t,attrs:{shape:[a.shape[0],1,1]}});m=wc(t,m,p,x,f),t.disposeIntermediateTensorInfo(x)}else m=wc(t,m,p,a,f);t.disposeIntermediateTensorInfo(g)}return m}const QM={kernelName:Qa,backendName:"cpu",kernelFunc:ZM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e_(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:r,bias:i,preluActivationWeights:a}=e,{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let m=J1({inputs:{x:o,filter:r},backend:t,attrs:{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d}});if(i){const g=m;m=nr({inputs:{a:m,b:i},backend:t}),t.disposeIntermediateTensorInfo(g)}if(p){const g=m;m=wc(t,m,p,a,f),t.disposeIntermediateTensorInfo(g)}return m}const t_={kernelName:Ug,backendName:"cpu",kernelFunc:e_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n_(n){const{inputs:e,backend:t}=n,{params:s,indices:o}=e,r=j(s.shape),i=o.shape,a=i[i.length-1],[c,l,u,h]=jd(s,o);if(l===0)return t.makeTensorInfo(c,s.dtype,[]);const d=t.data.get(o.dataId).values,p=t.bufferSync(s),f=c1(d,p,s.dtype,l,a,u,h,s.shape,r);return t.makeTensorInfo(c,s.dtype,f.values)}const s_={kernelName:Sg,backendName:"cpu",kernelFunc:n_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o_(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,indices:r}=e,{axis:i,batchDims:a}=s;re([o,r],"gatherV2");const c=ve(i,o.shape)[0],l=t.data.get(r.dataId).values,u=o.shape[c];for(let b=0;b<l.length;++b){const v=l[b];k(v<=u-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${u-1}]`)}let h=a;a==null&&(h=0);const d=j(r.shape),p=xp(o,r,c,h),f=Ue({inputs:{x:o},backend:t,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=Ue({inputs:{x:r},backend:t,attrs:{shape:[p.batchSize,d/p.batchSize]}}),g=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],x=t.bufferSync(m),y=t.bufferSync(f),w=l1(y,x,g);return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),t.makeTensorInfo(p.outputShape,w.dtype,w.values)}const r_={kernelName:jc,backendName:"cpu",kernelFunc:o_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i_(n){const{inputs:e,backend:t}=n,{input:s}=e,o=j(s.shape),r=s.shape[s.shape.length-1],i=o/r,a=Ue({inputs:{x:s},backend:t,attrs:{shape:[i,r]}}),c=Z1(a,!0,t),l=Ue({inputs:{x:c},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(c),l}const a_={kernelName:Kh,backendName:"cpu",kernelFunc:i_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c_=Fe(Ti,n=>Number.isFinite(n)?1:0,"bool"),l_={kernelName:Ti,backendName:"cpu",kernelFunc:c_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u_=Fe(Ni,n=>Math.abs(n)===1/0?1:0,"bool"),h_={kernelName:Ni,backendName:"cpu",kernelFunc:u_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d_=Fe(Ei,n=>Number.isNaN(n)?1:0,"bool"),p_={kernelName:Ei,backendName:"cpu",kernelFunc:d_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f_(n){const{backend:e,attrs:t}=n,{start:s,stop:o,num:r}=t,i=f1(s,o,r);return e.makeTensorInfo([i.length],"float32",i)}const m_={kernelName:kg,backendName:"cpu",kernelFunc:f_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g_=Fe(Di,n=>Math.log1p(n)),x_={kernelName:Di,backendName:"cpu",kernelFunc:g_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y_=st((n,e)=>n&&e),b_=pt(Zc,y_,null,"bool"),w_={kernelName:Zc,backendName:"cpu",kernelFunc:b_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v_=Fe(Qc,n=>n?0:1,"bool"),C_={kernelName:Qc,backendName:"cpu",kernelFunc:v_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I_=st((n,e)=>n||e),$_=pt(el,I_,null,"bool"),S_={kernelName:el,backendName:"cpu",kernelFunc:$_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k_(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{depthRadius:r,bias:i,alpha:a,beta:c}=s;re(o,"LRN");const l=o.shape[3],u=l-1,h=t.data.get(o.dataId).values,d=j(o.shape),p=new Float32Array(d);function f(m){const g=m%l;let x=m-g+Math.max(0,g-r);const y=m-g+Math.min(g+r,u);let w=0;for(;x<=y;x++){const b=h[x];w+=b*b}return w}for(let m=0;m<d;m++){const g=f(m),x=h[m]*Math.pow(i+a*g,-c);p[m]=x}return t.makeTensorInfo(o.shape,o.dtype,p)}const T_={kernelName:tl,backendName:"cpu",kernelFunc:k_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N_(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,y:r,dy:i}=e,{depthRadius:a,bias:c,alpha:l,beta:u}=s;re(i,"LRNGrad");const h=j(i.shape),d=i.shape[3],p=t.data.get(i.dataId).values,f=t.data.get(o.dataId).values,m=t.data.get(r.dataId).values,g=new Float32Array(h),x=h;for(let y=0;y<x;y++){const w=y%d,b=y-w+Math.max(0,w-a),v=y-w+Math.min(d,w+a+1);let I=0;for(let T=b;T<v;T++)I+=Math.pow(f[T],2);I=l*I+c;for(let T=b;T<v;T++){let N=-2*l*u*f[T]*m[y]/I;y===T&&(N+=Math.pow(I,-u)),N*=p[y],g[T]+=N}}return t.makeTensorInfo(i.shape,o.dtype,g)}const E_={kernelName:Yh,backendName:"cpu",kernelFunc:N_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q1(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{reductionIndices:r,keepDims:i}=s,a=t;let c=o.shape;const l=c.length,u=ve(r,c);let h=u;const d=Ye(h,l);let p=a.data.get(o.dataId).values;if(d!=null){const b=new Array(l);for(let v=0;v<b.length;v++)b[v]=c[d[v]];p=Gp(p,c,o.dtype,d,b),h=tt(h.length,l),c=b}re(o,"max"),Ct("max",h,l);const[f,m]=xt(c,h),g=j(m),x=g1(p,g,f,o.dtype),y=a.write(x,f,o.dtype);let w=f;return i&&(w=rt(f,u)),{dataId:y,shape:w,dtype:o.dtype}}const R_={kernelName:nl,backendName:"cpu",kernelFunc:Q1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D_(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e;re(o,"maxPool");const{filterSize:r,strides:i,pad:a,dimRoundingMode:c}=s,l=1;k(Tt(i,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);const u=fn(o.shape,r,i,l,a,c);let h;if(u.filterWidth===1&&u.filterHeight===1&&Re(u.inShape,u.outShape))h=jn({inputs:{x:o},backend:t});else{const d=t.data.get(o.dataId).values,p=ce(o.shape),f=jp(d,o.shape,o.dtype,p,u,"max");h=t.makeTensorInfo(u.outShape,o.dtype,f.values)}return h}const A_={kernelName:sl,backendName:"cpu",kernelFunc:D_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F_(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{filterSize:r,strides:i,pad:a,dimRoundingMode:c,dataFormat:l}=s;re(o,"maxPool3d");const u=rs(o.shape,r,i,1,a,c,l),h=t.data.get(o.dataId).values,d=X1(h,o.shape,o.dtype,ce(o.shape),u,"max");return t.makeTensorInfo(d.shape,"float32",d.values)}const O_={kernelName:ol,backendName:"cpu",kernelFunc:F_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M_(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,input:r}=e,{filterSize:i,strides:a,pad:c,dimRoundingMode:l}=s;re([o,r],"maxPool3DGrad");const u=rs(r.shape,i,a,1,c,l),h=t.bufferSync(r),d=IO(h,u),p=u.strideDepth,f=u.strideHeight,m=u.strideWidth,g=u.dilationDepth,x=u.dilationHeight,y=u.dilationWidth,w=u.effectiveFilterDepth,b=u.effectiveFilterHeight,v=u.effectiveFilterWidth,I=w-1-u.padInfo.front,T=v-1-u.padInfo.left,N=b-1-u.padInfo.top,$=we(r.shape,"float32"),S=t.bufferSync(o);for(let C=0;C<u.batchSize;++C)for(let R=0;R<u.inChannels;++R)for(let F=0;F<u.inDepth;++F)for(let z=0;z<u.inHeight;++z)for(let M=0;M<u.inWidth;++M){const B=F-I,H=z-N,P=M-T;let U=0;for(let G=0;G<w;G+=g){const K=(B+G)/p;if(!(K<0||K>=u.outDepth||Math.floor(K)!==K))for(let Y=0;Y<b;Y+=x){const X=(H+Y)/f;if(!(X<0||X>=u.outHeight||Math.floor(X)!==X))for(let ee=0;ee<v;ee+=y){const Q=(P+ee)/m;if(Q<0||Q>=u.outWidth||Math.floor(Q)!==Q)continue;const oe=w*b*v-1-d.get(C,K,X,Q,R),ae=G*b*v+Y*v+ee,de=oe===ae?1:0;if(de===0)continue;const he=S.get(C,K,X,Q,R);U+=he*de}}}$.set(U,C,F,z,M,R)}return t.makeTensorInfo($.shape,$.dtype,$.values)}const __={kernelName:Zh,backendName:"cpu",kernelFunc:M_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L_(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,input:r,output:i}=e,a=r;re([r,i],"maxPoolGrad");const{filterSize:c,strides:l,pad:u,dimRoundingMode:h}=s,d=fn(a.shape,c,l,1,u,h),p=t.data.get(a.dataId).values,f=we(d.outShape,a.dtype,K1(p,a.shape,a.dtype,d).values),m=d.strideHeight,g=d.strideWidth,x=d.dilationHeight,y=d.dilationWidth,w=d.effectiveFilterHeight,b=d.effectiveFilterWidth,v=b-1-d.padInfo.left,I=w-1-d.padInfo.top,T=we(a.shape,"float32"),N=t.data.get(o.dataId).values,$=we(o.shape,"float32",N);for(let S=0;S<d.batchSize;++S)for(let C=0;C<d.inChannels;++C)for(let R=0;R<d.inHeight;++R)for(let F=0;F<d.inWidth;++F){const z=R-I,M=F-v;let B=0;for(let H=0;H<w;H+=x){const P=(z+H)/m;if(!(P<0||P>=d.outHeight||Math.floor(P)!==P))for(let U=0;U<b;U+=y){const G=(M+U)/g;if(G<0||G>=d.outWidth||Math.floor(G)!==G)continue;const K=w*b-1-f.get(S,P,G,C),Y=H*b+U,X=K===Y?1:0;if(X===0)continue;const ee=$.get(S,P,G,C);B+=ee*X}}T.set(B,S,R,F,C)}return t.makeTensorInfo(T.shape,T.dtype,T.values)}const P_={kernelName:Jh,backendName:"cpu",kernelFunc:L_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z_(n,e,t,s,o){const r=ce(e),i=jp(n,e,t,r,o,"max"),a=K1(n,e,t,o,!0,s);return[i.values,a.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B_={kernelName:Tg,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:o,strides:r,pad:i,includeBatchInIndex:a}=e,c=t;re(s,"MaxPoolWithArgmax");const l=c.data.get(s.dataId).values,u=fn(s.shape,o,r,[1,1],i),[h,d]=z_(l,s.shape,s.dtype,a,u),p=c.write(h,u.outShape,s.dtype),f=c.write(d,u.outShape,s.dtype);return[{dataId:p,shape:u.outShape,dtype:s.dtype},{dataId:f,shape:u.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V_(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,keepDims:i}=s,a=ve(r,o.shape),l=xt(o.shape,a)[1],u=j(l),h=[],d=t.makeTensorInfo([],"float32",new Float32Array([u]));h.push(d);const p=Ds({inputs:{x:o},backend:t,attrs:{dtype:"float32"}});h.push(p);const f=Kp({inputs:{a:p,b:d},backend:t});h.push(f);const m=ba({inputs:{x:f},backend:t,attrs:{axis:r,keepDims:i}});return h.forEach(g=>t.disposeIntermediateTensorInfo(g)),m}const W_={kernelName:rl,backendName:"cpu",kernelFunc:V_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U_(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,keepDims:i}=s;re(o,"min");const a=ve(r,o.shape);let c=a;const l=Ye(c,o.shape.length);let u=o;l!=null&&(u=Vt({inputs:{x:o},backend:t,attrs:{perm:l}}),c=tt(c.length,o.shape.length)),Ct("min",c,u.shape.length);const[h,d]=xt(u.shape,c),p=j(d),f=St(j(h),u.dtype),m=t.data.get(u.dataId).values;for(let x=0;x<f.length;++x){const y=x*p;let w=m[y];for(let b=0;b<p;++b){const v=m[y+b];(Number.isNaN(v)||v<w)&&(w=v)}f[x]=w}l!=null&&t.disposeIntermediateTensorInfo(u);const g=t.makeTensorInfo(h,u.dtype,f);if(i){const x=rt(h,a),y=Ue({inputs:{x:g},backend:t,attrs:{shape:x}});return t.disposeIntermediateTensorInfo(g),y}return g}const G_={kernelName:il,backendName:"cpu",kernelFunc:U_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H_(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{paddings:r,mode:i}=s;re(o,"mirrorPad");const a=r.map((w,b)=>w[0]+o.shape[b]+w[1]),c=r.map(w=>w[0]),l=r.map((w,b)=>w[0]+o.shape[b]),u=i==="reflect"?0:1,h=t.data.get(o.dataId).values,d=o.shape.length,p=ce(o.shape),f=j(a),m=a.length,g=ce(a),x=$t(o.dtype,f);for(let w=0;w<f;w++){let b=ur(w,m,g);for(let I=0;I<m;I++)b[I]<c[I]?b[I]=c[I]*2-b[I]-u:b[I]>=l[I]&&(b[I]=(l[I]-1)*2-b[I]+u);b=b.map((I,T)=>I-c[T]);const v=Ln(b,d,p);x[w]=h[v]}return{dataId:t.write(x,a,o.dtype),shape:a,dtype:o.dtype}}const q_={kernelName:al,backendName:"cpu",kernelFunc:H_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j_=st(((n,e)=>{const t=n%e;return n<0&&e<0||n>=0&&e>=0?t:(t+e)%e})),K_=pt(Oi,j_),X_={kernelName:Oi,backendName:"cpu",kernelFunc:K_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ew(n){const{inputs:e,backend:t,attrs:s}=n,{logits:o}=e,{dim:r}=s,i=o.shape.length;let a=r;if(a===-1&&(a=i-1),a!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${a}`);const c=ve([a],o.shape),l=Q1({inputs:{x:o},backend:t,attrs:{reductionIndices:c,keepDims:!1}}),u=rt(l.shape,c),h=Ue({inputs:{x:l},backend:t,attrs:{shape:u}}),d=qp({inputs:{a:o,b:h},backend:t}),p=o1({inputs:{x:d},backend:t}),f=ba({inputs:{x:p},backend:t,attrs:{axis:c,keepDims:!1}}),m=Ue({inputs:{x:f},backend:t,attrs:{shape:u}}),g=Kp({inputs:{a:p,b:m},backend:t});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),g}const Y_={kernelName:Sl,backendName:"cpu",kernelFunc:ew};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J_(n){const{inputs:e,backend:t,attrs:s}=n,{logits:o}=e,{numSamples:r,seed:i,normalized:a}=s;re(o,"multinomial");const c=a?o:ew({inputs:{logits:o},backend:t,attrs:{dim:-1}}),l=c.shape[0],u=c.shape[1],h=t.data.get(c.dataId).values,d=[l,r],p=St(j(d),"int32");for(let f=0;f<l;++f){const m=f*u,g=new Float32Array(u-1);g[0]=h[m];for(let w=1;w<g.length;++w)g[w]=g[w-1]+h[m+w];const x=Ad.alea(i.toString()),y=f*r;for(let w=0;w<r;++w){const b=x();p[y+w]=g.length;for(let v=0;v<g.length;v++)if(b<g[v]){p[y+w]=v;break}}}return a||t.disposeIntermediateTensorInfo(c),t.makeTensorInfo(d,"int32",p)}const Z_={kernelName:Ng,backendName:"cpu",kernelFunc:J_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q_=Vd;function eL(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:o,scores:r}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:c}=s;re(o,"NonMaxSuppression");const l=t.data.get(o.dataId).values,u=t.data.get(r.dataId).values,{selectedIndices:h}=Q_(l,u,i,a,c);return t.makeTensorInfo([h.length],"int32",new Int32Array(h))}const tL={kernelName:Qh,backendName:"cpu",kernelFunc:eL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nL=Wd;function sL(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:o,scores:r}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:c,padToMaxOutputSize:l}=s;re(o,"NonMaxSuppressionPadded");const u=t.data.get(o.dataId).values,h=t.data.get(r.dataId).values,{selectedIndices:d,validOutputs:p}=nL(u,h,i,a,c,l);return[t.makeTensorInfo([d.length],"int32",new Int32Array(d)),t.makeTensorInfo([],"int32",new Int32Array([p]))]}const oL={kernelName:ed,backendName:"cpu",kernelFunc:sL};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rL=Ud;function iL(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:o,scores:r}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:c,softNmsSigma:l}=s;re(o,"NonMaxSuppressionWithScore");const u=t.data.get(o.dataId).values,h=t.data.get(r.dataId).values,d=i,p=a,f=c,m=l,{selectedIndices:g,selectedScores:x}=rL(u,h,d,p,f,m);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([x.length],"float32",new Float32Array(x))]}const aL={kernelName:td,backendName:"cpu",kernelFunc:iL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cL(n){const{inputs:e,backend:t,attrs:s}=n,{indices:o}=e,{dtype:r,depth:i,onValue:a,offValue:c}=s;re(o,"oneHot");const l=j(o.shape),u=new Float32Array(l*i);u.fill(c);const h=t.data.get(o.dataId).values;for(let d=0;d<l;++d)h[d]>=0&&h[d]<i&&(u[d*i+h[d]]=a);return t.makeTensorInfo([...o.shape,i],r,u)}const lL={kernelName:hl,backendName:"cpu",kernelFunc:cL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cc(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const o=xo({inputs:{input:s},backend:t}),r=Cc({inputs:{x:o},backend:t}),i=sr({inputs:{input:s},backend:t}),a=Cc({inputs:{x:i},backend:t}),c=Ht({inputs:{real:r,imag:a},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),c}else return Xp({backend:t,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const uL={kernelName:Nl,backendName:"cpu",kernelFunc:Cc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tw(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const o=xo({inputs:{input:s},backend:t}),r=tw({inputs:{x:o},backend:t}),i=sr({inputs:{input:s},backend:t}),a=Cc({inputs:{x:i},backend:t}),c=Ht({inputs:{real:r,imag:a},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),c}else return Xp({backend:t,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const hL={kernelName:ul,backendName:"cpu",kernelFunc:tw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nw(n){const{inputs:e,backend:t,attrs:s}=n,{axis:o}=s;if(e.length===1)return vc({inputs:{input:e[0]},backend:t,attrs:{dim:o}});const r=e[0].shape,i=e[0].dtype;e.forEach(u=>{vh(r,u.shape,"All tensors passed to stack must have matching shapes"),k(i===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],c=e.map(u=>{const h=vc({inputs:{input:u},backend:t,attrs:{dim:o}});return a.push(h),h}),l=or({inputs:c,backend:t,attrs:{axis:o}});return a.forEach(u=>t.disposeIntermediateTensorInfo(u)),l}const dL={kernelName:dl,backendName:"cpu",kernelFunc:nw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pL(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{paddings:r,constantValue:i}=s;re(o,"pad");const a=r.map((y,w)=>y[0]+o.shape[w]+y[1]),c=r.map(y=>y[0]),l=t.data.get(o.dataId).values,u=j(o.shape),h=o.shape.length,d=ce(o.shape),p=j(a),f=a.length,m=ce(a),g=$t(o.dtype,p);i!==0&&g.fill(i);for(let y=0;y<u;y++){const b=ur(y,h,d).map((I,T)=>I+c[T]),v=Ln(b,f,m);g[v]=l[y]}return{dataId:t.write(g,a,o.dtype),shape:a,dtype:o.dtype}}const sw={kernelName:pl,backendName:"cpu",kernelFunc:pL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fL=st((n,e)=>Math.pow(n,e)),mL=pt(_i,fL),gL={kernelName:_i,backendName:"cpu",kernelFunc:mL};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xL(n){const{inputs:e,backend:t,attrs:s}=n,{paramsNestedSplits:o,paramsDenseValues:r,indices:i}=e,{outputRaggedRank:a}=s,c=o.map(x=>t.data.get(x.dataId).values),l=o.map(x=>x.shape),u=t.data.get(r.dataId).values,h=t.data.get(i.dataId).values,[d,p,f]=C1(c,l,u,r.shape,r.dtype,h,i.shape),m=d.map(x=>t.makeTensorInfo([x.length],"int32",x)),g=t.makeTensorInfo(f,r.dtype,p);return m.concat([g])}const yL={kernelName:Eg,backendName:"cpu",kernelFunc:xL};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bL(n){const{inputs:e,backend:t}=n,{starts:s,limits:o,deltas:r}=e,i=t.data.get(s.dataId).values,a=t.data.get(o.dataId).values,c=t.data.get(r.dataId).values,[l,u]=I1(i,s.shape,s.dtype,a,o.shape,c,r.shape),h=t.makeTensorInfo([l.length],"int32",l),d=t.makeTensorInfo([u.length],s.dtype,u);return[h,d]}const wL={kernelName:Rg,backendName:"cpu",kernelFunc:bL};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vL(n){const{inputs:e,backend:t,attrs:s}=n,{shape:o,values:r,defaultValue:i,rowPartitionTensors:a}=e,{rowPartitionTypes:c}=s,l=t.data.get(o.dataId).values,u=t.data.get(r.dataId).values,h=t.data.get(i.dataId).values,d=a.map(g=>t.data.get(g.dataId).values),p=a.map(g=>g.shape),[f,m]=$1(l,o.shape,u,r.shape,r.dtype,h,i.shape,d,p,c);return t.makeTensorInfo(f,r.dtype,m)}const CL={kernelName:Dg,backendName:"cpu",kernelFunc:vL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IL(n){const{backend:e,attrs:t}=n,{start:s,stop:o,dtype:r,step:i}=t,a=S1(s,o,i,r);return e.makeTensorInfo([a.length],r,a)}const $L={kernelName:nd,backendName:"cpu",kernelFunc:IL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SL=Fe(Li,n=>1/n),kL={kernelName:Li,backendName:"cpu",kernelFunc:SL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TL(n){const{inputs:e,backend:t,attrs:s}=n,{images:o}=e,{alignCorners:r,halfPixelCenters:i,size:a}=s;re(o,"resizeBilinear");const c=ce(o.shape),[l,u]=a,[h,d,p,f]=o.shape,m=t.data.get(o.dataId).values,g=new Float32Array(j([h,l,u,f])),x=[r&&l>1?d-1:d,r&&u>1?p-1:p],y=[r&&l>1?l-1:l,r&&u>1?u-1:u];let w=0;const b=x[0]/y[0],v=x[1]/y[1];for(let I=0;I<h;I++)for(let T=0;T<l;T++){let N;i?N=b*(T+.5)-.5:N=b*T;const $=Math.max(0,Math.floor(N)),S=N-$,C=Math.min(d-1,Math.ceil(N)),R=I*c[0]+$*c[1],F=I*c[0]+C*c[1];for(let z=0;z<u;z++){let M;i?M=v*(z+.5)-.5:M=v*z;const B=Math.max(0,Math.floor(M)),H=M-B,P=Math.min(p-1,Math.ceil(M)),U=R+B*c[2],G=F+B*c[2],K=R+P*c[2],Y=F+P*c[2];for(let X=0;X<f;X++){const ee=m[U+X],Q=m[G+X],oe=m[K+X],ae=m[Y+X],de=ee+(oe-ee)*H,he=Q+(ae-Q)*H,ge=de+(he-de)*S;g[w++]=ge}}}return t.makeTensorInfo([h,l,u,f],"float32",g)}const NL={kernelName:yl,backendName:"cpu",kernelFunc:TL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EL(n){const{inputs:e,backend:t,attrs:s}=n,{images:o,dy:r}=e,{alignCorners:i}=s;re([r,o],"resizeBilinearGrad");const a=ce(o.shape),[c,l,u,h]=o.shape,[,d,p]=r.shape,f=new Float32Array(c*l*u*h),m=[i&&d>1?l-1:l,i&&p>1?u-1:u],g=[i&&d>1?d-1:d,i&&p>1?p-1:p],x=m[0]/g[0],y=m[1]/g[1],w=t.data.get(r.dataId).values;let b=0;for(let v=0;v<c;v++){const I=v*a[0];for(let T=0;T<d;T++){const N=T*x,$=Math.floor(N),S=Math.min(Math.ceil(N),l-1),C=I+$*a[1],R=I+S*a[1],F=N-$,z=1-F;for(let M=0;M<p;M++){const B=M*y,H=Math.floor(B),P=Math.min(Math.ceil(B),u-1),U=B-H,G=1-U,K=C+H*a[2],Y=C+P*a[2],X=R+H*a[2],ee=R+P*a[2],Q=z*G,oe=z*U,ae=F*G,de=F*U;for(let he=0;he<h;he++){const ge=w[b++];f[K+he]+=ge*Q,f[Y+he]+=ge*oe,f[X+he]+=ge*ae,f[ee+he]+=ge*de}}}}return t.makeTensorInfo([c,u,l,h],"float32",f)}const RL={kernelName:rd,backendName:"cpu",kernelFunc:EL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DL(n){const{inputs:e,backend:t,attrs:s}=n,{images:o}=e,{alignCorners:r,halfPixelCenters:i,size:a}=s;re(o,"resizeNearestNeighbor");const c=ce(o.shape),[l,u]=a,[h,d,p,f]=o.shape,m=t.data.get(o.dataId).values,g=new Float32Array(h*l*u*f),x=[r&&l>1?d-1:d,r&&u>1?p-1:p],y=[r&&l>1?l-1:l,r&&u>1?u-1:u],w=x[0]/y[0],b=x[1]/y[1];let v=0;for(let I=0;I<h;I++){const T=I*c[0];for(let N=0;N<l;N++){const $=i?w*(N+.5):w*N;let S=Math.min(d-1,r?Math.round($):Math.floor($));i&&(S=Math.max(0,S));const C=T+S*c[1];for(let R=0;R<u;R++){const F=i?b*(R+.5):b*R;let z=Math.min(p-1,r?Math.round(F):Math.floor(F));i&&(z=Math.max(0,z));const M=C+z*c[2];for(let B=0;B<f;B++){const H=m[M+B];g[v++]=H}}}}return t.makeTensorInfo([h,l,u,f],o.dtype,g)}const AL={kernelName:xl,backendName:"cpu",kernelFunc:DL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FL(n){const{inputs:e,backend:t,attrs:s}=n,{images:o,dy:r}=e,{alignCorners:i}=s;re([r,o],"resizeNearestNeighborGrad");const a=ce(o.shape),c=ce(r.shape),[l,u,h,d]=o.shape,[,p,f]=r.shape,m=new Float32Array(l*u*h*d),g=t.data.get(r.dataId).values,x=[i&&p>1?u-1:u,i&&f>1?h-1:h],y=[i&&p>1?p-1:p,i&&f>1?f-1:f],w=x[0]/y[0],b=x[1]/y[1],v=1/w,I=1/b,T=Math.ceil(v)*2+2,N=Math.ceil(I)*2+2;for(let $=0;$<l;$++){const S=$*a[0];for(let C=0;C<u;C++){const R=S+C*a[1],F=Math.floor(C*v),z=Math.floor(F-T/2);for(let M=0;M<h;M++){const B=R+M*a[2],H=Math.floor(M*I),P=Math.floor(H-N/2);for(let U=0;U<d;U++){let G=0;for(let K=0;K<T;K++){const Y=K+z;if(Y<0||Y>=p)continue;const X=S+Y*c[1],ee=Y*w,Q=Math.min(u-1,i?Math.round(ee):Math.floor(ee));if(C===Q)for(let oe=0;oe<N;oe++){const ae=oe+P;if(ae<0||ae>=f)continue;const de=X+ae*c[2],he=ae*b,ge=Math.min(h-1,i?Math.round(he):Math.floor(he));M===ge&&(G+=g[de+U])}}m[B+U]=G}}}}return t.makeTensorInfo(o.shape,o.dtype,m)}const OL={kernelName:od,backendName:"cpu",kernelFunc:FL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ML(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{dims:r}=s;re(o,"reverse");const i=o.shape.length,a=ve(r,o.shape);if(i===0)return jn({inputs:{x:o},backend:t});const c=new wt(o.shape,o.dtype),l=t.bufferSync(o);for(let u=0;u<c.size;u++){const h=c.indexToLoc(u),d=h.slice();a.forEach(p=>d[p]=o.shape[p]-1-d[p]),c.set(l.get(...d),...h)}return t.makeTensorInfo(c.shape,c.dtype,c.values)}const _L={kernelName:bl,backendName:"cpu",kernelFunc:ML};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LL={kernelName:dd,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:o,fillValue:r,center:i}=e,a=t,c=$t(s.dtype,j(s.shape)),[l,u,h,d]=s.shape,[p,f]=tp(i,u,h),m=255,g=Math.sin(o),x=Math.cos(o),y=a.data.get(s.dataId).values;for(let b=0;b<l;b++){const v=b*h*u*d;for(let I=0;I<u;I++){const T=I*(h*d);for(let N=0;N<h;N++){const $=N*d;for(let S=0;S<d;S++){const C=[l,I,N,S],R=C[2],F=C[1];let z=(R-p)*x-(F-f)*g,M=(R-p)*g+(F-f)*x;z=Math.round(z+p),M=Math.round(M+f);let B=r;if(typeof r!="number"&&(S===3?B=m:B=r[S]),z>=0&&z<h&&M>=0&&M<u){const P=M*(h*d),U=z*d,G=v+P+U+S;B=y[G]}const H=v+T+$+S;c[H]=B}}}}return{dataId:a.write(c,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PL=Fe(Bi,n=>{const e=Math.floor(n);return n-e<.5?Math.floor(n):n-e>.5?Math.ceil(n):e%2===0?e:e+1}),zL={kernelName:Bi,backendName:"cpu",kernelFunc:PL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BL(n){const{inputs:e,backend:t,attrs:s}=n,{indices:o,updates:r}=e,{shape:i}=s,{sliceRank:a,numUpdates:c,sliceSize:l,strides:u,outputSize:h}=Io(r,o,i),d=!0,p=t.bufferSync(o),f=t.bufferSync(r),m=Qs(p,f,i,h,l,c,a,u,0,d);return t.makeTensorInfo(i,m.dtype,m.values)}const VL={kernelName:Ag,backendName:"cpu",kernelFunc:BL};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WL(n,e){let t=0,s=n.length,o=0;for(;t<s;)o=Math.floor((t+s)/2),n[o]<e?t=o+1:s=o;return s}function UL(n,e){let t=0,s=n.length,o=0;for(;t<s;)o=Math.floor((t+s)/2),n[o]<=e?t=o+1:s=o;return s}function GL(n,e,t,s,o,r){const i=Ze("int32",t*o);for(let a=0;a<t;++a){const c=n.slice(a*s,(a+1)*s),l=a*o;for(let u=0;u<o;++u)i[l+u]=r==="left"?WL(c,e[u+l]):UL(c,e[u+l])}return i}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HL(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:o,values:r}=e,{side:i}=s,a=t.data.get(o.dataId).values,c=t.data.get(r.dataId).values,l=GL(a,c,o.shape[0],o.shape[1],r.shape[1],i);return t.makeTensorInfo(r.shape,"int32",l)}const qL={kernelName:Og,backendName:"cpu",kernelFunc:HL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jL(n){const{inputs:e,backend:t}=n,{condition:s,t:o,e:r}=e;re([s,o,r],"select");const i=s.shape.length,a=t.data.get(s.dataId).values,c=t.data.get(o.dataId).values,l=t.data.get(r.dataId).values,u=Kt(o.dtype,r.dtype),h=St(j(o.shape),u);let d=0;const p=i===0||i>1||o.shape.length===1?1:j(o.shape.slice(1));for(let f=0;f<a.length;f++)for(let m=0;m<p;m++)a[f]===1?h[d++]=c[f]:h[d++]=l[f];return t.makeTensorInfo(o.shape,u,h)}const KL={kernelName:wl,backendName:"cpu",kernelFunc:jL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XL=Pl,YL=zl,JL=Fe(Wi,n=>n>=0?YL*n:XL*(Math.exp(n)-1)),ZL={kernelName:Wi,backendName:"cpu",kernelFunc:JL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QL=Fe(Hi,n=>n<0?-1:n>0?1:0),eP={kernelName:Hi,backendName:"cpu",kernelFunc:QL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tP=Fe(Ui,n=>Math.sin(n)),nP={kernelName:Ui,backendName:"cpu",kernelFunc:tP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sP=Fe(Gi,n=>Math.sinh(n)),oP={kernelName:Gi,backendName:"cpu",kernelFunc:sP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rP=11920928955078125e-23,Rm=Math.log(rP)+2,iP=Fe(ji,n=>{const e=n>-Rm,t=n<Rm,s=Math.exp(n);let o;return t?o=s:e?o=n:o=Math.log(1+s),o}),aP={kernelName:ji,backendName:"cpu",kernelFunc:iP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cP(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{blockShape:r,paddings:i}=s;re([o],"spaceToBatchND");const a=j(r),c=[[0,0]];c.push(...i);for(let I=1+r.length;I<o.shape.length;++I)c.push([0,0]);const l=sw.kernelFunc({inputs:{x:o},backend:t,attrs:{paddings:c,constantValue:0}}),u=ca(l.shape,r,a,!1),h=la(u.length,r.length,!1),d=ua(l.shape,r,a,!1),m=Ue({inputs:{x:l},backend:t,attrs:{shape:u}}),y=Vt({inputs:{x:m},backend:t,attrs:{perm:h}}),v=Ue({inputs:{x:y},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(y),v}const lP={kernelName:Il,backendName:"cpu",kernelFunc:cP};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uP(n){const{inputs:e,backend:t}=n,{indices:s,values:o,denseShape:r,defaultValue:i}=e;if(r.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${r.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${o.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const a=t.data.get(s.dataId).values,c=t.data.get(o.dataId).values,l=t.data.get(r.dataId).values,u=t.data.get(i.dataId).values[0],[h,d,p,f,m]=E1(a,s.shape,s.dtype,c,o.dtype,l,u);return[t.makeTensorInfo(d,s.dtype,h),t.makeTensorInfo([d[0]],o.dtype,p),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),t.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const hP={kernelName:Mg,backendName:"cpu",kernelFunc:uP};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dP(n){const{inputs:e,backend:t}=n,{inputIndices:s,inputShape:o,newShape:r}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${o.shape}`);if(r.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const i=Array.from(t.data.get(o.dataId).values),a=t.data.get(s.dataId).values,c=Array.from(t.data.get(r.dataId).values),[l,u,h]=R1(a,s.shape,s.dtype,i,c);return[t.makeTensorInfo(u,s.dtype,l),t.makeTensorInfo([h.length],r.dtype,new Int32Array(h))]}const pP={kernelName:_g,backendName:"cpu",kernelFunc:dP};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fP(n){const{inputs:e,backend:t}=n,{data:s,indices:o,segmentIds:r}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${o.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${r.shape}`);if(o.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const i=t.data.get(s.dataId).values,a=t.data.get(o.dataId).values,c=t.data.get(r.dataId).values,[l,u]=Hp(i,s.shape,s.dtype,a,c,!0);return t.makeTensorInfo(u,s.dtype,l)}const mP={kernelName:Lg,backendName:"cpu",kernelFunc:fP};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gP(n){const{inputs:e,backend:t}=n,{data:s,indices:o,segmentIds:r}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${o.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${r.shape}`);if(o.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const i=t.data.get(s.dataId).values,a=t.data.get(o.dataId).values,c=t.data.get(r.dataId).values,[l,u]=Hp(i,s.shape,s.dtype,a,c);return t.makeTensorInfo(u,s.dtype,l)}const xP={kernelName:Pg,backendName:"cpu",kernelFunc:gP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yP(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:o,sparseValues:r,defaultValue:i}=e,{outputShape:a}=s,{sliceRank:c,numUpdates:l,sliceSize:u,strides:h,outputSize:d}=Io(r,o,a),p=!1,f=t.bufferSync(o);let m;switch(r.dtype){case"bool":{const g=t.bufferSync(r),x=!!t.data.get(i.dataId).values[0];m=Qs(f,g,a,d,u,l,c,h,x,p);break}case"float32":{const g=t.bufferSync(r),x=t.data.get(i.dataId).values[0];m=Qs(f,g,a,d,u,l,c,h,x,p);break}case"int32":{const g=t.bufferSync(r),x=t.data.get(i.dataId).values[0];m=Qs(f,g,a,d,u,l,c,h,x,p);break}case"string":{const g=t.bufferSync(r),x=ks(t.data.get(i.dataId).values[0]);m=Qs(f,g,a,d,u,l,c,h,x,p);break}default:throw new Error(`Unsupported type ${r.dtype}`)}return t.makeTensorInfo(a,m.dtype,m.values)}const bP={kernelName:zg,backendName:"cpu",kernelFunc:yP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wP(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{numOrSizeSplits:r,axis:i}=s,a=ve(i,o.shape)[0],c=gp(o,r,a),l=new Array(o.shape.length).fill(0),u=o.shape.slice();return c.map(h=>{const d=[...u];d[a]=h;const p=yo({inputs:{x:o},backend:t,attrs:{begin:l,size:d}});return l[a]+=h,p})}const vP={kernelName:$l,backendName:"cpu",kernelFunc:wP};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CP={kernelName:id,backendName:"cpu",kernelFunc:({inputs:n,backend:e})=>{const{x:t}=n,s=e;re(t,"square");const o=s.data.get(t.dataId).values,r=new Float32Array(o.length);for(let a=0;a<o.length;++a){const c=o[a];r[a]=c*c}return{dataId:s.write(r,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IP=Fe(ea,(n,e)=>{const t=e;return isNaN(n)?NaN:n>0?1:t.alpha}),$P={kernelName:ea,backendName:"cpu",kernelFunc:IP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SP(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{begin:r,end:i,strides:a,beginMask:c,endMask:l,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=s;re(o,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:x,begin:y,end:w,strides:b}=Zd(o.shape,r,i,a,c,l,u,h,d);let v;if(m)v=Ue({inputs:{x:o},backend:t,attrs:{shape:f}});else if(g||x){k(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);const I=Xd(y,w,b),T=yo({inputs:{x:o},backend:t,attrs:{begin:y,size:I}});v=Ue({inputs:{x:T},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo(T)}else{const I=t.bufferSync(o),T=F1(p,I,b,y);v=t.makeTensorInfo(f,T.dtype,T.values)}return v}const kP={kernelName:cd,backendName:"cpu",kernelFunc:SP};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TP(n){const{inputs:e,backend:t,attrs:s}=n,{separator:o,nGramWidths:r,leftPad:i,rightPad:a,padWidth:c,preserveShortSequences:l}=s,{data:u,dataSplits:h}=e,d=t.data.get(u.dataId).values,p=t.data.get(h.dataId).values,[f,m]=O1(d,p,o,r,i,a,c,l);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(h.shape,"int32",m)]}const NP={kernelName:Bg,backendName:"cpu",kernelFunc:TP};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EP(n){const{inputs:e,backend:t,attrs:s}=n,{skipEmpty:o}=s,{input:r,delimiter:i}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(r.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const a=t.data.get(r.dataId).values,c=t.data.get(i.dataId).values[0],[l,u,h]=M1(a,c,o),d=u.length;return[t.makeTensorInfo([d,2],"int32",l),t.makeTensorInfo([d],"string",u),t.makeTensorInfo([2],"int32",new Int32Array(h))]}const RP={kernelName:Vg,backendName:"cpu",kernelFunc:EP};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DP(n){const{inputs:e,backend:t,attrs:s}=n,{numBuckets:o}=s,{input:r}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");const i=t.data.get(r.dataId).values,a=_1(i,o);return t.makeTensorInfo(r.shape,"int32",a)}const AP={kernelName:Wg,backendName:"cpu",kernelFunc:DP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FP=Fe(Ji,n=>Math.tan(n)),OP={kernelName:Ji,backendName:"cpu",kernelFunc:FP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MP=Fe(Zi,n=>Math.tanh(n)),_P={kernelName:Zi,backendName:"cpu",kernelFunc:MP};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LP(n){const{inputs:e,backend:t}=n,{tensor:s,indices:o,updates:r}=e,{sliceRank:i,numUpdates:a,sliceSize:c,strides:l,outputSize:u}=Io(r,o,s.shape),h=!1,d=t.bufferSync(o),p=t.bufferSync(r),f=t.bufferSync(s),m=Qs(d,p,s.shape,u,c,a,i,l,f,h);return t.makeTensorInfo(s.shape,m.dtype,m.values)}const PP={kernelName:Fg,backendName:"cpu",kernelFunc:LP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zP(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{reps:r}=s;re(o,"tile");const i=P1(t.bufferSync(o),r);return t.makeTensorInfo(i.shape,i.dtype,i.values)}const BP={kernelName:Qi,backendName:"cpu",kernelFunc:zP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VP(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{k:r,sorted:i}=s;re(o,"topk");const a=t.data.get(o.dataId).values,[c,l]=B1(a,o.shape,o.dtype,r,i);return[t.makeTensorInfo(c.shape,c.dtype,c.values),t.makeTensorInfo(l.shape,l.dtype,l.values)]}const WP={kernelName:ld,backendName:"cpu",kernelFunc:VP};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UP(n){const{inputs:e,attrs:t,backend:s}=n,{image:o,transforms:r}=e,{interpolation:i,fillMode:a,fillValue:c,outputShape:l}=t,[u,h,d,p]=o.shape,[f,m]=l??[h,d],g=[u,f,m,p],x=ce(o.shape),y=x[0],w=x[1],b=x[2],v=ce(g),I=v[0],T=v[1],N=v[2],$=$t(o.dtype,j(g));$.fill(c);const S=s.data.get(o.dataId).values,C=s.data.get(r.dataId).values;for(let F=0;F<u;++F){const z=r.shape[0]===1?C:C.subarray(F*8,F*8+8);for(let M=0;M<f;++M)for(let B=0;B<m;++B)for(let H=0;H<p;++H){let P;const U=z[6]*B+z[7]*M+1;if(U===0)continue;const G=(z[0]*B+z[1]*M+z[2])/U,K=(z[3]*B+z[4]*M+z[5])/U,Y=Dm(G,d,a),X=Dm(K,h,a);switch(i){case"nearest":P=XP(S,h,d,y,w,b,F,X,Y,H,c);break;case"bilinear":P=YP(S,h,d,y,w,b,F,X,Y,H,c);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}const ee=F*I+M*T+B*N+H;$[ee]=P}return s.makeTensorInfo(g,o.dtype,$)}return{dataId:s.write($,g,o.dtype),shape:o.shape,dtype:o.dtype}}const GP={kernelName:ud,backendName:"cpu",kernelFunc:UP};function Dm(n,e,t){switch(t){case"reflect":return HP(n,e);case"wrap":return qP(n,e);case"nearest":return KP(n,e);case"constant":default:return jP(n)}}function HP(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const s=2*e;t<s&&(t=s*Math.trunc(-t/s)+t),t=t<-e?t+s:-t-1}else if(t>e-1)if(e<=1)t=0;else{const s=2*e;t-=s*Math.trunc(t/s),t>=e&&(t=s-t-1)}return oo(0,t,e-1)}function qP(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const s=e-1;t+=e*(Math.trunc(-t/s)+1)}else if(t>e-1)if(e<=1)t=0;else{const s=e-1;t-=e*Math.trunc(t/s)}return oo(0,t,e-1)}function jP(n,e){return n}function KP(n,e){return oo(0,n,e-1)}function Br(n,e,t,s,o,r,i,a,c,l,u){const h=i*s+a*o+c*r+l;return 0<=a&&a<e&&0<=c&&c<t?n[h]:u}function XP(n,e,t,s,o,r,i,a,c,l,u){const h=Math.round(a),d=Math.round(c);return Br(n,e,t,s,o,r,i,h,d,l,u)}function YP(n,e,t,s,o,r,i,a,c,l,u){const h=Math.floor(a),d=Math.floor(c),p=h+1,f=d+1,m=(f-c)*Br(n,e,t,s,o,r,i,h,d,l,u)+(c-d)*Br(n,e,t,s,o,r,i,h,f,l,u),g=(f-c)*Br(n,e,t,s,o,r,i,p,d,l,u)+(c-d)*Br(n,e,t,s,o,r,i,p,f,l,u);return(p-a)*m+(a-h)*g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JP(n){const{inputs:e,attrs:t,backend:s}=n,{axis:o}=t,{x:r}=e;re(r,"unique");const i=s.data.get(r.dataId).values,{outputValues:a,outputShape:c,indices:l}=V1(i,o,r.shape,r.dtype);return[s.makeTensorInfo(c,r.dtype,a),s.makeTensorInfo([l.length],"int32",l)]}const ZP={kernelName:hd,backendName:"cpu",kernelFunc:JP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QP(n){const{inputs:e,backend:t,attrs:s}=n,{value:o}=e;let{axis:r}=s;r<0&&(r+=o.shape.length);const i=o.shape.length,a=o.shape[r],c=new Array(i-1);let l=0;for(let p=0;p<i;p++)p!==r&&(c[l++]=o.shape[p]);const u=new Array(i).fill(0),h=o.shape.slice();h[r]=1;const d=new Array(a);for(let p=0;p<d.length;p++){u[r]=p;const f=yo({inputs:{x:o},backend:t,attrs:{begin:u,size:h}});d[p]=Ue({inputs:{x:f},backend:t,attrs:{shape:c}}),t.disposeIntermediateTensorInfo(f)}return d}const e3={kernelName:kl,backendName:"cpu",kernelFunc:QP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t3(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,segmentIds:r}=e,{numSegments:i}=s;re(o,"unsortedSegmentSum");const a=o.shape.length,c=r.shape.length,l=[],u=[],h=a-c;let d=r;for(let f=0;f<h;++f){const m=vc({inputs:{input:d},backend:t,attrs:{dim:f+1}});d=m,u.push(m)}for(let f=0;f<i;++f){const m=Fs(f,"int32"),g=t.makeTensorInfo([],"int32",m),x=n1({inputs:{a:g,b:d},backend:t}),y=Ds({inputs:{x},backend:t,attrs:{dtype:"float32"}}),w=Zl({inputs:{a:y,b:o},backend:t}),b=ba({inputs:{x:w},backend:t,attrs:{axis:0,keepDims:!1}});l.push(b),u.push(g),u.push(x),u.push(y),u.push(w),u.push(b)}const p=nw({inputs:l,backend:t,attrs:{axis:0}});return u.forEach(f=>t.disposeIntermediateTensorInfo(f)),p}const n3={kernelName:Tl,backendName:"cpu",kernelFunc:t3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s3=[JF,DA,QF,tO,LA,sO,rO,aO,lO,hO,pO,mO,xO,wO,CO,SO,TO,EO,DO,XF,FO,MO,LO,zA,zO,MA,VA,VO,AA,UO,HO,qO,KO,YO,ZO,eM,nM,oM,iM,cM,uM,dM,fM,gM,xM,bM,vM,IM,$M,SM,kM,NM,DM,WF,FM,WA,VM,UA,WM,HA,KM,XM,JM,jA,XA,QM,t_,s_,r_,JA,QA,FA,a_,GO,l_,h_,p_,UF,tF,sF,m_,rF,x_,w_,C_,S_,T_,E_,R_,aF,A_,O_,__,P_,B_,W_,G_,lF,q_,X_,Z_,hF,pF,tL,oL,aL,mF,lL,hL,dL,sw,gL,HF,yF,yL,wL,CL,$L,OA,ih,kL,qF,jF,KF,NL,RL,AL,OL,_L,LL,zL,kF,VL,qL,KL,ZL,NF,eP,nP,oP,EF,Y_,aP,lP,hP,pP,mP,xP,bP,vP,AF,CP,OF,_F,$P,kP,NP,RP,AP,BF,EM,OP,_P,PP,BP,WP,GP,gF,ZP,e3,n3,uL];for(const n of s3)Gg(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Js={},Fa={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function o3(n,e){Js[n]=e}function En(n,e){if(!(n in Js)||e!=null){const s=i3(n,e);if(s!==null)Js[n]=s;else return console.log("Could not get context for WebGL version",n),null}const t=Js[n];return t==null||t.isContextLost()?(delete Js[n],En(n)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),Js[n])}function r3(n){if(!W().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function i3(n,e){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=e??r3(n);return t.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete Js[n]},!1),W().getBool("SOFTWARE_WEBGL_ENABLED")&&(Fa.failIfMajorPerformanceCaveat=!1),n===1?t.getContext("webgl",Fa)||t.getContext("experimental-webgl",Fa):t.getContext("webgl2",Fa)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ei;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(ei||(ei={}));var Qt;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(Qt||(Qt={}));var bt;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(bt||(bt={}));function wa(n,e){return[e,n]}function a3(n,e){return n*e}function Oa(n){const e=j(n),t=Math.ceil(e/4);return Ru(t)}function xr(n,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(n/2))]}function c3(n,e){const[t,s]=xr(n,e);return t*s*4}function Yp(n,e){const t=n;let s,o,r,i,a,c,l,u,h,d;return W().getNumber("WEBGL_VERSION")===2?(s=t.R32F,o=t.R16F,r=t.RGBA16F,i=t.RGBA32F,a=t.RED,l=4,u=1,h=t.HALF_FLOAT,d=t.FLOAT,c=t.RGBA8):(s=n.RGBA,o=n.RGBA,r=n.RGBA,i=t.RGBA,a=n.RGBA,l=4,u=4,h=e!=null?e.HALF_FLOAT_OES:null,d=n.FLOAT,c=n.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:o,internalFormatPackedHalfFloat:r,internalFormatPackedFloat:i,textureFormatFloat:a,downloadTextureFormat:c,downloadUnpackNumChannels:l,defaultNumChannels:u,textureTypeHalfFloat:h,textureTypeFloat:d}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ne(n,e){const t=e();return W().getBool("DEBUG")&&l3(n),t}function l3(n){const e=n.getError();if(e!==n.NO_ERROR)throw new Error("WebGL Error: "+p3(n,e))}const u3=596e-10,h3=65504;function d3(n){return!!(W().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||u3<Math.abs(n)&&Math.abs(n)<h3)}function p3(n,e){switch(e){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function Ma(n,e){return as(n,()=>n.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function f3(n,e){const t=as(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(ne(n,()=>n.shaderSource(t,e)),ne(n,()=>n.compileShader(t)),n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function m3(n,e){const t=as(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(ne(n,()=>n.shaderSource(t,e)),ne(n,()=>n.compileShader(t)),W().get("ENGINE_COMPILE_ONLY"))return t;if(n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw ow(e,n.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}const g3=/ERROR: [0-9]+:([0-9]+):/g;function ow(n,e){const t=g3.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(n);return}const s=+t[1],o=n.split(`
`),r=o.length.toString().length+2,i=o.map((h,d)=>Wo((d+1).toString(),r)+h);let a=0;for(let h=0;h<i.length;h++)a=Math.max(i[h].length,a);const c=i.slice(0,s-1),l=i.slice(s-1,s),u=i.slice(s);console.log(c.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${Wo(l[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join(`
`))}function x3(n){return as(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function y3(n,e){if(ne(n,()=>n.linkProgram(e)),!W().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(e,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function vu(n,e){if(ne(n,()=>n.validateProgram(e)),n.getProgramParameter(e,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function b3(n,e){const t=as(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return ne(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),ne(n,()=>n.bufferData(n.ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function w3(n,e){const t=as(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return ne(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t)),ne(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function v3(n){return as(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function C3(n,e){const t=W().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||e<=0){const s=`[${n}x${e}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(n>t||e>t){const s=`[${n}x${e}]`,o=`[${t}x${t}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+o+".")}}function I3(n){return as(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Am(n,e,t,s,o,r,i){const a=n.getAttribLocation(e,t);return a===-1?!1:(ne(n,()=>n.bindBuffer(n.ARRAY_BUFFER,s)),ne(n,()=>n.vertexAttribPointer(a,o,n.FLOAT,!1,r,i)),ne(n,()=>n.enableVertexAttribArray(a)),!0)}function $3(n,e,t){E3(n,t),ne(n,()=>n.activeTexture(n.TEXTURE0+t)),ne(n,()=>n.bindTexture(n.TEXTURE_2D,e))}function S3(n,e,t){return as(n,()=>n.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function k3(n,e,t){return n.getUniformLocation(e,t)}function T3(n,e,t,s){ne(n,()=>$3(n,e,s)),ne(n,()=>n.uniform1i(t,s))}function Cu(n,e,t){ne(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),ne(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0))}function Fm(n,e){ne(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),ne(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function _a(n){const e=n.checkFramebufferStatus(n.FRAMEBUFFER);if(e!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+N3(n,e))}function N3(n,e){switch(e){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function as(n,e,t){const s=ne(n,()=>e());if(s==null)throw new Error(t);return s}function E3(n,e){const t=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=e+n.TEXTURE0;if(s<n.TEXTURE0||s>t){const o=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${o}.`)}}function rr(n,e=2){return j(n.slice(0,n.length-e))}function ir(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function La(n){let e=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(e=[rr(n),...ir(n)]),e}function R3(n,e=!1){let t=W().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=W().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&W().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=t/2),e&&(t=t*2,s=s*2,n=n.map((a,c)=>c>=n.length-2?wh(n[c]):n[c]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=As(n).newShape);let o=j(n),r=null;n.length<=1&&o<=t?r=[1,o]:n.length===2&&n[0]<=t&&n[1]<=t?r=n:n.length===3&&n[0]*n[1]<=t&&n[2]<=t?r=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=t&&n[1]*n[2]<=t?r=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=t&&n[3]<=t?r=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=t&&n[1]*n[2]*n[3]<=t&&(r=[n[0],n[1]*n[2]*n[3]]);const i=r!=null&&Math.max(...r)>s&&Math.min(...r)<=(e?2:1)&&Math.min(...r)>0;if(r==null||i)if(e){const a=rr(n);let c=2,l=2;n.length&&([c,l]=ir(n)),o=a*(c/2)*(l/2),r=Ru(o).map(u=>u*2)}else r=Ru(o);return r}function Pa(n){return n%2===0}function Ic(n,e){if(n=n.slice(-2),e=e.slice(-2),Re(n,e)||!n.length||!e.length||n[0]===0||n[1]===0||e[0]===0||e[1]===0)return!0;if(n.length!==e.length){const t=n[n.length-1],s=e[e.length-1];if(t===s||Pa(t)&&Pa(s)&&(n[0]===1||e[0]===1))return!0}return n[1]===e[1]&&Pa(n[0])&&Pa(e[0])}let Iu,$u;function D3(n){if(Iu==null){const e=En(n);Iu=e.getParameter(e.MAX_TEXTURE_SIZE)}return Iu}function A3(n){if($u==null){const e=En(n);$u=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,$u)}function F3(n){if(n===0)return 0;let e;const t=En(n);return hn(t,"EXT_disjoint_timer_query_webgl2")&&n===2?e=2:hn(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function hn(n,e){return n.getExtension(e)!=null}function Om(n){try{if(En(n)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function O3(n){if(n===0)return!1;const e=En(n);if(n===1){if(!hn(e,"OES_texture_float"))return!1}else if(!hn(e,"EXT_color_buffer_float"))return!1;return ch(e)}function M3(n){if(n===0)return!1;const e=En(n);if(n===1){if(!hn(e,"OES_texture_float")||!hn(e,"WEBGL_color_buffer_float"))return!1}else{if(hn(e,"EXT_color_buffer_float"))return ch(e);const s="EXT_color_buffer_half_float";if(hn(e,s)){const o=e.getExtension(s);return _3(e,o)}return!1}return ch(e)}function ch(n){const e=Yp(n),t=n.createTexture();n.bindTexture(n.TEXTURE_2D,t),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,r),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0);const i=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(t),n.deleteFramebuffer(r),i}function _3(n,e){const t=Yp(n,e),s=n.createTexture();n.bindTexture(n.TEXTURE_2D,s),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatHalfFloat,1,1,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);const i=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,i),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,s,0);const a=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(s),n.deleteFramebuffer(i),a}function L3(n){return n!==2?!1:En(n).fenceSync!=null}function va(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&k(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ie=W();ie.registerFlag("HAS_WEBGL",()=>ie.getNumber("WEBGL_VERSION")>0);ie.registerFlag("WEBGL_VERSION",()=>Om(2)?2:Om(1)?1:0);ie.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);ie.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>ie.get("WEBGL_VERSION")===2);ie.registerFlag("WEBGL_CPU_FORWARD",()=>!0);ie.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);ie.registerFlag("WEBGL_PACK",()=>ie.getBool("HAS_WEBGL"));ie.registerFlag("WEBGL_PACK_NORMALIZATION",()=>ie.getBool("WEBGL_PACK"));ie.registerFlag("WEBGL_PACK_CLIP",()=>ie.getBool("WEBGL_PACK"));ie.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>ie.getBool("WEBGL_PACK"));ie.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>ie.getBool("WEBGL_PACK"));ie.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>ie.getBool("WEBGL_PACK"));ie.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>ie.getBool("WEBGL_PACK"));ie.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>ie.getBool("WEBGL_PACK"));ie.registerFlag("WEBGL_PACK_REDUCE",()=>ie.getBool("WEBGL_PACK"));ie.registerFlag("WEBGL_LAZILY_UNPACK",()=>ie.getBool("WEBGL_PACK"));ie.registerFlag("WEBGL_CONV_IM2COL",()=>ie.getBool("WEBGL_PACK"));ie.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>ie.getBool("WEBGL_PACK"));ie.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>D3(ie.getNumber("WEBGL_VERSION")));ie.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>A3(ie.getNumber("WEBGL_VERSION")));ie.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=ie.getNumber("WEBGL_VERSION");return n===0?0:F3(n)});ie.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>ie.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!sx());ie.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>O3(ie.getNumber("WEBGL_VERSION")));ie.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>ie.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:ie.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));ie.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>M3(ie.getNumber("WEBGL_VERSION")));ie.registerFlag("WEBGL_FENCE_API_ENABLED",()=>L3(ie.getNumber("WEBGL_VERSION")));ie.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>ie.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);ie.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});ie.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>sx()?1:-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)});ie.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);ie.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);ie.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);ie.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);ie.registerFlag("WEBGL_EXP_CONV",()=>!1);ie.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>ie.getBool("IS_TEST"));ie.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);ie.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);ie.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);ie.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mt(){let n,e,t,s,o,r,i,a,c,l;return W().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",e="in",t="out",s="in",o="texture",r="outputColor",i="out vec4 outputColor;",a=W().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",c="",l=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",e="attribute",t="varying",s="varying",o="texture2D",r="gl_FragColor",i="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,c=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,l=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:e,varyingVs:t,varyingFs:s,texture2D:o,output:r,defineOutput:i,defineSpecialNaN:a,defineSpecialInf:c,defineRound:l}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ko(n,e,t="index"){const s=ce(e);return s.map((o,r)=>{const i=`int ${n[r]} = ${t} / ${o}`,a=r===s.length-1?`int ${n[r+1]} = ${t} - ${n[r]} * ${o}`:`index -= ${n[r]} * ${o}`;return`${i}; ${a};`}).join("")}function Ql(n,e,t="index"){const s=ce(e);return s.map((o,r)=>{const i=`int ${n[r]} = ${t} / outShapeStrides[${r}]`,a=r===s.length-1?`int ${n[r+1]} = ${t} - ${n[r]} * outShapeStrides[${r}]`:`index -= ${n[r]} * outShapeStrides[${r}]`;return`${i}; ${a};`}).join("")}function P3(n,e){const t=n.length,s=n.map(r=>`${e}[${r}]`),o=new Array(t-1);o[t-2]=s[t-1];for(let r=t-3;r>=0;--r)o[r]=`(${o[r+1]} * ${s[r+1]})`;return o}function z3(n,e,t="index"){const s=n.map((r,i)=>i),o=P3(s,e);return o.map((r,i)=>{const a=`int ${n[i]} = ${t} / ${o[i]}`,c=i===o.length-1?`int ${n[i+1]} = ${t} - ${n[i]} * ${o[i]}`:`index -= ${n[i]} * ${o[i]}`;return`${a}; ${c};`}).join("")}function Jp(n){const e=ce(n).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function Zp(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const rw=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:iw}=kN;function B3(n,e,t){const s=[];if(n.forEach(p=>{const f=j(p.shapeInfo.logicalShape);if(p.shapeInfo.isUniform?s.push(`uniform float ${p.name}${f>1?`[${f}]`:""};`):(s.push(`uniform sampler2D ${p.name};`),s.push(`uniform int offset${p.name};`)),t.enableShapeUniforms){const{uniformShape:m}=Qp(t.packedInputs,p.shapeInfo.logicalShape,p.shapeInfo.texShape);switch(m.length){case 1:s.push(`uniform int ${p.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${p.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${p.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${p.name}Shape;`);break}s.push(`uniform ivec2 ${p.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break}s.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(p=>{s.push(`uniform ${p.type} ${p.name}${p.arrayIndex?`[${p.arrayIndex}]`:""};`)});const o=s.join(`
`),r=n.map(p=>V3(p,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),i=e.texShape,a=Mt(),c=G3(a);let l,u,h=j3(a);return e.isPacked?(l=W3(e.logicalShape,i,t.enableShapeUniforms),u=q3(a)):(l=U3(e.logicalShape,i,t.enableShapeUniforms),u=H3(a)),t.packedInputs&&(h+=J3),[h,c,u,o,l,r,t.userCode].join(`
`)}function yr(n,e=!1){const t=n.shapeInfo.logicalShape;switch(t.length){case 0:return lz(n,e);case 1:return hz(n,e);case 2:return pz(n,e);case 3:return mz(n,e);case 4:return xz(n,e);case 5:return yz(n);case 6:return bz(n);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function aw(n,e){switch(n.shapeInfo.logicalShape.length){case 0:return cz(n);case 1:return uz(n,e);case 2:return dz(n,e);case 3:return fz(n,e);default:return gz(n,e)}}function V3(n,e,t=!1,s){let o="";t?o+=aw(n,s):o+=yr(n,s);const r=n.shapeInfo.logicalShape,i=e.logicalShape;return r.length<=i.length&&(t?o+=wz(n,e):o+=vz(n,e)),o}function W3(n,e,t){switch(n.length){case 0:return cw();case 1:return Z3(n,e,t);case 2:return iz(n,e,t);case 3:return ez(n,e,t);default:return nz(n,e,t)}}function U3(n,e,t){switch(n.length){case 0:return cw();case 1:return Q3(n,e,t);case 2:return az(n,e,t);case 3:return tz(n,e,t);case 4:return sz(n,e,t);case 5:return oz(n,e);case 6:return rz(n,e);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function G3(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function H3(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function q3(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function j3(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${K3}
    ${X3}
    ${Y3}
  `}const K3=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,X3=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Y3=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,J3=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function cw(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function Z3(n,e,t){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return s[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function Q3(n,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function ez(n,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],o=Math.ceil(n[2]/2),r=o*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec3(b, r, c);
    }
  `}function tz(n,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Ql(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const s=ko(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function nz(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],o=Math.ceil(n[n.length-1]/2),r=o*Math.ceil(n[n.length-2]/2);let i=r,a="",c="b, r, c";for(let l=2;l<n.length-1;l++)i*=n[n.length-l-1],a=`
      int b${l} = index / ${i};
      index -= b${l} * ${i};
    `+a,c=`b${l}, `+c;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${a}

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec${n.length}(${c});
    }
  `}function sz(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Ql(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const s=ko(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function oz(n,e){const t=ko(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function rz(n,e){const t=ko(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function iz(n,e,t){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(Re(n,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;const o=Math.ceil(n[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec2(r, c);
    }
  `}function az(n,e,t){return Re(n,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:n[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function To(n){return`offset${n}`}function cz(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),s=Mt();return`
    vec4 ${t}() {
      return ${s.texture2D}(${e}, halfCR);
    }
  `}function lz(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`float ${s}() {return ${t};}`;const[o,r]=n.shapeInfo.texShape;if(o===1&&r===1)return`
      float ${s}() {
        return sampleTexture(${t}, halfCR);
      }
    `;const i=To(t);if(e)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${i});
      return sampleTexture(${t}, uv);
    }
  `;const[a,c]=n.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${a}, ${c}, ${i});
      return sampleTexture(${t}, uv);
    }
  `}function uz(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),o=n.shapeInfo.texShape,r=Mt();if(e)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${r.texture2D}(${t}, uv);
    }
  `;const i=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${r.texture2D}(${t}, uv);
    }
  `}function hz(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${br(n)}
      }
    `;const o=n.shapeInfo.texShape,r=o[0],i=o[1];if(i===1&&r===1)return`
      float ${s}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;const a=To(t);return i===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${r}.0);
        return sampleTexture(${t}, uv);
      }
    `:r===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${a});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${r}, ${i}, index + ${a});
      return sampleTexture(${t}, uv);
    }
  `}function dz(n,e){const t=n.shapeInfo.logicalShape,s=n.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n.shapeInfo.texShape,i=r[0],a=r[1],c=Mt();if(r!=null&&Re(t,r))return e?`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${c.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${i}.0);

        return ${c.texture2D}(${s}, uv);
      }
    `;if(e)return`
    vec4 ${o}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${c.texture2D}(${s}, uv);
    }
  `;const l=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],u=Math.ceil(t[1]/2);return`
    vec4 ${o}(int row, int col) {
      vec2 uv = packedUVfrom2D(${u}, ${l[0]}, ${l[1]}, row, col);
      return ${c.texture2D}(${s}, uv);
    }
  `}function pz(n,e){const t=n.shapeInfo.logicalShape,s=n.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n.shapeInfo.texShape;if(r!=null&&Re(t,r)){if(e)return`
      float ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;const d=r[0],p=r[1];return`
    float ${o}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${p}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `}const{newShape:i,keptDims:a}=As(t),c=i;if(c.length<t.length){const d=wr(n,c),p=["row","col"];return`
      ${yr(d,e)}
      float ${o}(int row, int col) {
        return ${o}(${vr(p,a)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${o}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${br(n)}
      }
    `;const l=r[0],u=r[1],h=To(s);return u===1?e?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);
      return sampleTexture(${s}, uv);
    }
  `:l===1?e?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:e?`
      float ${o}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${o}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${h};
    vec2 uv = uvFromFlat(${l}, ${u}, index);
    return sampleTexture(${s}, uv);
  }
`}function fz(n,e){const t=n.shapeInfo.logicalShape,s=n.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n.shapeInfo.texShape,i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(t[0]===1){const d=t.slice(1),p=[1,2],f=wr(n,d),m=["b","row","col"];return`
        ${aw(f,e)}
        vec4 ${o}(int b, int row, int col) {
          return ${o}(${vr(m,p)});
        }
      `}const a=Mt();if(e)return`
    vec4 ${o}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${s}, uv);
    }
  `;const c=i[0],l=i[1],u=Math.ceil(t[2]/2),h=u*Math.ceil(t[1]/2);return`
    vec4 ${o}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${c}, ${l}, ${h}, ${u}, b, row, col);
      return ${a.texture2D}(${s}, uv);
    }
  `}function mz(n,e){const t=n.shapeInfo.logicalShape,s=n.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),r=t[1]*t[2],i=t[2],{newShape:a,keptDims:c}=As(t),l=a;if(l.length<t.length){const m=wr(n,l),g=["row","col","depth"];return`
        ${yr(m,e)}
        float ${o}(int row, int col, int depth) {
          return ${o}(${vr(g,c)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${r}, ${i}, 1)));
        ${br(n)}
      }
    `;const u=n.shapeInfo.texShape,h=u[0],d=u[1],p=n.shapeInfo.flatOffset;if(d===r&&p==null)return e?`
      float ${o}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${o}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${h}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(d===i&&p==null)return e?`
      float ${o}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${o}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);
      return sampleTexture(${s}, uv);
    }
  `;const f=To(s);return e?`
    float ${o}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${o}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r} + col * ${i} + depth + ${f};
        vec2 uv = uvFromFlat(${h}, ${d}, index);
        return sampleTexture(${s}, uv);
      }
  `}function gz(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),o=Mt();if(e)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${o.texture2D}(${t}, uv);
    }
  `;const r=n.shapeInfo.logicalShape,i=r.length,a=n.shapeInfo.texShape,c=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],l=c[0],u=c[1],h=Math.ceil(r[i-1]/2);let d=h*Math.ceil(r[i-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let m=2;m<i-1;m++)p=`int b${m}, `+p,d*=r[i-m-1],f=`b${m} * ${d} + `+f;return`
    vec4 ${s}(${p}) {
      int index = ${f};
      int texR = index / ${u};
      int texC = index - texR * ${u};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${l});
      return ${o.texture2D}(${t}, uv);
    }
  `}function xz(n,e){const t=n.shapeInfo.logicalShape,s=n.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),r=t[3],i=t[2]*r,a=t[1]*i,{newShape:c,keptDims:l}=As(t);if(c.length<t.length){const y=wr(n,c),w=["row","col","depth","depth2"];return`
      ${yr(y,e)}
      float ${o}(int row, int col, int depth, int depth2) {
        return ${o}(${vr(w,l)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${i}, ${r}, 1)));
        ${br(n)}
      }
    `;const u=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(p===a&&u==null)return e?`
      float ${o}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(p===r&&u==null)return e?`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;const x=To(s);return e?`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${x});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} +
          depth * ${r} + depth2;
      vec2 uv = uvFromFlat(${d}, ${p}, index + ${x});
      return sampleTexture(${s}, uv);
    }
  `}function yz(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),o=e[4],r=e[3]*o,i=e[2]*r,a=e[1]*i,{newShape:c,keptDims:l}=As(e);if(c.length<e.length){const m=wr(n,c),g=["row","col","depth","depth2","depth3"];return`
      ${yr(m)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${vr(g,l)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${i}, ${r}, ${o})) +
          depth3;
        ${br(n)}
      }
    `;const u=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],p=h[1];if(p===a&&u==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${r}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(p===o&&u==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;const f=To(t);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} + depth * ${r} +
          depth2 * ${o} + depth3 + ${f};
      vec2 uv = uvFromFlat(${d}, ${p}, index);
      return sampleTexture(${t}, uv);
    }
  `}function bz(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:o,keptDims:r}=As(e);if(o.length<e.length){const g=wr(n,o),x=["row","col","depth","depth2","depth3","depth4"];return`
      ${yr(g)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${vr(x,r)});
      }
    `}const i=e[5],a=e[4]*i,c=e[3]*a,l=e[2]*c,u=e[1]*l;if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${u}, ${l}, ${c}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${br(n)}
      }
    `;const h=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,p=d[0],f=d[1];if(f===u&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${l}, ${c}, ${a}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(f===i&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;const m=To(t);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${u} + col * ${l} + depth * ${c} +
          depth2 * ${a} + depth3 * ${i} + depth4 + ${m};
      vec2 uv = uvFromFlat(${p}, ${f}, index);
      return sampleTexture(${t}, uv);
    }
  `}function br(n){const e=n.name,t=j(n.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function wz(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),o="get"+s+"AtOutCoords",r=n.shapeInfo.logicalShape.length,i=e.logicalShape.length,a=iw(n.shapeInfo.logicalShape,e.logicalShape),c=_e(i),l=i-r;let u;const h=["x","y","z","w","u","v"];r===0?u="":i<2&&a.length>=1?u="coords = 0;":u=a.map(y=>`coords.${h[y+l]} = 0;`).join(`
`);let d="";i<2&&r>0?d="coords":d=n.shapeInfo.logicalShape.map((y,w)=>`coords.${h[w+l]}`).join(", ");let p="return outputValue;";const m=j(n.shapeInfo.logicalShape)===1,x=j(e.logicalShape)===1;if(r===1&&!m&&!x)p=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!x)i===1?p=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:p=`
        return vec4(outputValue.x);
      `;else if(a.length){const y=r-2,w=r-1;a.indexOf(y)>-1&&a.indexOf(w)>-1?p="return vec4(outputValue.x);":a.indexOf(y)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(w)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${o}() {
      ${c} coords = getOutputCoords();
      ${u}
      vec4 outputValue = get${s}(${d});
      ${p}
    }
  `}function vz(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),o="get"+s+"AtOutCoords",r=e.texShape,i=n.shapeInfo.texShape,a=n.shapeInfo.logicalShape.length,c=e.logicalShape.length;if(!n.shapeInfo.isUniform&&a===c&&n.shapeInfo.flatOffset==null&&Re(i,r))return`
      float ${o}() {
        return sampleTexture(${t}, resultUV);
      }
    `;const l=_e(c),u=iw(n.shapeInfo.logicalShape,e.logicalShape),h=c-a;let d;const p=["x","y","z","w","u","v"];a===0?d="":c<2&&u.length>=1?d="coords = 0;":d=u.map(m=>`coords.${p[m+h]} = 0;`).join(`
`);let f="";return c<2&&a>0?f="coords":f=n.shapeInfo.logicalShape.map((m,g)=>`coords.${p[g+h]}`).join(", "),`
    float ${o}() {
      ${l} coords = getOutputCoords();
      ${d}
      return get${s}(${f});
    }
  `}function _e(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function Qp(n,e,t){const{newShape:s,keptDims:o}=As(e),r=e.length,i=n&&r===3&&e[0]===1,a=i?e.slice(1):s,c=!n&&r>1&&!Re(e,t)&&s.length<r||i;return{useSqueezeShape:c,uniformShape:c?a:e,keptDims:o}}function wr(n,e){const t=JSON.parse(JSON.stringify(n));return t.shapeInfo.logicalShape=e,t}function vr(n,e){return e.map(t=>n[t]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cz(n,e,t,s){const o=t.map((u,h)=>{const d={logicalShape:u.shape,texShape:u.isUniform?null:u.texData.texShape,isUniform:u.isUniform,isPacked:u.isUniform?!1:u.texData.isPacked,flatOffset:null};return u.texData!=null&&u.texData.slice!=null&&u.texData.slice.flatOffset>0&&(d.flatOffset=u.texData.slice.flatOffset),{name:e.variableNames[h],shapeInfo:d}}),r=o.map(u=>u.shapeInfo),i={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},a=B3(o,i,e),c=m3(n.gl,a),l=n.createProgram(c);return W().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:c,source:a,webGLProgram:l,inShapeInfos:r,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(n.buildVao(l),Object.assign({program:e,fragmentShader:c,source:a,webGLProgram:l,inShapeInfos:r,outShapeInfo:i},lw(n,e,l)))}function lw(n,e,t){const s=[],o=[];let r,i,a,c=null,l=null;l=n.getUniformLocation(t,"NAN",!1),W().getNumber("WEBGL_VERSION")===1&&(c=n.getUniformLocation(t,"INFINITY",!1));const u=!1;for(const h of e.variableNames){const d={name:h,uniform:n.getUniformLocation(t,h,u),offset:n.getUniformLocation(t,`offset${h}`,u)};e.enableShapeUniforms&&(d.shape=n.getUniformLocation(t,`${h}Shape`,u),d.texShape=n.getUniformLocation(t,`${h}TexShape`,u)),s.push(d)}if(e.enableShapeUniforms&&(r=n.getUniformLocation(t,"outShape",u),a=n.getUniformLocation(t,"outShapeStrides",u),i=n.getUniformLocation(t,"outTexShape",u)),e.customUniforms)for(const h of e.customUniforms)o.push(n.getUniformLocation(t,h.name,u));return{variablesLocations:s,customUniformLocations:o,infLoc:c,nanLoc:l,outShapeLocation:r,outShapeStridesLocation:a,outTexShapeLocation:i}}function Mm(n,e){if(n.length!==e.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${e.length} inputs`);n.forEach((t,s)=>{const o=t.logicalShape,r=e[s],i=r.shape;if(!Re(o,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${o} and ${i} must match`);if(t.isUniform&&r.isUniform)return;const a=t.texShape,c=r.isUniform?null:r.texData.texShape;if(!Re(a,c))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${c} must match`)})}function Iz(n,e,t,s,o){e.program.enableShapeUniforms||(Mm(e.inShapeInfos,t),Mm([e.outShapeInfo],[s]));const r=s.texData.texture,i=s.texData.texShape;s.texData.isPacked?n.setOutputPackedMatrixTexture(r.texture,i[0],i[1]):n.setOutputMatrixTexture(r.texture,i[0],i[1]),n.setProgram(e.webGLProgram),n.bindVertexArray(e.webGLProgram.vao),W().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&n.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&n.gl.uniform1f(e.nanLoc,NaN);for(let c=0;c<t.length;++c){const l=t[c],{uniform:u,offset:h,shape:d,texShape:p}=e.variablesLocations[c];if(d){const{uniformShape:f}=Qp(e.program.packedInputs,l.shape,l.texData.texShape);switch(f.length){case 1:n.gl.uniform1iv(d,new Int32Array(f));break;case 2:n.gl.uniform2iv(d,new Int32Array(f));break;case 3:n.gl.uniform3iv(d,new Int32Array(f));break;case 4:n.gl.uniform4iv(d,new Int32Array(f));break}}if(p&&n.gl.uniform2i(p,l.texData.texShape[0],l.texData.texShape[1]),u!=null){if(l.isUniform){if(j(l.shape)<2)n.gl.uniform1f(u,l.uniformValues[0]);else{let f=l.uniformValues;f instanceof Float32Array||(f=new Float32Array(f)),n.gl.uniform1fv(u,f)}continue}l.texData.slice!=null&&h!=null&&n.gl.uniform1i(h,l.texData.slice.flatOffset),n.setInputMatrixTexture(l.texData.texture.texture,u,c)}}const a=e.outShapeLocation;if(a)switch(s.shape.length){case 1:n.gl.uniform1iv(a,new Int32Array(s.shape));break;case 2:n.gl.uniform2iv(a,new Int32Array(s.shape));break;case 3:n.gl.uniform3iv(a,new Int32Array(s.shape));break;case 4:n.gl.uniform4iv(a,new Int32Array(s.shape));break}if(e.outShapeStridesLocation){const c=ce(s.shape);switch(s.shape.length){case 2:n.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(c));break;case 3:n.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(c));break;case 4:n.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(c));break}}if(e.outTexShapeLocation&&n.gl.uniform2i(e.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),e.program.customUniforms&&o)for(let c=0;c<e.program.customUniforms.length;++c){const l=e.program.customUniforms[c],u=e.customUniformLocations[c],h=o[c];if(l.type==="float")n.gl.uniform1fv(u,h);else if(l.type==="vec2")n.gl.uniform2fv(u,h);else if(l.type==="vec3")n.gl.uniform3fv(u,h);else if(l.type==="vec4")n.gl.uniform4fv(u,h);else if(l.type==="int")n.gl.uniform1iv(u,h);else if(l.type==="ivec2")n.gl.uniform2iv(u,h);else if(l.type==="ivec3")n.gl.uniform3iv(u,h);else if(l.type==="ivec4")n.gl.uniform4iv(u,h);else throw Error(`uniform type ${l.type} is not supported yet.`)}n.executeProgram()}function $z(n,e,t){let s="";e.concat(t).forEach(i=>{const a=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!i.isUniform){const c=i.texData.texShape,{useSqueezeShape:l,uniformShape:u,keptDims:h}=Qp(n.packedInputs,i.shape,c);let d="",p="",f="";if(u.length===1&&n.packedInputs){const v=[Math.ceil(c[0]/2),Math.ceil(c[1]/2)];d=`${v[0]>1}_${v[1]>1}`}else if(u.length===2&&!n.packedInputs)p=`${u[0]>1}_${u[1]>1}`;else if(u.length>2&&!n.packedInputs){const v=ce(u);f=`${v[0]===c[1]}_${v[v.length-1]===c[1]}`}const m=i.shape.length,g=u.length===2&&Re(i.shape,c),x=j(i.shape)===1,y=Zo(i.shape,t.shape),w=!n.packedInputs&&m===t.shape.length&&Re(c,t.texData.texShape),b=n.packedInputs||u.length>2?"":`${c[0]>1}_${c[1]>1}`;s+=`${m}_${w}_${l?h:""}_${u.length}_${x}_${y}_${g}_${d}_${p}_${f}_${b}_${a}`}else{const c=i.isUniform?"uniform":i.texData.texShape;s+=`${i.shape}_${c}_${a}`}});const o=n.userCode;let r=n.constructor.name;return r+="_"+s+"_"+o+`${W().getNumber("WEBGL_VERSION")}`,r}function Et(n){return W().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sz{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=ei.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Mt();this.outputShape=e,this.enableShapeUniforms=Et(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Ql(["r","c","d"],e):ko(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kz{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=ei.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Mt();this.outputShape=e,this.enableShapeUniforms=Et(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Ql(["r","c","d"],e):ko(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tz{constructor(e){this.variableNames=["A"],this.outTexUsage=Qt.DOWNLOAD;const t=Mt();this.outputShape=e,this.userCode=`
      ${rw}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nz{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Qt.DOWNLOAD;const t=Mt();this.outputShape=e,this.userCode=`
      ${rw}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ez={R:0,G:1,B:2,A:3};class _m{constructor(e,t=!1,s="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const o=Mt();this.outputShape=e,this.enableShapeUniforms=Et(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)");let i="";for(let a=0;a<s.length;a++){const c=s[a];i+=`
          if(offset == ${a}) {
            result = values[${Ez[c]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?Zp():Jp(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${s.length});

        flatIndex = idiv(flatIndex, ${s.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${o.texture2D}(A, uv);
          ${i}
        }
        ${o.output} = vec4(${r}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rz{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=Mt();this.outputShape=e,this.enableShapeUniforms=Et(this.outputShape.length);let o="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let a=0;a<=1;a++){const c=i*2+a;o+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${i};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${s.texture2D}(A, uv);

            if (offset == 0) {
              result[${c}] = values[0];
            } else if (offset == 1) {
              result[${c}] = values[1];
            } else if (offset == 2) {
              result[${c}] = values[2];
            } else {
              result[${c}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Zp():Jp(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${o}

          ${s.output} = ${r};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dz(n){const e=Mt(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return f3(n,t)}function Az(n){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return b3(n,e)}function Fz(n){const e=new Uint16Array([0,1,2,2,1,3]);return w3(n,e)}function Ca(n,e,t,s,o,r){C3(e,t);const i=v3(n),a=n.TEXTURE_2D;return ne(n,()=>n.bindTexture(a,i)),ne(n,()=>n.texParameteri(a,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),ne(n,()=>n.texParameteri(a,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),ne(n,()=>n.texParameteri(a,n.TEXTURE_MIN_FILTER,n.NEAREST)),ne(n,()=>n.texParameteri(a,n.TEXTURE_MAG_FILTER,n.NEAREST)),W().getNumber("WEBGL_VERSION")===1?ne(n,()=>n.texImage2D(a,0,s,e,t,0,o,r,null)):ne(n,()=>n.texStorage2D(a,1,s,e,t)),ne(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:i,texShape:[t,e]}}function uw(n){return n.internalFormatFloat}function Oz(n,e,t,s){const[o,r]=wa(e,t);return Ca(n,o,r,uw(s),s.textureFormatFloat,n.FLOAT)}function hw(n){return n.internalFormatHalfFloat}function Mz(n,e,t,s){const[o,r]=wa(e,t);return Ca(n,o,r,hw(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function dw(n){return n.downloadTextureFormat}function _z(n,e,t,s){const[o,r]=wa(e,t);return Ca(n,o,r,dw(s),n.RGBA,n.UNSIGNED_BYTE)}function pw(n){return n.internalFormatPackedFloat}function Lz(n,e,t,s){const[o,r]=xr(e,t);return Ca(n,o,r,pw(s),n.RGBA,n.FLOAT)}function fw(n){return n.internalFormatPackedHalfFloat}function Pz(n,e,t,s){const[o,r]=xr(e,t);return Ca(n,o,r,fw(s),n.RGBA,s.textureTypeHalfFloat)}function zz(n,e,t){return ne(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),Am(n,e,"clipSpacePos",t,3,20,0)&&Am(n,e,"uv",t,2,20,12)}function Bz(n,e,t,s,o,r){ne(n,()=>n.bindTexture(n.TEXTURE_2D,e));let i,a,c;o instanceof Uint8Array?(i=new Uint8Array(t*s*4),a=n.UNSIGNED_BYTE,c=n.RGBA):(i=new Float32Array(t*s*4),a=n.FLOAT,c=r.internalFormatPackedFloat),i.set(o),W().getNumber("WEBGL_VERSION")===2?ne(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t,s,n.RGBA,a,i)):ne(n,()=>n.texImage2D(n.TEXTURE_2D,0,c,t,s,0,n.RGBA,a,i)),ne(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function Vz(n,e,t){ne(n,()=>n.bindTexture(n.TEXTURE_2D,e)),t.data instanceof Uint8Array?W().getNumber("WEBGL_VERSION")===2?ne(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t.width,t.height,n.RGBA,n.UNSIGNED_BYTE,t.data)):ne(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,t.width,t.height,0,n.RGBA,n.UNSIGNED_BYTE,t.data)):W().getNumber("WEBGL_VERSION")===2?ne(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,t)):ne(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,t)),ne(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function Wz(n,e,t,s){const o=n.createBuffer();ne(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,o));const a=4*4*e*t;return ne(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,a,n.STREAM_READ)),ne(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,0)),ne(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),o}function Uz(n,e,t){const s=n,o=new Float32Array(t);return s.bindBuffer(s.PIXEL_PACK_BUFFER,e),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,o),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),o}function Gz(n,e,t,s){const[o,r]=wa(e,t),i=4,a=new Uint8Array(a3(e*t,i));return ne(n,()=>n.readPixels(0,0,o,r,s.downloadTextureFormat,n.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}function Hz(n,e,t,s,o,r,i,a){const c=n,l=new Float32Array(c3(r,i));return c.bindBuffer(c.PIXEL_PACK_BUFFER,e),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,l),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),l}function qz(n,e,t){const s=new Float32Array(e*t*4);return ne(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,s)),s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Su{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=W().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,o3(t,e)):this.gl=En(t),e=this.gl,W().getNumber("WEBGL_VERSION")===2){const r=e;this.createVertexArray=()=>ne(r,()=>r.createVertexArray()),this.bindVertexArray=i=>ne(r,()=>r.bindVertexArray(i)),this.deleteVertexArray=i=>ne(r,()=>r.deleteVertexArray(i)),this.getVertexArray=()=>ne(r,()=>r.getParameter(r.VERTEX_ARRAY_BINDING))}else if(e!=null){const r=e.getExtension("OES_vertex_array_object");if(r==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>ne(e,()=>r.createVertexArrayOES()),this.bindVertexArray=i=>ne(e,()=>r.bindVertexArrayOES(i)),this.deleteVertexArray=i=>ne(e,()=>r.deleteVertexArrayOES(i)),this.getVertexArray=()=>ne(e,()=>e.getParameter(r.VERTEX_ARRAY_BINDING_OES))}let s="WEBGL_color_buffer_float";const o="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),W().getNumber("WEBGL_VERSION")===1){const r="OES_texture_float",i="OES_texture_half_float";if(this.textureFloatExtension=Ma(this.gl,r),hn(this.gl,i))this.textureHalfFloatExtension=Ma(this.gl,i);else if(W().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),hn(this.gl,o))this.colorBufferHalfFloatExtension=Ma(this.gl,o);else if(W().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",hn(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if(hn(this.gl,o))this.colorBufferHalfFloatExtension=this.gl.getExtension(o);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=Az(this.gl),this.indexBuffer=Fz(this.gl),this.framebuffer=I3(this.gl),this.textureConfig=Yp(this.gl,this.textureHalfFloatExtension)}get debug(){return W().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;ne(e,()=>e.finish()),ne(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),ne(e,()=>e.deleteFramebuffer(this.framebuffer)),ne(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),ne(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),ne(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),Oz(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),Mz(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),_z(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),Vz(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,s,o){this.throwIfDisposed(),Bz(this.gl,e,t,s,o,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),Pz(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),Lz(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Fm(this.gl,this.framebuffer),this.outputTexture=null),ne(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,s){return this.downloadMatrixDriver(e,()=>Gz(this.gl,t,s,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,s,o,r,i){return Hz(this.gl,e,t,s,o,r,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return Uz(this.gl,e,t)}createBufferFromTexture(e,t,s){this.bindTextureToFrameBuffer(e);const o=Wz(this.gl,t,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),o}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,s;if(W().getBool("WEBGL_FENCE_API_ENABLED")){const o=e,r=o.fenceSync(o.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),s=()=>{const i=o.clientWaitSync(r,0,0);return i===o.ALREADY_SIGNALED||i===o.CONDITION_SATISFIED},t=r}else W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(t,W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:t,isFencePassed:s}}downloadMatrixFromPackedTexture(e,t,s){return this.downloadMatrixDriver(e,()=>qz(this.gl,t,s))}createProgram(e){this.throwIfDisposed();const t=this.gl;this.vertexShader==null&&(this.vertexShader=Dz(t));const s=x3(t);ne(t,()=>t.attachShader(s,this.vertexShader)),ne(t,()=>t.attachShader(s,e)),y3(t,s);const o=Object.assign(s,{vao:this.createVertexArray()});return this.debug&&vu(t,o),o}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;ne(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),zz(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(ne(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&vu(this.gl,this.program),ne(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,s=!0){return this.throwIfDisposed(),s?S3(this.gl,e,t):k3(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),ne(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,s){this.throwIfDisposed(),this.throwIfNoProgram(),T3(this.gl,e,t,s)}setOutputMatrixTexture(e,t,s){this.setOutputMatrixTextureDriver(e,s,t)}setOutputPackedMatrixTexture(e,t,s){this.throwIfDisposed();const[o,r]=xr(t,s);this.setOutputMatrixTextureDriver(e,o,r)}setOutputMatrixWriteRegion(e,t,s,o){this.setOutputMatrixWriteRegionDriver(s,e,o,t)}setOutputPackedMatrixWriteRegion(e,t,s,o){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&vu(this.gl,this.program),_a(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}ne(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),ne(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Ma(this.gl,W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,o=this.getQueryTimerExtensionWebGL2(),r=s.createQuery();return s.beginQuery(o.TIME_ELAPSED_EXT,r),r}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const t=this.gl,s=this.getQueryTimerExtensionWebGL2();t.endQuery(s.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await ff(()=>this.disposed||this.isQueryAvailable(e,W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){const s=this.gl;return s.getQueryParameter(e,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(e,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){const s=this.gl,o=this.getQueryTimerExtensionWebGL2(),r=s.getQueryParameter(e,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),r&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),o=s.getQueryObjectEXT(e,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),o&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=jz(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:s}=this.itemsToPoll[t];s()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in W().platform&&(s=W().platform.setTimeoutCustom.bind(W().platform)),ff(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,s)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Cu(this.gl,e,this.framebuffer),this.debug&&_a(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Cu(this.gl,this.outputTexture,this.framebuffer),this.debug&&_a(this.gl)):Fm(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const s=t();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(e,t,s){this.throwIfDisposed();const o=this.gl;Cu(o,e,this.framebuffer),this.debug&&_a(o),this.outputTexture=e,ne(o,()=>o.viewport(0,0,t,s)),ne(o,()=>o.scissor(0,0,t,s))}setOutputMatrixWriteRegionDriver(e,t,s,o){this.throwIfDisposed(),ne(this.gl,()=>this.gl.scissor(e,t,s,o))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function jz(n){let e=0;for(;e<n.length&&n[e]();++e);return e-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:Kz,bincountImpl:mw,bincountReduceImpl:Xz,bitwiseAndImpl:Yz,castImpl:Jz,ceilImpl:Zz,concatImpl:Qz,equalImpl:eB,expImpl:tB,expm1Impl:nB,floorImpl:sB,gatherNdImpl:oB,gatherV2Impl:rB,greaterImpl:iB,greaterEqualImpl:aB,lessImpl:cB,lessEqualImpl:lB,linSpaceImpl:uB,logImpl:hB,maxImpl:dB,maximumImpl:pB,minimumImpl:fB,multiplyImpl:mB,negImpl:gB,notEqualImpl:xB,prodImpl:yB,raggedGatherImpl:bB,raggedRangeImpl:wB,raggedTensorToTensorImpl:vB,rangeImpl:CB,rsqrtImpl:IB,scatterImpl:$B,sigmoidImpl:SB,simpleAbsImpl:gw,sliceImpl:kB,sparseFillEmptyRowsImpl:TB,sparseReshapeImpl:NB,sparseSegmentReductionImpl:xw,sqrtImpl:EB,staticRegexReplaceImpl:RB,stridedSliceImpl:DB,stringNGramsImpl:AB,stringSplitImpl:FB,stringToHashBucketFastImpl:OB,subImpl:MB,tileImpl:_B,topKImpl:LB,transposeImpl:ef,uniqueImpl:PB}=VF;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yw(n,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${n}.${t}`)}function At(n,e){return e===1?[n]:yw(n,e)}function zB(n,e){if(n===1)return"rc";let t="";for(let s=0;s<n;s++)t+=e[s],s<n-1&&(t+=",");return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BB{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=Et(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const t=At("rc",this.rank),s=_e(this.rank),o=this.getOutOfBoundsCondition(t),r=this.getSetup(t),i=this.getOutput(t);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${o}) {
            setOutput(vec4(0));
          } else {
            ${r}

            setOutput(vec4(${i}));
          }
        }
      `}}getSourceCoordsArr(e){const t=[];for(let s=0;s<=1;s++)for(let o=0;o<=1;o++){let r=`${s===0?"r":"rp1"}, ${o===0?"c":"cp1"}`;for(let i=2;i<this.rank;i++)r=`${e[e.length-1-i]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let s=this.rank-2;s<this.rank;s++)t+=`${e[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";const t=e.slice(-2),s=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],o=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${s};
      bool rEdge = rp1 >= ${o};
    `}getOutput(e){const t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bw{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=Et(this.outputShape.length);let s="";for(let o=0;o<4;o++){let r="thisRC = rc;";o%2===1&&(r+="thisRC.z += 1;"),o>1&&(r+="thisRC.y += 1;"),s+=`
        ${r}
        ${o>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${o}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${o>0?"}":""}
      `}this.userCode=`
      ${VB(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Zp():Jp(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${s}

        setOutput(result);
      }
    `}}function VB(n,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?z3(["r","c","d"],"inputShape"):ko(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WB{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,s){const o=Pm(t,s),r=zm(e,o,s);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const i=Lm(e,o,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const c=this.freeTextures[r].pop();return this.usedTextures[r].push(c),c}let a;return o===bt.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):o===bt.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):o===bt.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):o===bt.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):o===bt.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(e,t,s,o){if(this.freeTextures==null)return;const r=Pm(s,o),i=zm(t,r,o);i in this.freeTextures||(this.freeTextures[i]=[]);const a=Lm(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,o),c=W().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");c!==-1&&this._numBytesAllocated>c?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=a):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const l=this.usedTextures[i],u=l&&l.indexOf(e);if(u==null||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[u]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function UB(n,e){const t=n;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===n.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function Lm(n,e,t,s,o){const r=GB(e,s);let i;if(o){const[c,l]=xr(n[0],n[1]);i=c*l}else{const[c,l]=wa(n[0],n[1]);i=c*l}const a=UB(t,r);return i*a}function GB(n,e){switch(n){case bt.PACKED_2X2_FLOAT32:return pw(e);case bt.PACKED_2X2_FLOAT16:return fw(e);case bt.UNPACKED_FLOAT32:return uw(e);case bt.UNPACKED_FLOAT16:return hw(e);case bt.PACKED_4X1_UNSIGNED_BYTE:return dw(e);default:throw new Error(`Unknown physical texture type ${n}`)}}function HB(n){return W().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?bt.PACKED_2X2_FLOAT32:bt.UNPACKED_FLOAT32:n?bt.PACKED_2X2_FLOAT16:bt.UNPACKED_FLOAT16}function Pm(n,e){if(n===Qt.UPLOAD)return bt.PACKED_2X2_FLOAT32;if(n===Qt.RENDER||n==null)return HB(e);if(n===Qt.DOWNLOAD||n===Qt.PIXELS)return bt.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function zm(n,e,t){return`${n[0]}_${n[1]}_${e}_${t}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _n{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=Et(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const gn="if (isnan(x)) return x;",qB="return x;",Bm="return abs(x);",jB="return (x >= 0.0) ? x : (exp(x) - 1.0);",KB=gn+`
  return (x < 0.0) ? 0.0 : x;
`,XB=gn+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,ms="return x;",YB="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JB="return x;",ZB=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,QB=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,eV=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,tV="return 1.0 / (1.0 + exp(-1.0 * x));";class ws{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=Et(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nV{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=Et(this.outputShape.length);const t=e.length,s=At("rc",t),o=_e(t),r=zB(t,s),i=s.slice(-2),a=t<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`
      void main() {
        ${o} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sV=Ux,oV=1e-7,rV=1e-4,za={};function iV(n){return n in za||(za[n]={}),za[n]}const aV=W().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),cV=600;function lV(){return W().global.screen==null?1024:W().global.screen.height*W().global.screen.width*window.devicePixelRatio*cV/1024/1024}class eu extends bh{nextDataId(){return eu.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!W().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof Su)t=e;else{const s=En(W().getNumber("WEBGL_VERSION"),e);t=new Su(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const s=En(W().getNumber("WEBGL_VERSION"));t=new Su(s),this.binaryCache=iV(W().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new WB(this.gpgpu),this.numMBBeforeWarning=lV(),this.texData=new gg(this,Dn())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,s,o,r,i){const a=this.makeTensorInfo(t,s),c=this.texData.get(a.dataId);c.isPacked=!1,c.texture={texture:e,texShape:[o,r]},c.texShape=[o,r];const l=La(t),u=new _m(l,!1,i),h=this.runWebGLProgram(u,[a],s,[[o,r]]);return h.shape=t,c.texture=null,this.disposeIntermediateTensorInfo(a),h.dataId}write(e,t,s){if((W().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||W().getBool("DEBUG"))&&this.checkNumericalProblems(e),s==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const o={id:this.nextDataId()};return this.texData.set(o,{shape:t,dtype:s,values:e,usage:Qt.UPLOAD,refCount:1}),o}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,s,o,r){if(W().getBool("DEBUG")&&this.checkNumericalProblems(t),o==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:s,dtype:o,values:t,usage:Qt.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:s,dtype:o,complexTensorInfos:r,slice:i,shape:a,isPacked:c}=t;if(i!=null){let d;c?d=new ws(a,ms):d=new _n(a,ms);const p=this.runWebGLProgram(d,[{dataId:e,shape:a,dtype:o}],o),f=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),f}if(s!=null)return this.convertAndCacheOnCPU(e);if(o==="string")return s;const l=this.activeTimers!=null;let u;l&&(u=_t());let h;if(o==="complex64"){const d=this.readSync(r.real.dataId),p=this.readSync(r.imag.dataId);h=ns(d,p)}else h=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=_t()-u),this.convertAndCacheOnCPU(e,h)}async read(e){if(this.pendingRead.has(e)){const f=this.pendingRead.get(e);return new Promise(m=>f.push(m))}const t=this.texData.get(e),{values:s,shape:o,slice:r,dtype:i,complexTensorInfos:a,isPacked:c}=t;if(r!=null){let f;c?f=new ws(o,ms):f=new _n(o,ms);const m=this.runWebGLProgram(f,[{dataId:e,shape:o,dtype:i}],i),g=this.read(m.dataId);return this.disposeIntermediateTensorInfo(m),g}if(s!=null)return this.convertAndCacheOnCPU(e);if(W().getBool("DEBUG")&&!W().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&W().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null,u;if(i!=="complex64"&&W().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const f=this.texData.get(u.dataId);l=this.gpgpu.createBufferFromTexture(f.texture.texture,...Oa(o))}this.pendingRead.set(e,[]),i!=="complex64"&&await this.gpgpu.createAndWaitForFence();let h;if(i==="complex64"){const f=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]),m=f[0],g=f[1];h=ns(m,g)}else if(l==null)h=this.getValuesFromTexture(e);else{const f=j(o);h=this.gpgpu.downloadFloat32MatrixFromBuffer(l,f)}if(u!=null&&this.disposeIntermediateTensorInfo(u),l!=null){const f=this.gpgpu.gl;ne(f,()=>f.deleteBuffer(l))}const d=this.convertAndCacheOnCPU(e,h),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(f=>f(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Dn().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,t={}){const s=this.texData.get(e),{values:o,shape:r,slice:i,dtype:a,isPacked:c,texture:l}=s;if(a==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(i!=null){let p;c?p=new ws(r,ms):p=new _n(r,ms);const f=this.runWebGLProgram(p,[{dataId:e,shape:r,dtype:a}],a),m=this.readToGPU(f,t);return this.disposeIntermediateTensorInfo(f),m}if(l==null)throw o!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,t.customTexShape),h=Dn().makeTensorFromTensorInfo(u),d=this.texData.get(u.dataId);return Object.assign({tensorRef:h},d.texture)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(o=>ks(o));return we(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return we(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){const s=e[t];if(!d3(s))throw W().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:t,dtype:s,isPacked:o}=this.texData.get(e),r=j(t);if(W().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const d=this.decode(e),p=this.texData.get(d.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(p.texture.texture,...Oa(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(d),f}const i=W().getBool("WEBGL_PACK")&&o===!0,a=i?La(t):t,c=i?new Nz(a):new Tz(a),l=this.runWebGLProgram(c,[{shape:a,dtype:s,dataId:e}],"float32"),u=this.texData.get(l.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),h}timerAvailable(){return W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,s=[];let o=!1;this.programTimersStack==null?(this.programTimersStack=s,o=!0):this.activeTimers.push(s),this.activeTimers=s,e();const r=ro(this.activeTimers.map(c=>c.query)).filter(c=>c!=null),i=ro(this.activeTimers.map(c=>c.name)).filter(c=>c!=null);this.activeTimers=t,o&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const c=await Promise.all(r);a.kernelMs=wC(c),a.getExtraProfileInfo=()=>c.map((l,u)=>({name:i[u],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:_t(),endMs:null}}endTimer(e){return W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=_t(),e)}async getQueryTime(e){if(W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:s}=this.texData.get(e);return s!=null&&(this.disposeData(s.real.dataId,t),this.disposeData(s.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:s,texShape:o,usage:r,isPacked:i,slice:a}=this.texData.get(e),c=a&&a.origDataId||e,l=this.dataRefCount.get(c);l>1?this.dataRefCount.set(c,l-1):(this.dataRefCount.delete(c),t!=null&&(this.numBytesInGPU-=this.computeBytes(o,s),this.textureManager.releaseTexture(t,o,r,i)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=aV){return W().getBool("WEBGL_CPU_FORWARD")&&e.every(s=>this.texData.get(s.dataId).texture==null&&j(s.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){Zt("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return sV(e.shape,t)}packedUnaryOp(e,t,s){const o=new ws(e.shape,t),r=this.compileAndRun(o,[e],s);return Dn().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const o=gw(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,o)}if(W().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Bm,e.dtype);const t=new _n(e.shape,Bm),s=this.compileAndRun(t,[e]);return Dn().makeTensorFromTensorInfo(s)}makeTensorInfo(e,t,s){let o;if(t==="string"&&s!=null&&s.length>0&&ri(s[0])){const r=s.map(i=>Cs(i));o=this.write(r,e,t)}else o=this.write(s,e,t);return this.texData.get(o).usage=null,{dataId:o,shape:e,dtype:t}}makeOutput(e,t,s){return Dn().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,s),this)}unpackTensor(e){const t=new nV(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new BB(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const s=[rr(e.shape),...ir(e.shape)],o={dtype:e.dtype,shape:s,dataId:e.dataId},r=[rr(t),...ir(t)],i=new bw(r,s),a=!0,c=[s],l=this.runWebGLProgram(i,[o],e.dtype,c,a);return{dataId:l.dataId,shape:t,dtype:l.dtype}}decode(e,t){const s=this.texData.get(e),{isPacked:o,shape:r,dtype:i}=s;if(t!=null){const d=j(r),p=t[0]*t[1]*4;k(d<=p,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const a=La(r);let c;o?c=new kz(a):c=new Sz(a);const l=!0,u=[t??Oa(a)],h=this.runWebGLProgram(c,[{shape:a,dtype:i,dataId:e}],i,u,l,t);return{dtype:i,shape:r,dataId:h.dataId}}runWebGLProgram(e,t,s,o,r=!1,i){const a=this.makeTensorInfo(e.outputShape,s),c=this.texData.get(a.dataId);if(e.packedOutput&&(c.isPacked=!0),e.outPackingScheme===ei.DENSE){const x=i??Oa(e.outputShape);c.texShape=x.map(y=>y*2)}if(e.outTexUsage!=null&&(c.usage=e.outTexUsage),j(a.shape)===0)return c.values=$t(a.dtype,0),a;const l=[],u=t.map(x=>{if(x.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let y=this.texData.get(x.dataId);if(y.texture==null){if(!e.packedInputs&&j(x.shape)<=W().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:x.shape,texData:null,isUniform:!0,uniformValues:y.values};e.packedInputs&&(y.isPacked=!0,y.shape=x.shape)}if(this.uploadToGPU(x.dataId),!!y.isPacked!=!!e.packedInputs)x=y.isPacked?this.unpackTensor(x):this.packTensor(x),l.push(x),y=this.texData.get(x.dataId);else if(y.isPacked&&!Ic(y.shape,x.shape)){const w=x,b=x.shape;x.shape=y.shape,x=this.packedReshape(x,b),l.push(x),y=this.texData.get(x.dataId),w.shape=b}return{shape:x.shape,texData:y,isUniform:!1}});this.uploadToGPU(a.dataId);const h={shape:a.shape,texData:c,isUniform:!1},d=$z(e,u,h),p=this.getAndSaveBinary(d,()=>Cz(this.gpgpu,e,u,h)),f=this.activeTimers!=null;let m;f&&(m=this.startTimer()),W().get("ENGINE_COMPILE_ONLY")||Iz(this.gpgpu,p,u,h,o),l.forEach(x=>this.disposeIntermediateTensorInfo(x)),f&&(m=this.endTimer(m),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(m)}));const g=W().getNumber("WEBGL_FLUSH_THRESHOLD");if(g>0){const x=_t();x-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=x)}if(!W().getBool("WEBGL_LAZILY_UNPACK")&&c.isPacked&&r===!1){const x=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),x}return a}compileAndRun(e,t,s,o,r=!1){return s=s||t[0].dtype,this.runWebGLProgram(e,t,s,o,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(W().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=V(()=>{if(!W().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=W().getBool("DEBUG");W().set("DEBUG",!1);const t=this.abs(Ee(1e-8)).dataSync()[0];if(W().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?oV:rV}uploadToGPU(e){const t=this.texData.get(e),{shape:s,dtype:o,values:r,texture:i,usage:a,isPacked:c}=t;if(i!=null)return;const l=this.activeTimers!=null;let u;l&&(u=_t());let h=t.texShape;if(h==null&&(h=R3(s,c),t.texShape=h),r!=null){const d=La(s);let p,f=h[1],m=h[0];const g=r instanceof Uint8Array||r instanceof Uint8ClampedArray;(c||!g)&&([f,m]=xr(h[0],h[1])),c?p=new Rz(d,g):p=new _m(d,g);const x=g?[m,f]:h,y=this.makeTensorInfo(x,o),w=this.texData.get(y.dataId);g?w.usage=Qt.PIXELS:w.usage=Qt.UPLOAD,w.texShape=x,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(y.dataId),f,m,r);const b=[[m,f]],I=this.runWebGLProgram(p,[y],o,b,!0),T=this.texData.get(I.dataId);t.texShape=T.texShape,t.isPacked=T.isPacked,t.usage=T.usage,W().get("ENGINE_COMPILE_ONLY")?this.disposeData(I.dataId):(t.texture=T.texture,t.values=null,this.texData.delete(I.dataId)),this.disposeIntermediateTensorInfo(y),l&&(this.uploadWaitMs+=_t()-u)}else{const d=this.acquireTexture(h,a,o,c);t.texture=d}}convertAndCacheOnCPU(e,t){const s=this.texData.get(e),{dtype:o}=s;return t!=null&&(s.values=uV(t,o)),s.values}acquireTexture(e,t,s,o){if(this.numBytesInGPU+=this.computeBytes(e,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const r=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${r} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,o)}computeBytes(e,t){return e[0]*e[1]*Ja(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(const[,t]of Object.entries(this.binaryCache)){const s=new Promise(o=>{try{this.checkCompletion_(t),o(!0)}catch(r){throw r}});e.push(s)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await cy(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(ow(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:s,infLoc:o,nanLoc:r,outShapeLocation:i,outShapeStridesLocation:a,outTexShapeLocation:c}=lw(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=s,e.infLoc=o,e.nanLoc=r,e.outShapeLocation=i,e.outShapeStridesLocation=a,e.outTexShapeLocation=c}}createTensorFromGPUData(e,t,s){e.channels=e.channels||"RGBA";const{texture:o,height:r,width:i,channels:a}=e,c=Dn().backend;if(!c.gpgpu.gl.isTexture(o))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const l=c.writeTexture(o,t,s,r,i,a);return Dn().makeTensorFromDataId(l,t,s,c)}}eu.nextDataId=0;function uV(n,e){if(e==="float32"||e==="complex64")return n;if(e==="int32"||e==="bool"){const t=e==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let s=0;s<t.length;++s)t[s]=Math.round(n[s]);return t}else throw new Error(`Unknown dtype ${e}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ox()&&ax("webgl",()=>new eu,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tf=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class bo{constructor(e,t,s){this.variableNames=["A","B"],this.outputShape=me(t,s),this.enableShapeUniforms=Et(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const No=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class Cr{constructor(e,t,s,o=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=me(t,s);const r=this.outputShape.length;this.enableShapeUniforms=Et(r);let i="";if(o)if(r===0||j(this.outputShape)===1)i=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(i=`
          ${_e(r)} coords = getOutputCoords();
        `,r===1)this.enableShapeUniforms?i+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:i+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const c=At("coords",r);this.enableShapeUniforms?i+=`
            bool nextRowOutOfBounds =
              (${c[r-2]} + 1) >= outShape[${r} - 2];
            bool nextColOutOfBounds =
              (${c[r-1]} + 1) >= outShape[${r} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:i+=`
            bool nextRowOutOfBounds =
              (${c[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${c[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${i}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yt(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const hV={kernelName:ki,backendName:"webgl",kernelFunc:Yt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ws(n){const{inputs:e,backend:t}=n,{real:s,imag:o}=e,r=t.makeTensorInfo(s.shape,"complex64"),i=t.texData.get(r.dataId),a=Yt({inputs:{x:s},backend:t}),c=Yt({inputs:{x:o},backend:t});return i.complexTensorInfos={real:a,imag:c},r}const dV={kernelName:Fh,backendName:"webgl",kernelFunc:Ws};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ww="return (a < 0.) ? b * a : a;",vw=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function pV(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{alpha:r}=s,i=t.makeTensorInfo([],"float32",Fs(r,"float32")),a=W().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Cr(vw,o.shape,i.shape):new bo(ww,o.shape,i.shape),c=t.runWebGLProgram(a,[o,i],"float32");return t.disposeIntermediateTensorInfo(i),c}const fV={kernelName:Xc,backendName:"webgl",kernelFunc:pV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cw="return (a < 0.) ? b * a : a;",Iw=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function mV(n){const{inputs:e,backend:t}=n,{x:s,alpha:o}=e,r=W().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Cr(Iw,s.shape,o.shape):new bo(Cw,s.shape,o.shape);return t.runWebGLProgram(r,[s,o],"float32")}const gV={kernelName:fl,backendName:"webgl",kernelFunc:mV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ir="if (isnan(x)) return x;";function ke({opSnippet:n,packedOpSnippet:e,cpuKernelImpl:t,dtype:s}){return({inputs:o,backend:r})=>{const{x:i}=o,a=r,c=s||i.dtype;if(a.shouldExecuteOnCPU([i])&&t!=null){const h=a.texData.get(i.dataId),d=t(h.values,c);return a.makeTensorInfo(i.shape,c,d)}const l=W().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let u;return l?u=new ws(i.shape,e):u=new _n(i.shape,n),a.runWebGLProgram(u,[i],c)}}function It({opSnippet:n,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:s=!1,cpuKernelImpl:o,dtype:r}){return({inputs:i,backend:a})=>{const{a:c,b:l}=i,u=a;if(s&&c.dtype==="complex64"){const f=u.texData.get(c.dataId),m=u.texData.get(l.dataId),[g,x]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(w=>{const[b,v]=w,I={dataId:b.dataId,dtype:b.dtype,shape:c.shape},T={dataId:v.dataId,dtype:v.dtype,shape:l.shape},N=new bo(n,c.shape,l.shape);return u.runWebGLProgram(N,[I,T],Kt(b.dtype,v.dtype))}),y=Ws({inputs:{real:g,imag:x},backend:u});return u.disposeIntermediateTensorInfo(g),u.disposeIntermediateTensorInfo(x),y}const h=r||Kt(c.dtype,l.dtype);if((c.dtype==="string"||l.dtype==="string"||u.shouldExecuteOnCPU([c,l]))&&o!=null){const f=u.texData.get(c.dataId).values,m=u.texData.get(l.dataId).values,g=c.dtype==="string"?ss(f):f,x=c.dtype==="string"?ss(m):m,[y,w]=o(c.shape,l.shape,g,x,h),b=u.makeTensorInfo(w,h),v=u.texData.get(b.dataId);return v.values=y,b}const d=W().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let p;return d?p=new Cr(e,c.shape,l.shape,t):p=new bo(n,c.shape,l.shape),u.runWebGLProgram(p,[c,l],h)}}function ti(n,e=!1){if(n==="linear")return e?JB:qB;if(n==="relu")return e?QB:KB;if(n==="elu")return e?ZB:jB;if(n==="relu6")return e?eV:XB;if(n==="prelu")return e?Iw:Cw;if(n==="leakyrelu")return e?vw:ww;if(n==="sigmoid")return e?tV:YB;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $w{constructor(e,t,s,o=!1,r=!1,i=!1,a=null,c=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=Et(this.outputShape.length);const u=o?e[1]:e[2],h=Math.ceil(u/2),d=o?"i * 2, rc.y":"rc.y, i * 2",p=r?"rc.z, i * 2":"i * 2, rc.z",f=o?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",x="";a&&(c?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:l?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:g=`vec4 activation(vec4 x) {
          ${a}
        }`,x="result = activation(result);");const y=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),c&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let w="rc.x",b="rc.x";e[0]<t[0]?w=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(b=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${h}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${w};
        int batchB = ${b};
        for (int i = 0; i < ${h}; i++) {
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${m[0]});
          result += (${f[1]} * ${m[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${y}

        ${x}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vm={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class Wm{constructor(e,t,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=me(t,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Um="return a * b;";function nf(n){const{inputs:e,backend:t}=n,{a:s,b:o}=e,r=Kt(s.dtype,o.dtype);if(s.dtype==="complex64"){const a=t.texData.get(s.dataId),c=t.texData.get(o.dataId),l=new Wm(Vm.REAL,s.shape,o.shape),u=new Wm(Vm.IMAG,s.shape,o.shape),h=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:s.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:c.complexTensorInfos.real.dataId,dtype:c.complexTensorInfos.real.dtype,shape:o.shape},{dataId:c.complexTensorInfos.imag.dataId,dtype:c.complexTensorInfos.imag.dtype,shape:o.shape}],d=t.runWebGLProgram(l,h,"float32"),p=t.runWebGLProgram(u,h,"float32"),f=Ws({inputs:{real:d,imag:p},backend:t});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),f}if(t.shouldExecuteOnCPU([s,o])){const a=t.texData.get(s.dataId),c=t.texData.get(o.dataId),[l,u]=mB(s.shape,o.shape,a.values,c.values,r),h=t.makeTensorInfo(u,r),d=t.texData.get(h.dataId);return d.values=l,h}let i;return W().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new Cr(Um,s.shape,o.shape):i=new bo(Um,s.shape,o.shape),t.runWebGLProgram(i,[s,o],r)}const xV={kernelName:Mi,backendName:"webgl",kernelFunc:nf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yV(n,e,t){const s=[rr(n.shape),...ir(n.shape)],o={dtype:n.dtype,shape:s,dataId:n.dataId},r=[rr(e),...ir(e)],i=new bw(r,s),a=!0,c=[s],l=t.runWebGLProgram(i,[o],n.dtype,c,a);return{dataId:l.dataId,shape:e,dtype:l.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function te(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{shape:r}=s,i=t,a=j(o.shape),c=xg(r,a),l=j(c);k(a===l,()=>`The new shape (${c}) has ${l} elements and the old shape (${o.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);const u=i.texData.get(o.dataId);return u.isPacked&&!Ic(o.shape,c)&&!(u.texture!==null&&Ic(u.shape,c))?yV(o,c,i):(i.incRef(o.dataId),{dataId:o.dataId,shape:c,dtype:o.dtype})}const bV={kernelName:gl,backendName:"webgl",kernelFunc:te};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gm{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:o,inSize:r,outSize:i}=e;this.outputShape=[o,i];const a=Math.floor(s/4)*4,c=s%4;let l="sumValue += dot(values, ones);";if(t!=null){const h=1/t;l=`sumValue += dot(values * ${Xo(h)?h.toPrecision(2):h}, ones);`}let u="";r%s>0&&(u=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${u}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${a};
        if (${c===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${c===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${c===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wV{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:o,inSize:r,outSize:i}=e;this.outputShape=[o,i];let a="0.0",c="";t==="prod"?a="1.0":t==="min"?(a="1.0 / 1e-20",c="min"):t==="max"&&(a="-1.0 / 1e-20",c="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?l="sumValue":t==="prod"?l="prodValue":t==="all"?l="allValue":t==="any"&&(l="anyValue");const u=Math.floor(s/4)*4,h=s%4;let d=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${c}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${c}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";t==="all"?(a="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):t==="any"&&(a="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let f="";r%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${u};
        if (${h===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${l});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vV(n){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const t=e.length?e[e.length-1].outSize:n[1],s=Ll(t);e.push({inSize:t,windowSize:s,outSize:Math.ceil(t/s)})}return e}function Eo(n,e,t,s){const o=vV(n.shape);let r=n;for(let i=0;i<o.length;i++){const{inSize:a,windowSize:c,outSize:l}=o[i];let u,h;t==="mean"?u=i===0?new Gm({windowSize:c,inSize:a,batchSize:n.shape[0],outSize:l},a):new Gm({windowSize:c,inSize:a,batchSize:n.shape[0],outSize:l}):u=new wV({windowSize:c,inSize:a,batchSize:n.shape[0],outSize:l},t),h=r,r=s.runWebGLProgram(u,[r],e),h.dataId!==n.dataId&&s.disposeIntermediateTensorInfo(h)}return r}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CV{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let i=0;i<s.length;i++)s[i]=e[t[i]];this.outputShape=s,this.rank=s.length;const o=_e(this.rank),r=IV(t);this.userCode=`
    void main() {
      ${o} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}}function IV(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(e);for(let o=0;o<n.length;o++)s[n[o]]=t[o];return s.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $V{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(e.length);for(let u=0;u<s.length;u++)s[u]=e[t[u]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const o=_e(this.rank),r=yw("rc",this.rank),i=new Array(this.rank);for(let u=0;u<t.length;u++)i[t[u]]=r[u];const a=`vec2(${i.slice(-2).join()})`,c=`++${r[this.rank-1]} < ${s[this.rank-1]}`,l=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`
    void main() {
      ${o} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${c}) {
        result[1] = ${l};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${l};
        if(${c}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tu(n,e,t){const s=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new $V(n.shape,e):new CV(n.shape,e);return t.runWebGLProgram(s,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SV(n,e,t,s){const o=e,r=n.shape.length,i=ve(o,n.shape);let a=i;const c=Ye(a,r),l=c!=null;let u=n;l&&(u=tu(n,c,s),a=tt(a.length,r)),Ct("sum",a,r);const[h,d]=xt(u.shape,a);let p=h;t&&(p=rt(h,i));const f=j(d),g=j(n.shape)/f,x=te({inputs:{x:u},attrs:{shape:[g,f]},backend:s}),y=pd(n.dtype),w=Eo(x,y,"sum",s),b=te({inputs:{x:w},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(w),l&&s.disposeIntermediateTensorInfo(u),b}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nu(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,keepDims:i}=s;return SV(o,r,i,t)}const kV={kernelName:Cl,backendName:"webgl",kernelFunc:nu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ot(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{perm:r}=s,i=t,a=o.shape.length,c=new Array(a);for(let u=0;u<c.length;u++)c[u]=o.shape[r[u]];let l;if(i.shouldExecuteOnCPU([o])){const h=i.texData.get(o.dataId).values,d=ef(h,o.shape,o.dtype,r,c);l=i.makeTensorInfo(c,o.dtype);const p=i.texData.get(l.dataId);p.values=d}else l=tu(o,r,i);return l}const TV={kernelName:Uo,backendName:"webgl",kernelFunc:Ot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sw=1e3;function $c({a:n,b:e,transposeA:t,transposeB:s,backend:o,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:c=null}){const l=n.shape.length,u=e.shape.length,h=t?n.shape[l-2]:n.shape[l-1],d=s?e.shape[u-1]:e.shape[u-2],p=t?n.shape[l-1]:n.shape[l-2],f=s?e.shape[u-2]:e.shape[u-1],m=n.shape.slice(0,-2),g=e.shape.slice(0,-2),x=j(m),y=j(g),b=me(n.shape.slice(0,-2),e.shape.slice(0,-2)).concat([p,f]);k(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${s} must match.`);const v=t?[x,h,p]:[x,p,h],I=s?[y,f,d]:[y,d,f],T=te({inputs:{x:n},backend:o,attrs:{shape:v}}),N=te({inputs:{x:e},backend:o,attrs:{shape:I}}),$=[T,N],S=Math.max(x,y),C=t?T.shape[1]:T.shape[2],R=r!=null,F=i!=null,z=c==="leakyrelu",M=c!=null?ti(c,!0):null,B=R||F||z||M!=null;let H;if((p===1||f===1)&&C>Sw&&B===!1){let U=T,G=N;t&&(U=Ot({inputs:{x:T},backend:o,attrs:{perm:[0,2,1]}}),$.push(U)),s&&(G=Ot({inputs:{x:N},backend:o,attrs:{perm:[0,2,1]}}),$.push(G));const K=f!==1,Y=f===1;let X=U;K&&(X=te({inputs:{x:U},backend:o,attrs:{shape:[S,C,1]}}),$.push(X));const ee=f===1?2:1;let Q=G;Y&&(Q=te({inputs:{x:G},backend:o,attrs:{shape:[S,1,C]}}),$.push(Q));const oe=nf({inputs:{a:X,b:Q},backend:o});H=nu({inputs:{x:oe},backend:o,attrs:{axis:ee,keepDims:!0}}),$.push(oe)}else{const U=Kt(n.dtype,e.dtype),G=new $w(v,I,[S,p,f],t,s,R,M,F,z),K=[T,N];if(r!=null&&K.push(r),F&&K.push(i),z){const Y=o.makeTensorInfo([],"float32",Fs(a,"float32"));K.push(Y),$.push(Y)}H=o.runWebGLProgram(G,K,U)}const P=te({inputs:{x:H},backend:o,attrs:{shape:b}});$.push(H);for(const U of $)o.disposeIntermediateTensorInfo(U);return P}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NV(n){const{inputs:e,backend:t,attrs:s}=n,{a:o,b:r,bias:i,preluActivationWeights:a}=e,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:h}=s;return $c({a:o,b:r,transposeA:c,transposeB:l,backend:t,bias:i,preluActivationWeights:a,leakyreluAlpha:h,activation:u})}const EV={kernelName:Za,backendName:"webgl",kernelFunc:NV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hm="return abs(x);";function RV(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const r=t.texData.get(s.dataId),i=gw(r.values);return t.makeTensorInfo(s.shape,s.dtype,i)}let o;return W().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new ws(s.shape,Hm):o=new _n(s.shape,Hm),t.runWebGLProgram(o,[s],s.dtype)}const DV={kernelName:Ec,backendName:"webgl",kernelFunc:RV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AV=gn+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,FV=ke({opSnippet:AV}),OV={kernelName:ii,backendName:"webgl",kernelFunc:FV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MV=gn+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,_V=ke({opSnippet:MV}),LV={kernelName:ai,backendName:"webgl",kernelFunc:_V};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qm="return a + b;",PV=It({opSnippet:qm,packedOpSnippet:qm,supportsComplex:!0,cpuKernelImpl:Kz}),zV={kernelName:hr,backendName:"webgl",kernelFunc:PV};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BV{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((r,i)=>`T${i}`);const s=[];this.variableNames.forEach(r=>{s.push(`float v${r} = get${r}AtOutCoords();`)});const o=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${o};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VV{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((r,i)=>`T${i}`);const s=[];this.variableNames.forEach(r=>{s.push(`vec4 v${r} = get${r}AtOutCoords();`)});const o=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${o};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xa(n){const{inputs:e,backend:t}=n,s=e;if(s.length===1)return Yt({inputs:{x:s[0]},backend:t});if(s.length>W().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const c=Math.floor(s.length/2),l=Xa({inputs:s.slice(0,c),backend:t}),u=Xa({inputs:s.slice(c),backend:t});return Xa({inputs:[l,u],backend:t})}const o=s.map(c=>c.dtype).reduce((c,l)=>Kt(c,l)),r=s.map(c=>c.shape),a=W().getBool("WEBGL_PACK")?new VV(s[0].shape,r):new BV(s[0].shape,r);return t.runWebGLProgram(a,s,o)}const WV={kernelName:kh,backendName:"webgl",kernelFunc:Xa};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UV(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,keepDims:i}=s,a=o.shape.length,c=ve(r,o.shape);let l=c;const u=Ye(l,a);let h=o;u!=null&&(h=Ot({inputs:{x:o},backend:t,attrs:{perm:u}}),l=tt(l.length,a)),Ct("all",l,a);const[d,p]=xt(h.shape,l),f=j(p),m=te({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}}),g=Eo(m,m.dtype,"all",t);let x;if(i){const y=rt(d,c);x=te({inputs:{x:g},backend:t,attrs:{shape:y}})}else x=te({inputs:{x:g},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),u!=null&&t.disposeIntermediateTensorInfo(h),x}const GV={kernelName:Th,backendName:"webgl",kernelFunc:UV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HV(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,keepDims:i}=s,a=o.shape.length,c=ve(r,o.shape);let l=c;const u=Ye(l,a);let h=o;u!=null&&(h=Ot({inputs:{x:o},backend:t,attrs:{perm:u}}),l=tt(l.length,a)),Ct("any",l,a);const[d,p]=xt(h.shape,l),f=j(p),m=te({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}}),g=Eo(m,m.dtype,"any",t);let x;if(i){const y=rt(d,c);x=te({inputs:{x:g},backend:t,attrs:{shape:y}})}else x=te({inputs:{x:g},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),u!=null&&t.disposeIntermediateTensorInfo(h),x}const qV={kernelName:Nh,backendName:"webgl",kernelFunc:HV};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jV{constructor(e,t,s){this.variableNames=["A"];const{windowSize:o,batchSize:r,outSize:i}=e;s||this.variableNames.push("bestIndicesA"),this.outputShape=[r,i];const a=t==="max"?">":"<",c=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${o}; i++) {
          int inIdx = ${c};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KV{constructor(e,t,s,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,k(e.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const r=e[e.length-1],i=Math.ceil(r/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),o||this.variableNames.push("bestIndicesA");const a=this.outputShape,c=a.length,l=_e(c),u=At("coords",c);let h,d;if(i===1){d=c+1;const N=_e(d);h=`
        ${N} sourceLocR = ${N}(${u.join()}, 0);
        ++${u[c-1]};
        ${N} sourceLocG = ${N}(${u.join()}, 0);
        ++${u[c-2]};
        ${N} sourceLocA = ${N}(${u.join()}, 0);
        --${u[c-1]};
        ${N} sourceLocB = ${N}(${u.join()}, 0);
        --${u[c-2]};`}else d=c,h=`
        ${l} sourceLocR = coords;
        ++${u[c-1]};
        ${l} sourceLocG = coords;
        ++${u[c-2]};
        ${l} sourceLocA = coords;
        --${u[c-1]};
        ${l} sourceLocB = coords;
        --${u[c-2]};`;const p=["x","y","z","w","u","v"].slice(0,d),f="."+p[d-1],m=p.map(N=>"int "+N),g=At("sourceLocR",d-1).concat("inIdx.r"),x=At("sourceLocG",d-1).concat("inIdx.g"),y=At("sourceLocB",d-1).concat("inIdx.b"),w=At("sourceLocA",d-1).concat("inIdx.a"),b=s==="max"?"greaterThan":"lessThan",v=o?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${w.join()})));`,I=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${x.join()}) : 0.,
            hasNextRow ? getAChannel(${y.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${w.join()}) : 0.)`,T=o?"":`
      float getBestIndicesAChannel(${m.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${m.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${T}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${u[c-1]} < ${a[c-1]-1};
        bool hasNextRow = ${u[c-2]} < ${a[c-2]-1};
        ${h}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${I};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${v}
          vec4 candidate = ${I};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${b}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kw(n,e,t,s=null){let o=e.shape[0],r=e.shape[1];s!=null&&(o=s.shape[0],r=s.shape[1]);const i=Ll(r),a={windowSize:i,inSize:r,batchSize:o,outSize:Math.ceil(r/i)},c=new jV(a,t,s==null),l=[e];s!=null&&l.push(s);const u=n.runWebGLProgram(c,l,"int32");if(u.shape[1]===1)return u;const h=kw(n,e,t,u);return n.disposeIntermediateTensorInfo(u),h}function Tw(n,e,t,s=null){const o=s!=null?s.shape:e.shape,r=o[o.length-1],i=Ll(r),a=new KV(o,i,t,s==null),c=s==null?[e]:[e,s],l=n.runWebGLProgram(a,c,"int32");if(l.shape.length===e.shape.length){const u=Tw(n,e,t,l);return n.disposeIntermediateTensorInfo(l),u}return l}function Nw(n,e,t,s){const o=[t];if(Ct("arg"+s.charAt(0).toUpperCase()+s.slice(1),o,e.shape.length),!W().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const r=[],i=n.texData.get(e.dataId),a=i!==null&&i.isPacked;let c=e;a&&(c=n.unpackTensor(e),r.push(c));const[l,u]=xt(c.shape,o),h=j(u),d=te({inputs:{x:c},backend:n,attrs:{shape:[-1,h]}});r.push(d);const p=kw(n,d,s);r.push(p);const f=te({inputs:{x:p},backend:n,attrs:{shape:l}});return r.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}return Tw(n,e,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XV(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r}=s;let i=ve(r,o.shape);const a=Ye(i,o.shape.length);let c=o;const l=[];a!=null&&(c=Ot({inputs:{x:o},backend:t,attrs:{perm:a}}),l.push(c),i=tt(i.length,c.shape.length)),Ct("argMax",[i[0]],c.shape.length);const u=Nw(t,c,i[0],"max");return l.forEach(h=>t.disposeIntermediateTensorInfo(h)),u}const YV={kernelName:Rc,backendName:"webgl",kernelFunc:XV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JV(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r}=s;let i=ve(r,o.shape);const a=Ye(i,o.shape.length);let c=o;const l=[];a!=null&&(c=Ot({inputs:{x:o},backend:t,attrs:{perm:a}}),l.push(c),i=tt(i.length,c.shape.length)),Ct("argMin",[i[0]],c.shape.length);const u=Nw(t,c,i[0],"min");return l.forEach(h=>t.disposeIntermediateTensorInfo(h)),u}const ZV={kernelName:Dc,backendName:"webgl",kernelFunc:JV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QV=gn+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,eW=ke({opSnippet:QV}),tW={kernelName:ci,backendName:"webgl",kernelFunc:eW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nW=gn+"return log(x + sqrt(x * x + 1.0));",sW=ke({opSnippet:nW}),oW={kernelName:li,backendName:"webgl",kernelFunc:sW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rW=gn+`
  return atan(x);
`,iW=ke({opSnippet:rW}),aW={kernelName:ui,backendName:"webgl",kernelFunc:iW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cW=tf+`
  return atan(a, b);
`,lW=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+No+`
  return result;
`,uW=It({opSnippet:cW,packedOpSnippet:lW}),hW={kernelName:di,backendName:"webgl",kernelFunc:uW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dW=gn+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,pW=ke({opSnippet:dW}),fW={kernelName:hi,backendName:"webgl",kernelFunc:pW};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ni{constructor(e,t,s,o=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideHeight,c=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,f=e.padInfo.left;this.outputShape=e.outShape;const m=t==="avg",g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,x=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(m||(y="-1.0 / 1e-20"),s){this.userCode=`
        const ivec2 strides = ivec2(${a}, ${c});
        const ivec2 pads = ivec2(${p}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${h};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${u}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value >= currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${o?r?g:x:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const w="max";let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(b="avgValue / max(count, 1.0)");const v=Math.floor(i/4)*4,I=i%4,T=`
      if (${m}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${c});
      const ivec2 pads = ivec2(${p}, ${f});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${h};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${v}; wC += 4) {
            int xC = xCCorner + wC * ${u};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              getValue(batch, xR, xC + 3 * ${u}, d)
            );

            ${T}
          }

          int xC = xCCorner + ${v};
          if (${I===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${T}
          } else if (${I===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              initializationValue,
              initializationValue
            );

            ${T}
          } else if (${I===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              initializationValue
            );

            ${T}
          }
        }
        setOutput(${b});
      }
    `}}class sf{constructor(e,t,s,o=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideDepth,c=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,h=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,f=e.effectiveFilterHeight,m=e.effectiveFilterWidth,g=e.padInfo.front,x=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const w=t==="avg";let b="0.0";if(w||(b="-1.0 / 1e-20"),s){this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${c}, ${l});
        const ivec3 pads = ivec3(${g}, ${x}, ${y});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${u}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${h}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${m};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value >= currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${o?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${f} * ${m} +
                      wR * ${m} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const v="max";let I=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(I="avgValue / max(count, 1.0)");const T=Math.floor(i/4)*4,N=i%4,$=`
      if (${w}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${v}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${c}, ${l});
      const ivec3 pads = ivec3(${g}, ${x}, ${y});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${u}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${T}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${$}
            }

            int xC = xCCorner + ${T};
            if (${N===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${$}
            } else if (${N===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${$}
            } else if (${N===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${$}
            }
          }
        }
        setOutput(${I});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mW(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e;va(o,"avgPool");const{filterSize:r,strides:i,pad:a,dimRoundingMode:c}=s,l=1;k(Tt(i,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);const u=fn(o.shape,r,i,l,a,c);if(u.filterWidth===1&&u.filterHeight===1&&Re(u.inShape,u.outShape))return Yt({inputs:{x:o},backend:t});const h=new ni(u,"avg",!1);return t.runWebGLProgram(h,[o],"float32")}const gW={kernelName:Ac,backendName:"webgl",kernelFunc:mW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xW(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{filterSize:r,strides:i,pad:a,dimRoundingMode:c,dataFormat:l}=s,u=[1,1,1],h=rs(o.shape,r,i,u,a,c,l),d=new sf(h,"avg",!1);return t.runWebGLProgram(d,[o],"float32")}const yW={kernelName:Fc,backendName:"webgl",kernelFunc:xW};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bW{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,o=e.strideHeight,r=e.strideWidth,i=e.dilationHeight,a=e.dilationWidth,c=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=c-1-e.padInfo.top,h=l-1-e.padInfo.left,d=1/(t*s);this.userCode=`
      const ivec2 pads = ivec2(${u}, ${h});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${c};
            wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class wW{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,o=e.filterWidth,r=e.strideDepth,i=e.strideHeight,a=e.strideWidth,c=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,h=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,f=h-1-e.padInfo.front,m=d-1-e.padInfo.top,g=p-1-e.padInfo.left,x=1/(t*s*o);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${m}, ${g});
      const float avgMultiplier = float(${x});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${c}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${u}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vW(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,input:r}=e,i=r,{filterSize:a,strides:c,pad:l,dimRoundingMode:u}=s,h=[1,1,1],d=rs(i.shape,a,c,h,l,u),p=new wW(d);return t.runWebGLProgram(p,[o],i.dtype)}const CW={kernelName:Rh,backendName:"webgl",kernelFunc:vW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IW(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,input:r}=e,i=r;va([o,r],"avgPoolGrad");const{filterSize:a,strides:c,pad:l}=s,u=fn(i.shape,a,c,1,l),h=new bW(u);return t.runWebGLProgram(h,[o],i.dtype)}const $W={kernelName:Eh,backendName:"webgl",kernelFunc:IW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SW(n){const{inputs:e,backend:t,attrs:s}=n,{a:o,b:r}=e,{transposeA:i,transposeB:a}=s;return $c({a:o,b:r,transposeA:i,transposeB:a,backend:t})}const kW={kernelName:Oc,backendName:"webgl",kernelFunc:SW};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TW{constructor(e,t,s,o,r,i){this.outputShape=[],this.variableNames=["x","mean","variance"],me(e,t),me(e,s);let a="0.0";o!=null&&(me(e,o),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let c="1.0";r!=null&&(me(e,r),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${c};
        float inv = scale * inversesqrt(variance + float(${i}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NW{constructor(e,t,s,o,r,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],me(e,t),me(e,s);let a="vec4(0.0)";o!=null&&(me(e,o),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let c="vec4(1.0)";r!=null&&(me(e,r),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${c};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${i}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EW=({inputs:n,backend:e,attrs:t})=>{const{x:s,mean:o,variance:r,offset:i,scale:a}=n;k(o.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),k(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),k(a==null||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:c}=t;c==null&&(c=.001);const l=[s,o,r];let u=null;i!=null&&(u=i.shape,l.push(i));let h=null;a!=null&&(h=a.shape,l.push(a));const d=W().getBool("WEBGL_PACK_NORMALIZATION")?new NW(s.shape,o.shape,r.shape,u,h,c):new TW(s.shape,o.shape,r.shape,u,h,c);return e.runWebGLProgram(d,l,l[0].dtype)},RW={kernelName:qc,backendName:"webgl",kernelFunc:EW};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DW{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=_e(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=AW(this.rank);let o;const r=e.map((i,a)=>`sourceLoc.${lh[a]} = start[${a}] + coords.${lh[a]};`);o=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${r.join(`
`)}
      `,this.userCode=`
      void main() {
        ${o}
        setOutput(getSource(${s}));
      }
    `}}const lh=["x","y","z","w","u","v"];function AW(n){if(n===1)return"sourceLoc";if(n<=6)return lh.slice(0,n).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FW{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=_e(this.rank),s=At("coords",this.rank),o=At("sourceLoc",this.rank),r=this.rank===1?"sourceLoc":`vec2(${o.slice(-2).join()})`,i=`getChannel(getSource(${o.join()}), ${r})`,a=`
      result.x = ${i};
      if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
        ++${o[this.rank-1]};
        result.y = ${i};
        --${o[this.rank-1]};
      }
    `,c=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${e[this.rank-2]}) {
        ++${o[this.rank-2]};
        result.z = ${i};
        if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
          ++${o[this.rank-1]};
          result.w = ${i};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((u,h)=>`start[${h}]`).join()});`:e.map((u,h)=>`${o[h]} = ${s[h]} + start[${h}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${a}
        ${c}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OW(n,e,t,s){const o=s.texData.get(n.dataId),r=s.makeTensorInfo(t,n.dtype),i=s.texData.get(r.dataId);Object.assign(i,o),i.refCount=1,i.shape=t,i.dtype=n.dtype;let a=Jd(e,ce(n.shape));o.slice&&(a+=o.slice.flatOffset),i.slice={flatOffset:a,origDataId:o.slice&&o.slice.origDataId||n.dataId};const c=s.dataRefCount.get(i.slice.origDataId)||1;return s.dataRefCount.set(i.slice.origDataId,c+1),r}function $r(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{begin:r,size:i}=s,[a,c]=_l(o,r,i);if(Kd(o,a,c),j(c)===0)return t.makeTensorInfo(c,o.dtype,[]);if(t.shouldExecuteOnCPU([o])||o.dtype==="string"){const h=t.texData.get(o.dataId),d=kB(h.values,a,c,o.shape,o.dtype);return t.makeTensorInfo(c,o.dtype,d)}const{isPacked:l}=t.texData.get(o.dataId),u=Yd(o.shape,a,c);if(l||!u){const h=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new FW(c):new DW(c),d=[a];return t.runWebGLProgram(h,[o],o.dtype,d)}return t.uploadToGPU(o.dataId),OW(o,a,c,t)}const MW={kernelName:vl,backendName:"webgl",kernelFunc:$r};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _W=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{blockShape:r,crops:i}=s;k(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const a=r.reduce((y,w)=>y*w),c=ca(o.shape,r,a),l=la(c.length,r.length),u=ua(o.shape,r,a),h=np(i,r.length),d=sp(u,i,r.length),p=[],f=te({inputs:{x:o},backend:t,attrs:{shape:c}}),m=Ot({inputs:{x:f},backend:t,attrs:{perm:l}}),g=te({inputs:{x:m},backend:t,attrs:{shape:u}}),x=$r({inputs:{x:g},backend:t,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach(y=>t.disposeIntermediateTensorInfo(y)),x},LW={kernelName:Mc,backendName:"webgl",kernelFunc:_W};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PW(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,weights:r}=e,{size:i}=s,a=t.readSync(o.dataId),c=t.readSync(r.dataId),l=mw(a,c,r.dtype,r.shape,i);return t.makeTensorInfo([i],r.dtype,l)}const zW={kernelName:Dh,backendName:"webgl",kernelFunc:PW};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BW=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,VW=`
  return float(int(a.r) & int(b.r));
`;function WW(n){const{inputs:e,backend:t}=n,{a:s,b:o}=e,r=W().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=W().getNumber("WEBGL_VERSION");if(t.shouldExecuteOnCPU([s,o])||i===1){const c=t.texData.get(s.dataId).values,l=t.texData.get(o.dataId).values,[u,h]=Yz(s.shape,o.shape,c,l,s.dtype),d=t.makeTensorInfo(h,s.dtype),p=t.texData.get(d.dataId);return p.values=u,d}let a;return r?a=new Cr(BW,s.shape,o.shape,!1):a=new bo(VW,s.shape,o.shape),t.runWebGLProgram(a,[s,o],s.dtype)}const UW={kernelName:Ah,backendName:"webgl",kernelFunc:WW};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GW(n){const{inputs:e,backend:t}=n,{s0:s,s1:o}=e,r=t.readSync(s.dataId),i=t.readSync(o.dataId),a=me(Array.from(r),Array.from(i));return t.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const HW={kernelName:Ig,backendName:"webgl",kernelFunc:GW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qW="return float(a != b);",Ew=It({opSnippet:qW,cpuKernelImpl:xB,dtype:"bool"}),jW={kernelName:ll,backendName:"webgl",kernelFunc:Ew};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ia(n){const{inputs:e,backend:t}=n,{input:s}=e,o=t.texData.get(s.dataId);return Yt({inputs:{x:o.complexTensorInfos.real},backend:t})}const KW={kernelName:sd,backendName:"webgl",kernelFunc:Ia};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XW="return float(int(x));";function YW(n,e){const t=new _n(n.shape,XW),s=e.runWebGLProgram(t,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uh(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{dtype:r}=s;if(r==="complex64"){if(o.dtype==="complex64")return Yt({inputs:{x:o},backend:t});const i=We(o.shape),a=uh({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),c=Ws({inputs:{real:a,imag:i},backend:t});return i.dispose(),t.disposeIntermediateTensorInfo(a),c}if(o.dtype==="complex64"){const i=Ia({inputs:{input:o},backend:t}),a=uh({inputs:{x:i},backend:t,attrs:{dtype:r}});return t.disposeIntermediateTensorInfo(i),a}if(!yg(o.dtype,r)){const i=Yt({inputs:{x:o},backend:t});return{dataId:i.dataId,shape:i.shape,dtype:r}}if(t.shouldExecuteOnCPU([o])){const i=t.texData.get(o.dataId).values,[a,c,l]=Jz(i,o.shape,o.dtype,r);return t.makeTensorInfo(a,c,l)}if(r==="int32")return YW(o,t);if(r==="bool"){const i=t.makeTensorInfo([],"bool",$t("bool",1)),c=Ew({inputs:{a:o,b:i},backend:t});return t.disposeIntermediateTensorInfo(i),c}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${r}`)}const JW={kernelName:pi,backendName:"webgl",kernelFunc:uh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jm="return ceil(x);",ZW=ke({opSnippet:jm,packedOpSnippet:jm,cpuKernelImpl:Zz}),QW={kernelName:fi,backendName:"webgl",kernelFunc:ZW};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class e4{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class t4{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n4(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{clipValueMin:r,clipValueMax:i}=s;let a;W().getBool("WEBGL_PACK_CLIP")?a=new t4(o.shape):a=new e4(o.shape);const c=[[r],[i]];return t.runWebGLProgram(a,[o],o.dtype,c)}const s4={kernelName:mi,backendName:"webgl",kernelFunc:n4};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class o4{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Km(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}function r4(n){const{inputs:e,backend:t}=n,{x:s}=e,o=t.texData.get(s.dataId),r=new o4(s.shape),i=[Km(s,o.complexTensorInfos.real),Km(s,o.complexTensorInfos.imag)];return t.runWebGLProgram(r,i,i[0].dtype)}const i4={kernelName:_c,backendName:"webgl",kernelFunc:r4};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class a4{constructor(e){this.outputShape=[],this.outputShape=zn(e,1),this.variableNames=e.map((i,a)=>`T${a}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let i=1;i<t.length;i++)t[i]=t[i-1]+e[i][1];const s=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<t.length;i++){const a=t[i-1];s.push(`else if (yC < ${t[i]}) setOutput(getT${i}(yR, yC-${a}));`)}const o=t.length,r=t[t.length-1];s.push(`else setOutput(getT${o}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class c4{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=zn(e,t);const s=this.outputShape,o=s.length,r=_e(o),i=At("coords",o),a=["x","y","z","w","u","v"].slice(0,o);this.variableNames=e.map((m,g)=>`T${g}`);const c=new Array(e.length-1);c[0]=e[0][t];for(let m=1;m<c.length;m++)c[m]=c[m-1]+e[m][t];const l=a[t],u=a.slice(-2),h=a.join();let d=`if (${l} < ${c[0]}) {
        return getChannel(
            getT0(${h}), vec2(${u.join()}));
        }`;for(let m=1;m<c.length;m++){const g=c[m-1];d+=`
        if (${l} < ${c[m]}  && ${l} >= ${c[m-1]}) {
          return getChannel(
            getT${m}(${Ba(a,l,g)}),
            vec2(${Ba(u,l,g)}));
        }`}const p=c.length,f=c[c.length-1];d+=`
        return getChannel(
          getT${p}(${Ba(a,l,f)}),
          vec2(${Ba(u,l,f)}));`,this.userCode=`
      float getValue(${a.map(m=>"int "+m)}) {
        ${d}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${i}), 0., 0., 0.);

        ${i[o-1]} = ${i[o-1]} + 1;
        if (${i[o-1]} < ${s[o-1]}) {
          result.g = getValue(${i});
        }

        ${i[o-2]} = ${i[o-2]} + 1;
        if (${i[o-2]} < ${s[o-2]}) {
          result.a = getValue(${i});
        }

        ${i[o-1]} = ${i[o-1]} - 1;
        if (${i[o-2]} < ${s[o-2]} &&
            ${i[o-1]} < ${s[o-1]}) {
          result.b = getValue(${i});
        }
        setOutput(result);
      }
    `}}function Ba(n,e,t){const s=n.indexOf(e);return n.map((r,i)=>i===s?`${r} - ${t}`:r).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function su(n){const{inputs:e,backend:t}=n,{input:s}=e,o=t.texData.get(s.dataId);return Yt({inputs:{x:o.complexTensorInfos.imag},backend:t})}const l4={kernelName:Xh,backendName:"webgl",kernelFunc:su};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vr(n,e,t){const s=n[0].dtype;if(s==="complex64"){const p=n.map(y=>Ia({inputs:{input:y},backend:t})),f=n.map(y=>su({inputs:{input:y},backend:t})),m=Vr(p,e,t),g=Vr(f,e,t),x=Ws({inputs:{real:m,imag:g},backend:t});return p.forEach(y=>t.disposeIntermediateTensorInfo(y)),f.forEach(y=>t.disposeIntermediateTensorInfo(y)),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),x}let o=t.shouldExecuteOnCPU(n);if(s==="string"&&(o=!0),o){const p=n.map(b=>{const I=[-1,j(b.shape.slice(e))];return te({inputs:{x:b},backend:t,attrs:{shape:I}})}),f=p.map(b=>({vals:t.readSync(b.dataId),shape:b.shape})),m=zn(p.map(b=>b.shape),1),g=p[0].shape[0]===1,x=Qz(f,m,s,g),y=zn(n.map(b=>b.shape),e),w=t.makeTensorInfo(y,s,x);return p.forEach(b=>t.disposeIntermediateTensorInfo(b)),w}const r=n.filter(p=>j(p.shape)>0),i=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&r[0].shape.length>1;if(r.length===1){const p=i?new _n(n[0].shape,ms):new ws(n[0].shape,ms);return t.runWebGLProgram(p,n,s)}const a=W().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(r.length>a){const p=[];for(let m=0;m<r.length;m+=a){const g=r.slice(m,m+a);p.push(Vr(g,e,t))}const f=Vr(p,e,t);for(const m of p)t.disposeIntermediateTensorInfo(m);return f}if(i){const p=new c4(r.map(f=>f.shape),e);return t.runWebGLProgram(p,r,s)}const{tensors2D:c,outShape:l}=u4(r,e,t),u=new a4(c.map(p=>p.shape)),h=t.runWebGLProgram(u,c,s);c.forEach(p=>t.disposeIntermediateTensorInfo(p));const d=te({inputs:{x:h},attrs:{shape:l},backend:t});return t.disposeIntermediateTensorInfo(h),d}function u4(n,e,t){const s=zn(n.map(r=>r.shape),e);return{tensors2D:n.map(r=>te({inputs:{x:r},attrs:{shape:[-1,j(r.shape.slice(e))]},backend:t})),outShape:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rw(n){const{inputs:e,backend:t,attrs:s}=n,{axis:o}=s,r=ve(o,e[0].shape)[0],i=e.map(l=>l.shape);Qd(i,r);const a=zn(e.map(l=>l.shape),r);if(j(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);const c=e.filter(l=>j(l.shape)>0);return c.length===1?Yt({inputs:{x:c[0]},backend:t}):Vr(c,r,t)}const h4={kernelName:Lc,backendName:"webgl",kernelFunc:Rw};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dw{constructor(e,t=!1,s=null,o=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const i=e.padInfo.top,a=e.padInfo.left,c=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,h=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,m=e.inChannels%4,g=e.dataFormat==="channelsLast",x=g?1:2,y=g?2:3,w=g?3:1;let b="",v="";s&&(o?b=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:r?b=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:b=`
          float activation(float x) {
            ${s}
          }
        `,v="result = activation(result);");const I=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${b}

      const ivec2 strides = ivec2(${c}, ${l});
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${w}];

        ivec2 xRCCorner =
            ivec2(coords[${x}], coords[${y}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${u};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${h};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${m===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${m===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${m===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${I}
        ${v}
        setOutput(result);
      }
    `}}class d4{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,s=e.padInfo.top,o=e.padInfo.left,r=e.strideDepth,i=e.strideHeight,a=e.strideWidth,c=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,h=e.filterDepth,d=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,m=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${i}, ${a});
      const ivec3 pads = ivec3(${t}, ${s}, ${o});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${h}; wF++) {
          int xF = xFCorner + wF * ${c};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${u};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${m===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${m===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${m===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Aw{constructor(e,t=!1,s=null,o=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Et(this.outputShape.length);const i=e.padInfo.left,a=e.strideWidth,c=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,h=u;let d=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<u;g++)d+=`
           vec4 xTexelC${g*2};
           int xTexelC${g*2}Ready;
           vec4 xTexelC${g*2+1};
           int xTexelC${g*2+1}Ready;
           vec4 xC${g};`;d+=`
     for (int r = 0; r < ${l}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let g=0;g<u;g++)d+=`
           xTexelC${g*2} = vec4(0.0);
           xTexelC${g*2}Ready = 0;
           xTexelC${g*2+1} = vec4(0.0);
           xTexelC${g*2+1}Ready = 0;
           xC${g} = vec4(0.0);`;d+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let g=0;g<(h+1)/2;g++){const x=g*2;if(d+=`
           xC = xCCorner + ${x*c};
           `,a===1){if(x<u&&(i%2===1?(d+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }
               `,c===1&&x>0?d+=`
                 xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                 `:d+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                   } else {
                     xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                   }
                   `):d+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xC${x} = xTexelC${x};
                 `,x+1<u)){const y=i%2===0?wh(c):c;c%2===0&&i%2===1||c%2!==0&&i%2!==1?(d+=`
                   xCOffset = xC + imod(pads[1], 2) + ${y};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                     xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${x+1}.zw = vec2(0.0);
                     }
                     xTexelC${x+1}Ready = 1;
                   }
                   `,c>1?d+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);
                     } else {
                      xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);
                     }
                     `:d+=`
                     xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                     `):y===1?d+=`
                     xC${x+1} = xTexelC${x};
                     `:d+=`
                     xCOffset = xC + ${y};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                       xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${x+1}.zw = vec2(0.0);
                       }
                       xTexelC${x+1}Ready = 1;
                     }

                     xC${x+1} = xTexelC${x+1};
                     `}}else x<u&&(i%2===1?(d+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.0);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
               `,x+1<u&&(d+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                 `)):(d+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(
                   xTexelC${x}.xy, xTexelC${x+1}.xy);
               `,x+1<u&&(d+=`
                   xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                 `)));x<u&&(d+=`
             wTexel = getW(r, ${x}, d1, d2);
             dotProd += xC${x}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${x}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,x+1<u&&(d+=`
               wTexel = getW(r, ${x+1}, d1, d2);
               dotProd += xC${x+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${x+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}d+=`
     }
   `,d+=`
     }
   `,d+=`
     }
   `;let p="",f="";s&&(o?p=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${s}
         }`:r?p=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${s}
         }`:p=`vec4 activation(vec4 x) {
           ${s}
         }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${p}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${d}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${m}
         ${f}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class p4{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=Et(this.outputShape.length);const{dataFormat:s}=t,o=Mt(),r=s==="channelsLast",i=r?1:2,a=r?2:3,c=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let l="";for(let u=0;u<=1;u++)for(let h=0;h<=1;h++)l+=`
          blockIndex = rc.z + ${h};
          pos = rc.y + ${u};

          ${c}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${i}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${r}) {
                  innerDims = vec2(d1, ch);
                  result[${u*2+h}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${u*2+h}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${o.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sc(n,e){const t=n.length;return t>=3?e?[...n.slice(0,-3),n[t-3]*n[t-2],n[t-1]]:[...n.slice(0,-3),n[t-3],n[t-2]*n[t-1]]:!e&&t===1&&n[0]>1?[n[0],1]:null}function Fw({x:n,filter:e,convInfo:t,backend:s,bias:o=null,preluActivationWeights:r=null,leakyreluAlpha:i=0,activation:a=null}){const c=n.shape,l=s.texData.get(n.dataId),u=t.inChannels,h=c[0]*c[1]*c[2],d=t.outChannels,p=t.dataFormat==="channelsLast",f=!1,m=!1;let g;const x=[];if(r!=null){const b=Sc(r.shape,p);b!=null&&(r=te({inputs:{x:r},backend:s,attrs:{shape:b}}),x.push(r))}if(o!=null){const b=Sc(o.shape,p);b!=null&&(o=te({inputs:{x:o},backend:s,attrs:{shape:b}}),x.push(o))}if(!((h===1||d===1)&&u>Sw)&&l.isPacked&&p&&l.texture!=null&&c[2]%2!==0&&Re(l.shape.slice(-3),c.slice(-3))){const b=c[0]*c[1]*(c[2]+1),v={dataId:n.dataId,shape:[1,b,t.inChannels],dtype:n.dtype},I=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,k(Ic(l.shape,v.shape),()=>`packed reshape ${l.shape} to ${v.shape} isn't free`);const T=te({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}});x.push(T);const N=$c({a:v,b:T,backend:s,transposeA:f,transposeB:m,bias:o,activation:a,preluActivationWeights:r,leakyreluAlpha:i}),$=s.texData.get(N.dataId);k($.isPacked,()=>"batchMatMul result is expected to be packed"),l.shape=I,$.shape=t.outShape,g=Yt({inputs:{x:N},backend:s}),g.shape=t.outShape,x.push(N)}else{const b=t.outHeight*t.outWidth,v=te({inputs:{x:n},backend:s,attrs:{shape:p?[t.batchSize,b,t.inChannels]:[t.batchSize,t.inChannels,b]}}),I=te({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}}),T=$c({a:p?v:I,b:p?I:v,transposeA:!p,transposeB:m,backend:s,bias:o,activation:a,preluActivationWeights:r,leakyreluAlpha:i});g=te({inputs:{x:T},backend:s,attrs:{shape:t.outShape}}),x.push(v),x.push(I),x.push(T)}for(const b of x)s.disposeIntermediateTensorInfo(b);return g}function Ow({x:n,filter:e,convInfo:t,backend:s,bias:o=null,preluActivationWeights:r=null,leakyreluAlpha:i=0,activation:a=null}){const{filterWidth:c,filterHeight:l,inChannels:u,outWidth:h,outHeight:d,dataFormat:p}=t,f=p==="channelsLast",m=c*l*u,g=d*h,x=[t.batchSize,m,g],y=!0,w=!1,b=[];if(r!=null){const P=Sc(r.shape,f);P!=null&&(r=te({inputs:{x:r},backend:s,attrs:{shape:P}}),b.push(r))}if(o!=null){const P=Sc(o.shape,f);P!=null&&(o=te({inputs:{x:o},backend:s,attrs:{shape:P}}),b.push(o))}const v=te({inputs:{x:e},backend:s,attrs:{shape:[1,m,j(e.shape)/m]}});b.push(v);const I=new p4(x,t),T=[n.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],N=s.runWebGLProgram(I,[n],"float32",T),$=te({inputs:{x:N},backend:s,attrs:{shape:x}});b.push(N),b.push($);const S=o!=null,C=r!=null,R=a==="leakyrelu",F=a?ti(a,!0):null,z=new $w(f?$.shape:v.shape,f?v.shape:$.shape,f?[t.batchSize,g,t.outChannels]:[t.batchSize,t.outChannels,g],y,w,S,F,C,R),M=f?[$,v]:[v,$];if(o&&M.push(o),C&&M.push(r),R){const P=s.makeTensorInfo([],"float32",Fs(i,"float32"));M.push(P),b.push(P)}const B=s.runWebGLProgram(z,M,"float32"),H=te({inputs:{x:B},backend:s,attrs:{shape:t.outShape}});b.push(B);for(const P of b)s.disposeIntermediateTensorInfo(P);return H}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f4(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:r}=e,{strides:i,pad:a,dataFormat:c,dilations:l,dimRoundingMode:u}=s,h=is(c),d=vt(o.shape,r.shape,i,l,a,u,!1,h);let p;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))p=Fw({x:o,filter:r,convInfo:d,backend:t});else if(d.strideWidth<=2&&h==="channelsLast"&&W().getBool("WEBGL_EXP_CONV")){const m=new Aw(d),g=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=t.runWebGLProgram(m,[o,r],"float32",g)}else if(W().getBool("WEBGL_CONV_IM2COL"))p=Ow({x:o,filter:r,convInfo:d,backend:t});else{const m=new Dw(d);p=t.runWebGLProgram(m,[o,r],"float32")}const f=te({inputs:{x:p},backend:t,attrs:{shape:d.outShape}});return t.disposeIntermediateTensorInfo(p),f}const m4={kernelName:Pc,backendName:"webgl",kernelFunc:f4};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class g4{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,o=e.padInfo.top,r=e.padInfo.left,i=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${o};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${i?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class x4{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,o=e.strideHeight,r=e.strideWidth,i=e.dataFormat==="channelsLast",a=t-1-e.padInfo.top,c=s-1-e.padInfo.left,l=i?1:2,u=i?2:3,h=i?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${h}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${i}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class y4{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,s=e.strideHeight,o=e.strideWidth,r=e.padInfo.front,i=e.padInfo.top,a=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${r};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${i};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${o} - ${a};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class b4{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,o=e.filterWidth,r=e.strideDepth,i=e.strideHeight,a=e.strideWidth,c=t-1-e.padInfo.front,l=s-1-e.padInfo.top,u=o-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${c}, ${l}, ${u});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${o}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${o} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w4(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,dy:r}=e,{strides:i,pad:a,dataFormat:c,dimRoundingMode:l,filterShape:u}=s,h=is(c),d=vt(o.shape,u,i,1,a,l,!1,h),p=new g4(d);return t.runWebGLProgram(p,[o,r],"float32")}const v4={kernelName:Oh,backendName:"webgl",kernelFunc:w4};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class C4{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=Et(this.outputShape.length);const t=e.filterHeight,s=e.filterWidth,o=t-1-e.padInfo.top,r=s-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${r});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            int wCPerm = ${s} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I4(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,filter:r}=e,{inputShape:i,strides:a,pad:c,dataFormat:l,dimRoundingMode:u}=s,h=is(l),d=vt(i,r.shape,a,1,c,u,!1,h);if(W().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&h==="channelsLast"){const p=[[d.strideHeight,d.strideWidth]],f=new C4(d);return t.runWebGLProgram(f,[o,r],"float32",p)}else{const p=new x4(d);return t.runWebGLProgram(p,[o,r],"float32")}}const $4={kernelName:zc,backendName:"webgl",kernelFunc:I4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S4(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:r}=e,{strides:i,pad:a,dilations:c}=s,l=Ms(o.shape,r.shape,i,c,a),u=new d4(l);return t.runWebGLProgram(u,[o,r],"float32")}const k4={kernelName:Bc,backendName:"webgl",kernelFunc:S4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T4(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,dy:r}=e,{strides:i,pad:a,filterShape:c}=s,l=Ms(o.shape,c,i,1,a),u=new y4(l);return t.runWebGLProgram(u,[o,r],"float32")}const N4={kernelName:Mh,backendName:"webgl",kernelFunc:T4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E4(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,filter:r}=e,{pad:i,strides:a,inputShape:c}=s,l=Ms(c,r.shape,a,1,i),u=new b4(l);return t.runWebGLProgram(u,[o,r],"float32")}const R4={kernelName:_h,backendName:"webgl",kernelFunc:E4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D4=Ir+`
  return cos(x);
`,A4=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${No}
  return result;
`,F4=ke({opSnippet:D4,packedOpSnippet:A4}),O4={kernelName:gi,backendName:"webgl",kernelFunc:F4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M4=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,_4=ke({opSnippet:M4}),L4={kernelName:xi,backendName:"webgl",kernelFunc:_4};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class P4{constructor(e,t,s,o,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,a,c,l]=e,[u]=t,[h,d]=s;this.outputShape=[u,h,d,l];const p=o==="bilinear"?1:0,[f,m]=[`${a-1}.0`,`${c-1}.0`],[g,x,y]=h>1?[`${(a-1)/(h-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[w,b,v]=d>1?[`${(c-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${w});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${i}) {
          return;
        }

        float height_scale = ${x};
        float width_scale = ${b};

        float in_y = ${y};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${v};
        if( in_x < 0.0 || in_x > ${m} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z4=n=>{const{inputs:e,backend:t,attrs:s}=n,{image:o,boxes:r,boxInd:i}=e,{cropSize:a,method:c,extrapolationValue:l}=s,u=new P4(o.shape,r.shape,a,c,l);return t.runWebGLProgram(u,[o,r,i],"float32")},B4={kernelName:Ph,backendName:"webgl",kernelFunc:z4};var si;(function(n){n.Prod="*",n.Sum="+"})(si||(si={}));class Xm{constructor(e,t,s,o){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,i=this.op===si.Prod?"1.0":"0.0",a=s?i:`getX(${Ym(r,"coords",this.op)})`,c=this.outputShape[this.outputShape.length-1];let l="",u="";s?(l=o?`end != ${c-1}`:"end != 0",u=o?"end + 1":"end - 1"):(l=o?`end + pow2 < ${c}`:"end >= pow2",u=o?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${_e(r)} coords = getOutputCoords();
        int end = ${Jm(r,"coords",this.op)};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${l}) {
          int idx = ${u};
          ${Jm(r,"coords",this.op)} = idx;
          val ${this.op}= getX(${Ym(r,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function Ym(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}function Jm(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mw(n,e,t,s,o,r){const i=e.shape.length,a=Ye([s],i);let c=e;a!=null&&(c=Ot({inputs:{x:e},backend:t,attrs:{perm:a}}));const l=tt(1,i)[0];if(l!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${s}`);const u=c.shape[l];let h=Yt({inputs:{x:c},backend:t});for(let d=0;d<=Math.ceil(Math.log2(u))-1;d++){const p=new Xm(n,c.shape,!1,r),f=[[d]],m=h;h=t.runWebGLProgram(p,[h],h.dtype,f),t.disposeIntermediateTensorInfo(m)}if(o){const d=new Xm(n,c.shape,o,r),p=h;h=t.runWebGLProgram(d,[h],h.dtype),t.disposeIntermediateTensorInfo(p)}if(a!=null){const d=_s(a),p=Ot({inputs:{x:h},backend:t,attrs:{perm:d}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(c),p}return h}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V4(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,exclusive:i,reverse:a}=s;return Mw(si.Prod,o,t,r,i,a)}const W4={kernelName:Lh,backendName:"webgl",kernelFunc:V4};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U4(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,exclusive:i,reverse:a}=s;return Mw(si.Sum,o,t,r,i,a)}const G4={kernelName:Vc,backendName:"webgl",kernelFunc:U4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H4(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,weights:r}=e,{size:i,binaryOutput:a}=s;if(o.shape.length===1){const c=t.readSync(o.dataId),l=t.readSync(r.dataId),u=mw(c,l,r.dtype,r.shape,i);return t.makeTensorInfo([i],r.dtype,u)}else if(o.shape.length===2){const c=t.bufferSync(o),l=t.bufferSync(r),u=Xz(c,l,i,a);return t.makeTensorInfo(u.shape,r.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}const q4={kernelName:zh,backendName:"webgl",kernelFunc:H4};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class j4{constructor(e,t,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K4(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{blockSize:r,dataFormat:i}=s,a=o.shape[0],c=i==="NHWC"?o.shape[1]:o.shape[2],l=i==="NHWC"?o.shape[2]:o.shape[3],u=i==="NHWC"?o.shape[3]:o.shape[1],h=c*r,d=l*r,p=u/(r*r),f=i==="NHWC"?[a,h,d,p]:[a,p,h,d],m=new j4(f,r,i);return t.runWebGLProgram(m,[o],o.dtype)}const X4={kernelName:Bh,backendName:"webgl",kernelFunc:K4};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _w{constructor(e,t=!1,s=null,o=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Et(this.outputShape.length);const i=e.filterHeight,a=e.filterWidth,c=e.outChannels/e.inChannels;let l="",u="";s&&(o?l=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:r?l=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:l=`
          float activation(float x) {
            ${s}
          }
        `,u="result = activation(result);");const h=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${c};
        int q = d2 - d1 * ${c};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${i}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${h}
        ${u}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lw{constructor(e,t=!1,s=null,o=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Et(this.outputShape.length);const i=e.outChannels/e.inChannels,a=e.padInfo.left,c=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,h=e.filterWidth,d=h;let p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let x=0;x<h;x++)p+=`
          vec4 xTexelC${x*2};
          int xTexelC${x*2}Ready;
          vec4 xTexelC${x*2+1};
          int xTexelC${x*2+1}Ready;
          vec4 xC${x};`;p+=`
    for (int r = 0; r < ${u}; r++) {
      `;for(let x=0;x<h;x++)p+=`
          xTexelC${x*2} = vec4(0.0);
          xTexelC${x*2}Ready = 0;
          xTexelC${x*2+1} = vec4(0.0);
          xTexelC${x*2+1}Ready = 0;
          xC${x} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let x=0;x<(d+1)/2;x++){const y=x*2;if(p+=`
          xC = xCCorner + ${y*l};
          `,c===1){if(y<h&&(a%2===1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }
              `,l===1&&y>0?p+=`
                xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                  } else {
                    xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xC${y} = xTexelC${y};
                `,y+1<h)){const w=a%2===0?wh(l):l;l%2===0&&a%2===1||l%2!==0&&a%2!==1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${w};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                    xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${y+1}.zw = vec2(0.0);
                    }
                    xTexelC${y+1}Ready = 1;
                  }
                  `,l>1?p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${y+1} = vec4(previous.zw, xTexelC${y+1}.xy);
                    } else {
                     xC${y+1} = vec4(0.0, 0.0, xTexelC${y+1}.xy);
                    }
                    `:p+=`
                    xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                    `):w===1?p+=`
                    xC${y+1} = xTexelC${y};
                    `:p+=`
                    xCOffset = xC + ${w};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                      xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${y+1}.zw = vec2(0.0);
                      }
                      xTexelC${y+1}Ready = 1;
                    }

                    xC${y+1} = xTexelC${y+1};
                    `}}else y<h&&(a%2===1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.0);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
              `,y+1<h&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(
                  xTexelC${y}.xy, xTexelC${y+1}.xy);
              `,y+1<h&&(p+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                `)));y<h&&(p+=`
            wTexel = getW(r, ${y}, d1, q);
            dotProd += xC${y} * vec4(wTexel.xz, wTexel.xz);
          `,y+1<h&&(p+=`
              wTexel = getW(r, ${y+1}, d1, q);
              dotProd += xC${y+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  `,p+=`
      }
    `;let f="",m="";s&&(o?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:r?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:f=`vec4 activation(vec4 x) {
          ${s}
        }`,m="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${m}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y4(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:r}=e,{strides:i,pad:a,dilations:c,dimRoundingMode:l}=s;let u=c;u==null&&(u=[1,1]),k(Tt(i,u),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const h=vt(o.shape,r.shape,i,u,a,l,!0);let d;W().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?d=new Lw(h):d=new _w(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return t.runWebGLProgram(d,[o,r],"float32",p)}const J4={kernelName:Wc,backendName:"webgl",kernelFunc:Y4};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Z4{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,o=e.padInfo.top,r=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${i} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${o};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Q4{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,o=e.strideHeight,r=e.strideWidth,i=t-1-e.padInfo.top,a=s-1-e.padInfo.left,c=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${c}; dm++) {
              int d2 = d1 * ${c} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eU(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,dy:r}=e,{strides:i,dilations:a,pad:c,dimRoundingMode:l,filterShape:u}=s,h=vt(o.shape,u,i,a,c,l,!0),d=new Z4(h);return t.runWebGLProgram(d,[o,r],"float32")}const tU={kernelName:Vh,backendName:"webgl",kernelFunc:eU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nU(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,filter:r}=e,{strides:i,dilations:a,pad:c,dimRoundingMode:l,inputShape:u}=s,h=vt(u,r.shape,i,a,c,l,!0),d=new Q4(h);return t.runWebGLProgram(d,[o,r],"float32")}const sU={kernelName:Wh,backendName:"webgl",kernelFunc:nU};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oU{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rU(n){const{inputs:e,backend:t}=n,{x:s}=e,o=[...s.shape,...s.shape],r=j(s.shape),i=te({inputs:{x:s},backend:t,attrs:{shape:[r]}}),a=new oU(r),c=t.runWebGLProgram(a,[i],i.dtype),l=te({inputs:{x:c},backend:t,attrs:{shape:o}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(c),l}const iU={kernelName:$g,backendName:"webgl",kernelFunc:rU};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aU{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:s,padInfo:o,strideHeight:r,strideWidth:i,filterHeight:a,filterWidth:c,dilationHeight:l,dilationWidth:u}=e,{top:h,left:d}=o;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${i});
      const ivec2 pads = ivec2(${h}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${c}; w++) {
              int wIn = wBeg + w * ${u};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cU(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:r}=e,{strides:i,pad:a,dilations:c}=s,l=sa(o.shape,r.shape,i,a,"NHWC",c);let u;const h=new aU(l);u=t.runWebGLProgram(h,[o,r],"float32");const d=te({inputs:{x:u},backend:t,attrs:{shape:l.outShape}});return t.disposeIntermediateTensorInfo(u),d}const lU={kernelName:Uc,backendName:"webgl",kernelFunc:cU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uU(n){const{inputs:e,backend:t,attrs:s}=n,{equation:o}=s,r=e,{allDims:i,summedDims:a,idDims:c}=hp(o,r.length);pp(i.length,c,r);const{path:l,steps:u}=fp(a,c),h=u.length;let d=null,p=i.length;const f=[];for(let m=0;m<h;++m){for(const g of u[m]){const{permutationIndices:x,expandDims:y}=dp(p,c[g]);let w;mp(x)?w=r[g]:(w=Ot({inputs:{x:r[g]},backend:t,attrs:{perm:x}}),f.push(w));const b=w.shape.slice();for(let v=0;v<y.length;++v)b.splice(y[v],0,1);Re(w.shape,b)||(w=te({inputs:{x:w},backend:t,attrs:{shape:b}}),f.push(w)),d===null?d=w:(d=nf({inputs:{a:w,b:d},backend:t}),f.push(d))}m<h-1&&(l[m]>=0&&(d=nu({inputs:{x:d},backend:t,attrs:{axis:l[m]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&t.disposeIntermediateTensorInfo(m);return d}const hU={kernelName:Uh,backendName:"webgl",kernelFunc:uU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dU="return (x >= 0.0) ? x : (exp(x) - 1.0);",pU=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,fU=ke({opSnippet:dU,packedOpSnippet:pU}),mU={kernelName:bi,backendName:"webgl",kernelFunc:fU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gU="return (b >= 0.0) ? a : a * (b + 1.0);",xU=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,yU=n=>{const{inputs:e,backend:t}=n,{dy:s,y:o}=e,r=W().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Cr(xU,s.shape,o.shape):new bo(gU,s.shape,o.shape);return t.runWebGLProgram(r,[s,o],s.dtype)},bU={kernelName:Gh,backendName:"webgl",kernelFunc:yU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wU=`
  return vec4(equal(a, b));
`,vU="return float(a == b);",CU=It({opSnippet:vU,packedOpSnippet:wU,dtype:"bool",cpuKernelImpl:eB}),IU={kernelName:Gc,backendName:"webgl",kernelFunc:CU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $U=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${op};
  float a1 = ${rp};
  float a2 = ${ip};
  float a3 = ${ap};
  float a4 = ${cp};
  float a5 = ${lp};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,SU=ke({opSnippet:$U}),kU={kernelName:wi,backendName:"webgl",kernelFunc:SU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TU=Ir+`
  return exp(x);
`,NU=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Pw=ke({opSnippet:TU,packedOpSnippet:NU,cpuKernelImpl:tB,dtype:"float32"}),EU={kernelName:vi,backendName:"webgl",kernelFunc:Pw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hh(n){const{inputs:e,attrs:t,backend:s}=n,{dim:o}=t,{input:r}=e,i=r.shape.length,a=r.shape.slice();let c=o;return o<0&&(k(-(i+1)<=o,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),c=i+o+1),a.splice(c,0,1),te({inputs:{x:r},backend:s,attrs:{shape:a}})}const RU={kernelName:Hc,backendName:"webgl",kernelFunc:hh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zm="return exp(x) - 1.0;",DU=ke({opSnippet:Zm,packedOpSnippet:Zm,cpuKernelImpl:nB}),AU={kernelName:Ci,backendName:"webgl",kernelFunc:DU};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qm{constructor(e,t,s){this.variableNames=["real","imag"];const o=t[1];this.outputShape=t;const r=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=s?`${o}.0`:"1.0";let a;if(e==="real")a="return real * expR - imag * expI;";else if(e==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${r};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${o});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${o}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${i};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zw(n,e,t){const s=t.texData.get(n.dataId),o=j(n.shape),r=n.shape[n.shape.length-1],i=o/r,a=te({inputs:{x:n},backend:t,attrs:{shape:[i,r]}}),c=a.shape,l=new Qm("real",c,e),u=new Qm("imag",c,e),h=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:c},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:c}],d=t.runWebGLProgram(l,h,"float32"),p=t.runWebGLProgram(u,h,"float32"),f=Ws({inputs:{real:d,imag:p},backend:t});t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p);const m=te({inputs:{x:f},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(f),m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FU(n){const{inputs:e,backend:t}=n,{input:s}=e;return zw(s,!1,t)}const OU={kernelName:Hh,backendName:"webgl",kernelFunc:FU};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MU{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $a(n){const{backend:e,attrs:t}=n,{shape:s,value:o}=t;let{dtype:r}=t;if(r=r||lr(o),r==="string"){const i=Ze(r,j(s));return i.fill(o),e.makeTensorInfo(s,r,i)}else{const i=new MU(s,o),a=[[o]];return e.runWebGLProgram(i,[],r,a)}}const _U={kernelName:qh,backendName:"webgl",kernelFunc:$a};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LU{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PU={kernelName:jh,backendName:"webgl",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,s=e,o=new LU(t.shape);return s.runWebGLProgram(o,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eg="return floor(x);",zU=ke({opSnippet:eg,packedOpSnippet:eg,cpuKernelImpl:sB}),BU={kernelName:Ii,backendName:"webgl",kernelFunc:zU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VU=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,WU=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,UU=It({opSnippet:VU,packedOpSnippet:WU,dtype:"int32"}),GU={kernelName:$i,backendName:"webgl",kernelFunc:UU};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HU{constructor(e){this.variableNames=["A"];const t=Mt(),[s,o]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${o}.0, ${s}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qU{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=Mt(),[s,o]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${o}.0, ${s}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jU={kernelName:MC,backendName:"webgl",kernelFunc:KU};let Ao,ku=W().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function KU(n){const{inputs:e,backend:t,attrs:s}=n;let{pixels:o}=e;const{numChannels:r}=s,i=typeof HTMLVideoElement<"u"&&o instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&o instanceof HTMLImageElement,[c,l]=i?[o.videoWidth,o.videoHeight]:[o.width,o.height],u=[l,c],h=[l,c,r];if(a||i){const m=W().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Ao==null||m!==ku)&&(ku=m,Ao=document.createElement("canvas").getContext("2d",{willReadFrequently:ku})),Ao.canvas.width=c,Ao.canvas.height=l,Ao.drawImage(o,0,0,c,l),o=Ao.canvas}const d=t.makeTensorInfo(u,"int32");t.texData.get(d.dataId).usage=Qt.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(d.dataId),o);const p=W().getBool("WEBGL_PACK")?new qU(h):new HU(h),f=t.runWebGLProgram(p,[d],"int32");return t.disposeData(d.dataId),f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XU(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:r,bias:i,preluActivationWeights:a}=e,{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,m=is(u),g=vt(o.shape,r.shape,c,h,l,d,!1,m);let x;const y=[],w=i!=null,b=a!=null,v=p==="leakyrelu",I=()=>{const N=[o,r],$=(S,C)=>{if(C==="NCHW"&&S.shape.length===1&&S.shape[0]!==1){const R=te({inputs:{x:S},backend:t,attrs:{shape:[S.shape[0],1,1]}});return y.push(R),R}return S};if(w&&N.push($(i,u)),b&&N.push($(a,u)),v){const S=t.makeTensorInfo([],"float32",Fs(f,"float32"));N.push(S),y.push(S)}return N};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))x=Fw({x:o,filter:r,convInfo:g,backend:t,bias:i,activation:p,preluActivationWeights:a,leakyreluAlpha:f});else if(g.strideWidth<=2&&m==="channelsLast"&&W().getBool("WEBGL_EXP_CONV")){const N=p?ti(p,!0):null,$=new Aw(g,w,N,b,v),S=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],C=I();x=t.runWebGLProgram($,C,"float32",S)}else if(W().getBool("WEBGL_CONV_IM2COL"))x=Ow({x:o,filter:r,convInfo:g,backend:t,bias:i,activation:p,preluActivationWeights:a,leakyreluAlpha:f});else{const N=p?ti(p,!1):null,$=new Dw(g,w,N,b,v),S=I();x=t.runWebGLProgram($,S,"float32")}const T=te({inputs:{x},backend:t,attrs:{shape:g.outShape}});return y.push(x),y.forEach(N=>t.disposeIntermediateTensorInfo(N)),T}const YU={kernelName:Qa,backendName:"webgl",kernelFunc:XU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JU(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:r,bias:i,preluActivationWeights:a}=e,{strides:c,pad:l,dilations:u,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=s,f=[];let m=u;m==null&&(m=[1,1]),k(Tt(c,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${c} and dilations '${m}'`);const g=vt(o.shape,r.shape,c,m,l,h,!0),x=W().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,y=d?ti(d,x):null,w=[o,r],b=i!=null,v=a!=null,I=d==="leakyrelu";if(b&&w.push(i),v&&w.push(a),I){const S=t.makeTensorInfo([],"float32",Fs(p,"float32"));w.push(S),f.push(S)}let T;x?T=new Lw(g,b,y,v,I):T=new _w(g,b,y,v,I);const N=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],$=t.runWebGLProgram(T,w,"float32",N);return f.forEach(S=>t.disposeIntermediateTensorInfo(S)),$}const ZU={kernelName:Ug,backendName:"webgl",kernelFunc:JU};class QU{constructor(e,t,s,o){this.sliceDim=e,this.strides=t,this.paramsShape=o,this.variableNames=["x","indices"],this.outputShape=s;const r=_e(s.length);let i=`
    int index;`;for(let a=0;a<this.sliceDim;a++)i+=`
          index = round(getIndices(coords[0], ${a}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};
          flattenIndex += index * ${this.strides[a]};`;this.userCode=`
         void main() {
          ${r} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${i}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eG(n){const{inputs:e,backend:t}=n,{params:s,indices:o}=e,r=o.shape,i=r[r.length-1],a=j(s.shape),[c,l,u,h]=jd(s,o),d=te({inputs:{x:o},backend:t,attrs:{shape:[l,i]}}),p=te({inputs:{x:s},backend:t,attrs:{shape:[j(s.shape)/u,u]}});if(t.shouldExecuteOnCPU([s,o])||s.dtype==="string"){const x=t.readSync(o.dataId),y=t.bufferSync(s),w=oB(x,y,s.dtype,l,i,u,h,s.shape,a);return t.makeTensorInfo(c,s.dtype,w.values)}const f=new QU(i,h,[l,u],s.shape),m=t.runWebGLProgram(f,[p,d],p.dtype),g=te({inputs:{x:m},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),g}const tG={kernelName:Sg,backendName:"webgl",kernelFunc:eG};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nG{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const s=_e(this.rank),o=sG(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${o}));
      }
    `}}function sG(n,e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let o=0;o<n.length;o++)o===2?s.push("index"):s.push(`${t[o]}`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bw(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,indices:r}=e,{axis:i,batchDims:a}=s,c=ve(i,o.shape)[0];if(W().get("DEBUG")){const y=t.readSync(r.dataId),w=o.shape[c];for(let b=0;b<y.length;++b){const v=y[b];k(v<=w-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${w-1}]`)}}const l=xp(o,r,c,a),u=j(r.shape),h=[],d=te({inputs:{x:o},backend:t,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),p=te({inputs:{x:r},backend:t,attrs:{shape:[l.batchSize,u/l.batchSize]}});h.push(d),h.push(p);const f=[l.batchSize,l.outerSize,u/l.batchSize,l.sliceSize];if(t.shouldExecuteOnCPU([o,r])||o.dtype==="string"){const y=t.bufferSync(p),w=t.bufferSync(d),b=rB(w,y,f);return h.forEach(v=>t.disposeIntermediateTensorInfo(v)),t.makeTensorInfo(l.outputShape,b.dtype,b.values)}const m=new nG(d.shape,f),g=t.runWebGLProgram(m,[d,p],d.dtype);h.push(g);const x=te({inputs:{x:g},backend:t,attrs:{shape:l.outputShape}});return h.forEach(y=>t.disposeIntermediateTensorInfo(y)),x}const oG={kernelName:jc,backendName:"webgl",kernelFunc:Bw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rG="return float(a > b);",iG=`
  return vec4(greaterThan(a, b));
`,aG=It({opSnippet:rG,packedOpSnippet:iG,cpuKernelImpl:iB,dtype:"bool"}),cG={kernelName:Kc,backendName:"webgl",kernelFunc:aG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lG="return float(a >= b);",uG=`
  return vec4(greaterThanEqual(a, b));
`,hG=It({opSnippet:lG,packedOpSnippet:uG,dtype:"bool",cpuKernelImpl:aB}),dG={kernelName:Si,backendName:"webgl",kernelFunc:hG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pG(n){const{inputs:e,backend:t}=n,{input:s}=e;return zw(s,!0,t)}const fG={kernelName:Kh,backendName:"webgl",kernelFunc:pG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mG="return float(!isnan(x) && !isinf(x));",gG=ke({opSnippet:mG,dtype:"bool"}),xG={kernelName:Ti,backendName:"webgl",kernelFunc:gG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yG="return float(isinf(x));",bG=ke({opSnippet:yG,dtype:"bool"}),wG={kernelName:Ni,backendName:"webgl",kernelFunc:bG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vG="return float(isnan(x));",CG=ke({opSnippet:vG,dtype:"bool"}),IG={kernelName:Ei,backendName:"webgl",kernelFunc:CG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $G="return float(a < b);",SG=`
  return vec4(lessThan(a, b));
`,kG=It({opSnippet:$G,packedOpSnippet:SG,cpuKernelImpl:cB,dtype:"bool"}),TG={kernelName:Yc,backendName:"webgl",kernelFunc:kG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NG="return float(a <= b);",EG=`
  return vec4(lessThanEqual(a, b));
`,RG=It({opSnippet:NG,packedOpSnippet:EG,cpuKernelImpl:lB,dtype:"bool"}),DG={kernelName:Jc,backendName:"webgl",kernelFunc:RG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AG(n){const{backend:e,attrs:t}=n,{start:s,stop:o,num:r}=t,i=uB(s,o,r);return e.makeTensorInfo([i.length],"float32",i)}const FG={kernelName:kg,backendName:"webgl",kernelFunc:AG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OG=Ir+`
  return x < 0.0 ? 0./0. : log(x);
`,MG=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,_G=ke({opSnippet:OG,packedOpSnippet:MG,cpuKernelImpl:hB}),LG={kernelName:Ri,backendName:"webgl",kernelFunc:_G};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PG=Ir+`
  return log(1.0 + x);
`,zG=ke({opSnippet:PG}),BG={kernelName:Di,backendName:"webgl",kernelFunc:zG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VG="return float(a >= 1.0 && b >= 1.0);",WG=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,UG=It({opSnippet:VG,packedOpSnippet:WG,dtype:"bool"}),GG={kernelName:Zc,backendName:"webgl",kernelFunc:UG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HG="return float(!(x >= 1.0));",qG=ke({opSnippet:HG}),jG={kernelName:Qc,backendName:"webgl",kernelFunc:qG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KG="return float(a >= 1.0 || b >= 1.0);",XG=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,YG=It({opSnippet:KG,packedOpSnippet:XG,dtype:"bool"}),JG={kernelName:el,backendName:"webgl",kernelFunc:YG};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZG{constructor(e,t,s,o,r){this.variableNames=["x"],this.outputShape=[];const i=t,a=e[3]-1;this.outputShape=e;let c;const l=`float(${s}) + float(${o}) * sum`;r===.5?c=`inversesqrt(${l})`:r===1?c=`1.0/(${l})`:c=`exp(log(${l}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${i}; j <= ${i}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${c};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QG{constructor(e,t,s,o,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=t,a=e[3]-1;this.outputShape=e;let c;const l=`float(${s}) + float(${o}) * sum`;r===.5?c=`inversesqrt(${l})`:r===1?c=`1.0/(${l})`:c=`exp(log(${l}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${i};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${i}; j <= ${i}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${c};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eH=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{depthRadius:r,bias:i,alpha:a,beta:c}=s,l=W().getBool("WEBGL_PACK_NORMALIZATION")?new QG(o.shape,r,i,a,c):new ZG(o.shape,r,i,a,c);return t.runWebGLProgram(l,[o],o.dtype)},tH={kernelName:tl,backendName:"webgl",kernelFunc:eH};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nH{constructor(e,t,s,o,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=s,this.alpha=o,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${o}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${o})
                * float(${r})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sH=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:o,y:r,dy:i}=e,{depthRadius:a,bias:c,alpha:l,beta:u}=s,h=new nH(o.shape,a,c,l,u);return t.runWebGLProgram(h,[o,r,i],o.dtype)},oH={kernelName:Yh,backendName:"webgl",kernelFunc:sH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rH(n,e,t,s){const o=j(e),i=j(n.shape)/o,a=te({inputs:{x:n},attrs:{shape:[i,o]},backend:s}),c=Eo(a,n.dtype,"max",s),l=te({inputs:{x:c},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(c),l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vw(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{reductionIndices:r,keepDims:i}=s,a=o.shape.length,c=ve(r,o.shape);let l=c;const u=Ye(l,a),h=u!=null,d=t.shouldExecuteOnCPU([o]);let p=o;if(h){if(d){const w=t.texData.get(p.dataId).values,b=new Array(a);for(let T=0;T<b.length;T++)b[T]=o.shape[u[T]];const v=ef(w,o.shape,o.dtype,u,b);p=t.makeTensorInfo(b,o.dtype);const I=t.texData.get(p.dataId);I.values=v}else p=tu(o,u,t);l=tt(l.length,a)}Ct("max",l,a);const[f,m]=xt(p.shape,l);let g=f;i&&(g=rt(f,c));let x;if(d){const w=t.texData.get(p.dataId).values,b=dB(w,j(m),g,o.dtype);x=t.makeTensorInfo(g,o.dtype);const v=t.texData.get(x.dataId);v.values=b}else x=rH(p,m,g,t);return h&&t.disposeIntermediateTensorInfo(p),x}const iH={kernelName:nl,backendName:"webgl",kernelFunc:Vw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aH=tf+`
  return max(a, b);
`,cH=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+No+`
  return result;
`,lH=It({opSnippet:aH,packedOpSnippet:cH,cpuKernelImpl:pB}),uH={kernelName:Ai,backendName:"webgl",kernelFunc:lH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hH(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e;va(o,"maxPool");const{filterSize:r,strides:i,pad:a,dimRoundingMode:c}=s,l=1;k(Tt(i,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);const u=fn(o.shape,r,i,l,a,c);if(u.filterWidth===1&&u.filterHeight===1&&Re(u.inShape,u.outShape))return Yt({inputs:{x:o},backend:t});const h=new ni(u,"max",!1);return t.runWebGLProgram(h,[o],o.dtype)}const dH={kernelName:sl,backendName:"webgl",kernelFunc:hH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pH(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{filterSize:r,strides:i,pad:a,dataFormat:c,dimRoundingMode:l}=s,u=[1,1,1],h=rs(o.shape,r,i,u,a,l,c),d=new sf(h,"max",!1);return t.runWebGLProgram(d,[o],o.dtype)}const fH={kernelName:ol,backendName:"webgl",kernelFunc:pH};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mH{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,s=e.strideWidth,o=e.dilationHeight,r=e.effectiveFilterHeight,i=e.effectiveFilterWidth,a=r-1-e.padInfo.top,c=i-1-e.padInfo.left,l=r*i-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${i}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${i} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class gH{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,s=e.strideHeight,o=e.strideWidth,r=e.dilationDepth,i=e.dilationHeight,a=e.dilationWidth,c=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,h=c-1-e.padInfo.front,d=l-1-e.padInfo.top,p=u-1-e.padInfo.left,f=c*l*u-1;this.userCode=`
      const ivec3 pads = ivec3(${h}, ${d}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${c};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${i}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${u};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${u} +
                  wR * ${u} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xH(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,input:r}=e,i=r,{filterSize:a,strides:c,pad:l,dimRoundingMode:u}=s,h=[1,1,1],d=rs(i.shape,a,c,h,l,u),p=new sf(d,"max",!0),f=t.runWebGLProgram(p,[i],i.dtype),m=new gH(d),g=t.runWebGLProgram(m,[o,f],i.dtype);return t.disposeIntermediateTensorInfo(f),g}const yH={kernelName:Zh,backendName:"webgl",kernelFunc:xH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bH(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,input:r,output:i}=e,a=r;va([r,i],"maxPoolGrad");const{filterSize:c,strides:l,pad:u,dimRoundingMode:h}=s,d=fn(a.shape,c,l,1,u,h),p=!0,f=new ni(d,"max",p),m=t.runWebGLProgram(f,[a],a.dtype),g=new mH(d),x=t.runWebGLProgram(g,[o,m],a.dtype);return t.disposeIntermediateTensorInfo(m),x}const wH={kernelName:Jh,backendName:"webgl",kernelFunc:bH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vH(n,e,t,s){let o=new ni(t,"max",!1);const r=s.runWebGLProgram(o,[n],"float32");o=new ni(t,"max",!0,!0,e);const i=s.runWebGLProgram(o,[n],"float32");return[r,i]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CH={kernelName:Tg,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:o,strides:r,pad:i,includeBatchInIndex:a}=e,c=t;k(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const l=[1,1];k(Tt(r,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${l}'`);const u=fn(s.shape,o,r,l,i),[h,d]=vH(s,a,u,c);return[h,d]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IH(n,e,t,s){const o=j(e),i=j(n.shape)/o,a=te({inputs:{x:n},attrs:{shape:[i,o]},backend:s}),c=Eo(a,"float32","mean",s),l=te({inputs:{x:c},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(c),l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $H={kernelName:rl,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{keepDims:o,axis:r}=e,i=t,a=s.shape.length,c=ve(r,s.shape);let l=c;const u=Ye(l,a),h=u!=null,d=i.shouldExecuteOnCPU([s]),p=[];let f=s;if(h){if(d){const b=i.texData.get(f.dataId).values,v=new Array(a);for(let N=0;N<v.length;N++)v[N]=s.shape[u[N]];const I=ef(b,s.shape,s.dtype,u,v);f=i.makeTensorInfo(v,s.dtype);const T=i.texData.get(f.dataId);T.values=I}else f=tu(s,u,i);p.push(f),l=tt(l.length,a)}Ct("sum",l,a);const[m,g]=xt(f.shape,l);let x=m;o&&(x=rt(m,c));const y=IH(f,g,x,i);for(const w of p)i.disposeIntermediateTensorInfo(w);return y}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SH(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,keepDims:i}=s,a=o.shape.length,c=ve(r,o.shape);let l=c;const u=Ye(l,a);let h=o;u!=null&&(h=Ot({inputs:{x:o},backend:t,attrs:{perm:u}}),l=tt(l.length,o.shape.length)),Ct("min",l,a);const[d,p]=xt(h.shape,l),f=j(p),m=te({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}}),g=Eo(m,m.dtype,"min",t);let x;if(i){const y=rt(d,c);x=te({inputs:{x:g},backend:t,attrs:{shape:y}})}else x=te({inputs:{x:g},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),u!=null&&t.disposeIntermediateTensorInfo(h),x}const kH={kernelName:il,backendName:"webgl",kernelFunc:SH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TH=tf+`
  return min(a, b);
`,NH=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+No+`
  return result;
`,EH=It({opSnippet:TH,packedOpSnippet:NH,cpuKernelImpl:fB}),RH={kernelName:Fi,backendName:"webgl",kernelFunc:EH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DH{constructor(e,t,s){this.variableNames=["x"],this.outputShape=t.map((u,h)=>u[0]+e[h]+u[1]);const o=e.length,r=_e(o),i=t.map(u=>u[0]).join(","),a=t.map((u,h)=>u[0]+e[h]).join(","),c=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o),l=s==="reflect"?0:1;if(o===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${i});
      ${r} end = ${r}(${a});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${o}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${c}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AH{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((f,m)=>f[0]+e[m]+f[1]);const o=e.length,r=_e(o),i=t.map(f=>f[0]).join(","),a=t.map((f,m)=>f[0]+e[m]).join(","),c=At("rc",o),l=At("source",o),u=`${c[o-1]} < ${this.outputShape[o-1]}`,h=o===1?"source":`vec2(${l.slice(-2).join()})`,d=s==="reflect"?0:1;let p="";if(o===1){const f=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;p=`
        ${r} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${l.join()}), ${h});
        ${c[o-1]} += 1;
        if(${u}) {
          ${f}
          result[1] = getChannel(getX(${l.join()}), ${h});
        }
      `}else{const f=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;p=`
        ${r} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${l.join()}), ${h});
        ${c[o-1]} += 1;
        if(${u}) {
          ${f}
          result[1] = getChannel(getX(${l.join()}), ${h});
        }
        rc = outputLoc;
        ${c[o-2]} += 1;
        if(${c[o-2]} < ${this.outputShape[o-2]}) {
          ${f}
          result[2] = getChannel(getX(${l.join()}), ${h});
          ${c[o-1]} += 1;
          if(${u}) {
            ${f}
            result[3] = getChannel(getX(${l.join()}), ${h});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${i});
      const ${r} end = ${r}(${a});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FH=({inputs:n,backend:e,attrs:t})=>{const{x:s}=n,{paddings:o,mode:r}=t,i=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new AH(s.shape,o,r):new DH(s.shape,o,r);return e.runWebGLProgram(i,[s],s.dtype)},OH={kernelName:al,backendName:"webgl",kernelFunc:FH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MH=`if (b == 0.0) return NAN;
  return mod(a, b);`,_H=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+No+`
  return result;
`,LH=It({opSnippet:MH,packedOpSnippet:_H}),PH={kernelName:Oi,backendName:"webgl",kernelFunc:LH};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zH{constructor(e,t,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BH=`
if (a == b) {
  return 1.0;
};
return a / b;`,VH=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,Ww=It({opSnippet:BH,packedOpSnippet:VH,checkOutOfBounds:!0}),WH={kernelName:yi,backendName:"webgl",kernelFunc:Ww};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tg="return a - b;",Uw=It({opSnippet:tg,packedOpSnippet:tg,supportsComplex:!0,cpuKernelImpl:MB}),UH={kernelName:Yi,backendName:"webgl",kernelFunc:Uw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gw(n){const{inputs:e,backend:t,attrs:s}=n,{logits:o}=e,{dim:r}=s,i=ve([r],o.shape),a=Vw({inputs:{x:o},backend:t,attrs:{reductionIndices:i,keepDims:!1}}),c=rt(a.shape,i),l=te({inputs:{x:a},backend:t,attrs:{shape:c}}),u=Uw({inputs:{a:o,b:l},backend:t}),h=Pw({inputs:{x:u},backend:t}),d=nu({inputs:{x:h},backend:t,attrs:{axis:i,keepDims:!1}}),p=te({inputs:{x:d},backend:t,attrs:{shape:c}}),f=Ww({inputs:{a:h,b:p},backend:t});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),f}const GH={kernelName:Sl,backendName:"webgl",kernelFunc:Gw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HH(n){const{inputs:e,backend:t,attrs:s}=n,{logits:o}=e,{numSamples:r,seed:i,normalized:a}=s,c=a?o:Gw({inputs:{logits:o},backend:t,attrs:{dim:o.shape.length-1}}),l=c.shape[0],u=c.shape[1],h=new zH(l,u,r),d=[[i]],p=t.runWebGLProgram(h,[c],"int32",d);return a||t.disposeIntermediateTensorInfo(c),p}const qH={kernelName:Ng,backendName:"webgl",kernelFunc:HH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jH=gn+`
  return -x;
`,KH=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function XH(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])){const r=t.texData.get(s.dataId),[i,a]=gB(r.values,s.shape,s.dtype);return t.makeTensorInfo(a,s.dtype,i)}let o;return W().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new ws(s.shape,KH):o=new _n(s.shape,jH),t.runWebGLProgram(o,[s],s.dtype)}const YH={kernelName:cl,backendName:"webgl",kernelFunc:XH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JH=Vd;function ZH(n){Zt("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:o,scores:r}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:c}=s,l=t.readSync(o.dataId),u=t.readSync(r.dataId),{selectedIndices:h}=JH(l,u,i,a,c);return t.makeTensorInfo([h.length],"int32",new Int32Array(h))}const QH={kernelName:Qh,backendName:"webgl",kernelFunc:ZH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eq=Wd;function tq(n){Zt("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:o,scores:r}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:c,padToMaxOutputSize:l}=s,u=t.readSync(o.dataId),h=t.readSync(r.dataId),{selectedIndices:d,validOutputs:p}=eq(u,h,i,a,c,l);return[t.makeTensorInfo([d.length],"int32",new Int32Array(d)),t.makeTensorInfo([],"int32",new Int32Array([p]))]}const nq={kernelName:ed,backendName:"webgl",kernelFunc:tq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sq=Ud;function oq(n){Zt("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:o,scores:r}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:c,softNmsSigma:l}=s,u=t.readSync(o.dataId),h=t.readSync(r.dataId),d=i,p=a,f=c,m=l,{selectedIndices:g,selectedScores:x}=sq(u,h,d,p,f,m);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([x.length],"float32",new Float32Array(x))]}const rq={kernelName:td,backendName:"webgl",kernelFunc:oq};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iq{constructor(e,t,s,o){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${o}), float(${s}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aq=n=>{const{inputs:e,backend:t,attrs:s}=n,{indices:o}=e,{dtype:r,depth:i,onValue:a,offValue:c}=s,l=j(o.shape),u=new iq(l,i,a,c),h=te({inputs:{x:o},backend:t,attrs:{shape:[l]}}),d=t.runWebGLProgram(u,[h],r);t.disposeIntermediateTensorInfo(h);const p=[...o.shape,i],f=te({inputs:{x:d},backend:t,attrs:{shape:p}});return t.disposeIntermediateTensorInfo(d),f},cq={kernelName:hl,backendName:"webgl",kernelFunc:aq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kc(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="complex64"){const o=Ia({inputs:{input:s},backend:t}),r=kc({inputs:{x:o},backend:t}),i=su({inputs:{input:s},backend:t}),a=kc({inputs:{x:i},backend:t}),c=Ws({inputs:{real:r,imag:a},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),c}else return $a({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:t})}const lq={kernelName:Nl,backendName:"webgl",kernelFunc:kc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hw(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const o=Ia({inputs:{input:s},backend:t}),r=Hw({inputs:{x:o},backend:t}),i=su({inputs:{input:s},backend:t}),a=kc({inputs:{x:i},backend:t}),c=Ws({inputs:{real:r,imag:a},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),c}else return $a({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:t})}const uq={kernelName:ul,backendName:"webgl",kernelFunc:Hw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hq(n){const{inputs:e,backend:t,attrs:s}=n,{axis:o}=s;if(e.length===1)return hh({inputs:{input:e[0]},backend:t,attrs:{dim:o}});const r=e[0].shape,i=e[0].dtype;e.forEach(u=>{vh(r,u.shape,"All tensors passed to stack must have matching shapes"),k(i===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],c=e.map(u=>{const h=hh({inputs:{input:u},backend:t,attrs:{dim:o}});return a.push(h),h}),l=Rw({inputs:c,backend:t,attrs:{axis:o}});return a.forEach(u=>t.disposeIntermediateTensorInfo(u)),l}const dq={kernelName:dl,backendName:"webgl",kernelFunc:hq};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pq{constructor(e,t,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((l,u)=>l[0]+e[u]+l[1]);const o=e.length,r=_e(o),i=t.map(l=>l[0]).join(","),a=t.map((l,u)=>l[0]+e[u]).join(","),c=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o);if(o===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${i});
      ${r} end = ${r}(${a});

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${c}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fq{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((m,g)=>m[0]+e[g]+m[1]);const o=e.length,r=_e(o),i=t.map(m=>m[0]).join(","),a=t.map((m,g)=>m[0]+e[g]).join(","),c=At("rc",o),l=At("source",o),u=`${c[o-1]} < ${this.outputShape[o-1]}`,h=o===1?"source":`vec2(${l.slice(-2).join()})`,d=[`${r} rc = outputLoc;`,`${c[o-1]} += 1;
       if(${u}) {
      `,o===1?"":`}
       rc = outputLoc;
       ${c[o-2]} += 1;
       if(${c[o-2]} < ${this.outputShape[o-2]}) {`,o===1?"":`  ${c[o-1]} += 1;
         if(${u}) {`],p=o===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let f="";for(let m=0,g=o===1?2:4;m<g;m++)f+=`
        ${d[m]}
        if (${p}) {
          result[${m}] = float(value);
        } else {
          ${r} source = rc - start;
          result[${m}] = getChannel(getX(${l.join()}), ${h});
        }
      `;f+=o===1?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${i});
      const ${r} end = ${r}(${a});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qw=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{paddings:r,constantValue:i}=s;if(j(o.shape)===0){const l=r.map((u,h)=>u[0]+o.shape[h]+u[1]);return $a({backend:t,attrs:{shape:l,value:i,dtype:o.dtype}})}const a=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new fq(o.shape,r,i):new pq(o.shape,r,i),c=[[i]];return t.runWebGLProgram(a,[o],o.dtype,c)},mq={kernelName:pl,backendName:"webgl",kernelFunc:qw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gq=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,xq=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+No+`
  return result;
`,yq=It({opSnippet:gq,packedOpSnippet:xq}),bq={kernelName:_i,backendName:"webgl",kernelFunc:yq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wq(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,keepDims:i}=s,a=o.shape.length,c=[],l=ve(r,o.shape);let u=l;const h=Ye(u,a);let d=o;h!=null&&(d=Ot({inputs:{x:o},backend:t,attrs:{perm:h}}),u=tt(u.length,a),c.push(d)),Ct("prod",u,a);let p;if(t.shouldExecuteOnCPU([d])){const f=t.texData.get(d.dataId).values,{outVals:m,outShape:g,outDtype:x}=yB(d.shape,d.dtype,f,u);p=t.makeTensorInfo(g,x,m)}else{const[f,m]=xt(d.shape,u),g=j(m),x=te({inputs:{x:d},backend:t,attrs:{shape:[-1,g]}}),y=pd(o.dtype),w=Eo(x,y,"prod",t);p=te({inputs:{x:w},backend:t,attrs:{shape:f}}),c.push(x),c.push(w)}if(i){c.push(p);const f=rt(p.shape,l);p=te({inputs:{x:p},backend:t,attrs:{shape:f}})}return c.forEach(f=>t.disposeIntermediateTensorInfo(f)),p}const vq={kernelName:ml,backendName:"webgl",kernelFunc:wq};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cq(n){const{inputs:e,backend:t,attrs:s}=n,{paramsNestedSplits:o,paramsDenseValues:r,indices:i}=e,{outputRaggedRank:a}=s,c=o.map(x=>t.readSync(x.dataId)),l=o.map(x=>x.shape),u=t.readSync(r.dataId),h=t.readSync(i.dataId),[d,p,f]=bB(c,l,u,r.shape,r.dtype,h,i.shape,a),m=d.map(x=>t.makeTensorInfo([x.length],"int32",x)),g=t.makeTensorInfo(f,r.dtype,p);return m.concat([g])}const Iq={kernelName:Eg,backendName:"webgl",kernelFunc:Cq};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $q(n){const{inputs:e,backend:t}=n,{starts:s,limits:o,deltas:r}=e,i=t.readSync(s.dataId),a=t.readSync(o.dataId),c=t.readSync(r.dataId),[l,u]=wB(i,s.shape,s.dtype,a,o.shape,c,r.shape),h=t.makeTensorInfo([l.length],"int32",l),d=t.makeTensorInfo([u.length],s.dtype,u);return[h,d]}const Sq={kernelName:Rg,backendName:"webgl",kernelFunc:$q};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kq(n){const{inputs:e,backend:t,attrs:s}=n,{shape:o,values:r,defaultValue:i,rowPartitionTensors:a}=e,{rowPartitionTypes:c}=s,l=t.readSync(o.dataId),u=t.readSync(r.dataId),h=t.readSync(i.dataId),d=a.map(g=>t.readSync(g.dataId)),p=a.map(g=>g.shape),[f,m]=vB(l,o.shape,u,r.shape,r.dtype,h,i.shape,d,p,c);return t.makeTensorInfo(f,r.dtype,m)}const Tq={kernelName:Dg,backendName:"webgl",kernelFunc:kq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jw=n=>{const{backend:e,attrs:t}=n,{start:s,stop:o,step:r,dtype:i}=t,a=CB(s,o,r,i);return e.makeTensorInfo([a.length],i,a)},Nq={kernelName:nd,backendName:"webgl",kernelFunc:jw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eq="return 1.0 / x;",Rq=ke({opSnippet:Eq}),Dq={kernelName:Li,backendName:"webgl",kernelFunc:Rq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aq=gn+`
  return (x < 0.0) ? 0.0 : x;
`,Fq=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Oq=ke({opSnippet:Aq,packedOpSnippet:Fq}),Mq={kernelName:Pi,backendName:"webgl",kernelFunc:Oq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _q=gn+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Lq=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Pq=ke({opSnippet:_q,packedOpSnippet:Lq}),zq={kernelName:zi,backendName:"webgl",kernelFunc:Pq};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bq{constructor(e,t,s,o,r){this.variableNames=["A"],this.outputShape=[];const[i,a,c,l]=e;this.outputShape=[i,t,s,l];const u=[o&&t>1?a-1:a,o&&s>1?c-1:c],h=[o&&t>1?t-1:t,o&&s>1?s-1:s];let d;r?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/h[0]},
          ${u[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${c}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vq{constructor(e,t,s,o,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,c,l]=e;this.outputShape=[i,t,s,l];const u=[o&&t>1?a-1:a,o&&s>1?c-1:c],h=[o&&t>1?t-1:t,o&&s>1?s-1:s];let d;r?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/h[0]},
          ${u[1]/h[1]},
          ${u[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${c}.0,
                                     ${c}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wq(n){const{inputs:e,backend:t,attrs:s}=n,{images:o}=e,{alignCorners:r,halfPixelCenters:i,size:a}=s,[c,l]=a,u=W().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Vq(o.shape,c,l,r,i):new Bq(o.shape,c,l,r,i);return t.runWebGLProgram(u,[o],"float32")}const Uq={kernelName:yl,backendName:"webgl",kernelFunc:Wq};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gq{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,o,r]=t,[,i,a]=e,c=[s&&i>1?o-1:o,s&&a>1?r-1:r],l=[s&&i>1?i-1:i,s&&a>1?a-1:a],u=c[0]/l[0],h=c[1]/l[1],d=1/u,p=1/h,f=Math.ceil(d)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${o-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hq(n){const{inputs:e,backend:t,attrs:s}=n,{images:o,dy:r}=e,{alignCorners:i}=s,a=new Gq(r.shape,o.shape,i);return t.runWebGLProgram(a,[r],r.dtype)}const qq={kernelName:rd,backendName:"webgl",kernelFunc:Hq};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jq{constructor(e,t,s,o,r){this.variableNames=["A"],this.outputShape=[];const[i,a,c,l]=e;this.outputShape=[i,t,s,l];const u=[o&&t>1?a-1:a,o&&s>1?c-1:c],h=[o&&t>1?t-1:t,o&&s>1?s-1:s],d=o?"0.5":"0.0";let p;r?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/h[0]},
          ${u[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${c}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kq{constructor(e,t,s,o,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,c,l]=e;this.outputShape=[i,t,s,l];const u=[o&&t>1?a-1:a,o&&s>1?c-1:c],h=[o&&t>1?t-1:t,o&&s>1?s-1:s],d=o?"0.5":"0.0";let p;r?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/h[0]},
          ${u[1]/h[1]},
          ${u[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${c}.0,
                                     ${c}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${s-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xq(n){const{inputs:e,backend:t,attrs:s}=n,{images:o}=e,{alignCorners:r,halfPixelCenters:i,size:a}=s,[c,l]=a,u=W().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Kq(o.shape,c,l,r,i):new jq(o.shape,c,l,r,i);return t.runWebGLProgram(u,[o],o.dtype)}const Yq={kernelName:xl,backendName:"webgl",kernelFunc:Xq};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jq{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,o,r]=t,[,i,a]=e,c=[s&&i>1?o-1:o,s&&a>1?r-1:r],l=[s&&i>1?i-1:i,s&&a>1?a-1:a],u=c[0]/l[0],h=c[1]/l[1],d=1/u,p=1/h,f=Math.ceil(d)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${c[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${c[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${o}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zq(n){const{inputs:e,backend:t,attrs:s}=n,{images:o,dy:r}=e,{alignCorners:i}=s,a=new Jq(r.shape,o.shape,i);return t.runWebGLProgram(a,[r],r.dtype)}const Qq={kernelName:od,backendName:"webgl",kernelFunc:Zq};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ej{constructor(e,t){this.variableNames=["x"];const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=e,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const o=a=>t.indexOf(a)!==-1&&e[a]!==1?`${e[a]} - coords[${a}] - 1`:`coords[${a}]`,r=e.map((a,c)=>o(c)).join(","),i=_e(s);this.userCode=`
      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tj{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=e;const o=At("rc",s),r=`${o[s-1]} + 1 < ${this.outputShape[s-1]}`,i=`${o[s-2]} + 1 < ${this.outputShape[s-2]}`,a=_e(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${r}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${c(o.slice())};
          if(${r}){
            result.g = ${l(o.slice())};
          }
          if(${i}) {
            result.b = ${u(o.slice())};
            if(${r}) {
              result.a = ${h(o.slice())};
            }
          }
          setOutput(result);
        }
    `;function c(f){return d(f)}function l(f){return f[s-1]="("+f[s-1]+" + 1)",d(f)}function u(f){return f[s-2]="("+f[s-2]+" + 1)",d(f)}function h(f){return f[s-1]="("+f[s-1]+" + 1)",f[s-2]="("+f[s-2]+" + 1)",d(f)}function d(f){const m=e.map((y,w)=>p(w,f)),g=m.join(","),x=m.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${x}))`}function p(f,m){return t.indexOf(f)!==-1&&e[f]!==1?`${e[f]} - ${m[f]} - 1`:`${m[f]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nj(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{dims:r}=s,i=o.shape.length,a=ve(r,o.shape);if(i===0)return Yt({inputs:{x:o},backend:t});const c=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new tj(o.shape,a):new ej(o.shape,a);return t.runWebGLProgram(c,[o],o.dtype)}const sj={kernelName:bl,backendName:"webgl",kernelFunc:nj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oj{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=e[1],o=e[2];this.outputShape=e;let r="";typeof t=="number"?r=`float outputValue = ${t.toFixed(2)};`:r=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${r}
          if(coordX >= 0 && coordX < ${o} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rj={kernelName:dd,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:o,fillValue:r,center:i}=e,a=t,c=new oj(s.shape,r),[l,u]=tp(i,s.shape[1],s.shape[2]),h=[[l,u,Math.sin(o),Math.cos(o)]];return a.runWebGLProgram(c,[s],s.dtype,h)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ij=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,aj=ke({opSnippet:ij}),cj={kernelName:Bi,backendName:"webgl",kernelFunc:aj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lj="return inversesqrt(x);",uj=ke({opSnippet:lj,cpuKernelImpl:IB}),hj={kernelName:Vi,backendName:"webgl",kernelFunc:uj};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class of{constructor(e,t,s,o,r,i,a=!0,c=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const l=_e(r.length),u=_e(i.length);let h="";s===1?h="i":s===2&&(h="i, j");const d=`getIndices(${h})`;let p="";o===1?p="i":o===2&&(p="i, coords[1]");const f=`getUpdates(${p})`;let m="";c&&(m="coords[0], coords[1]");const g=`getDefaultValue(${m})`,x=t>1?"strides[j]":"strides";this.userCode=`
        ${l} strides = ${l}(${r});

        void main() {
          ${u} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${d});
              flattenedIndex += index * ${x};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(${g}, sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dj{constructor(e,t,s,o,r,i,a=!0,c=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i;const l=_e(r.length),u=_e(i.length);let h="";s===1?h="i":s===2&&(h="i, j");const d=`getIndices(${h})`;let p="";o===1?p="i":o===2&&(p="i, coords[1]");const f=`getUpdates(${p})`;let m="";c&&(m="coords[0], coords[1]");const g=`getDefaultValue(${m})`,x=t>1?"strides[j]":"strides",y=t>1?"strides[j + 1]":"strides";this.userCode=`
        ${l} strides = ${l}(${r});

        void main() {
          ${u} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${d});
              flattenedIndex += index.xz * ${x};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${y};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${f};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${g}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pj(n){const{inputs:e,backend:t,attrs:s}=n,{indices:o,updates:r}=e,{shape:i}=s,{sliceRank:a,numUpdates:c,sliceSize:l,strides:u,outputSize:h}=Io(r,o,i),d=[h/l,l];if(h===0)return t.makeTensorInfo(i,o.dtype);const p=te({inputs:{x:o},backend:t,attrs:{shape:[c,a]}}),f=te({inputs:{x:r},backend:t,attrs:{shape:[c,l]}}),m=t.makeTensorInfo([],"float32",new Float32Array([0]));let g;W().getBool("WEBGL_PACK")?g=new dj(c,a,p.shape.length,f.shape.length,u,d):g=new of(c,a,p.shape.length,f.shape.length,u,d);const x=t.runWebGLProgram(g,[f,p,m],f.dtype),y=te({inputs:{x},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(m),y}const fj={kernelName:Ag,backendName:"webgl",kernelFunc:pj};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mj{constructor(e,t,s,o){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,s];const r="while (left < right) {",i=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=W().getNumber("WEBGL_VERSION")===2?r:i,c=o==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${a}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${c} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gj(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:o,values:r}=e,{side:i}=s,a=new mj(o.shape[0],o.shape[1],r.shape[1],i),c=[[o.shape[1]]];return t.runWebGLProgram(a,[o,r],"int32",c)}const xj={kernelName:Og,backendName:"webgl",kernelFunc:gj};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yj{constructor(e,t,s){this.variableNames=["c","a","b"],this.outputShape=t;let o,r;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)r="resRC",o="resRC";else{const a=["resRC.x","resRC.y","resRC.z","resRC.w"],c=[],l=[];for(let u=0;u<t.length;u++)l.push(`${a[u]}`),u<e&&c.push(`${a[u]}`);o=c.join(),r=l.join()}const i=_e(s);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        float cVal = getC(${o});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bj(n){const{inputs:e,backend:t}=n,{condition:s,t:o,e:r}=e,i=new yj(s.shape.length,o.shape,o.shape.length);return t.runWebGLProgram(i,[s,o,r],Kt(o.dtype,r.dtype))}const wj={kernelName:wl,backendName:"webgl",kernelFunc:bj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vj=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${Pl};
  float scale = ${zl};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Cj=ke({opSnippet:vj}),Ij={kernelName:Wi,backendName:"webgl",kernelFunc:Cj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $j=Ir+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,Sj=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,kj=ke({opSnippet:$j,packedOpSnippet:Sj,cpuKernelImpl:SB}),Tj={kernelName:qi,backendName:"webgl",kernelFunc:kj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nj=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Ej=ke({opSnippet:Nj}),Rj={kernelName:Hi,backendName:"webgl",kernelFunc:Ej};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dj=Ir+`
  return sin(x);
`,Aj=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${No}
  return result;
`,Fj=ke({opSnippet:Dj,packedOpSnippet:Aj}),Oj={kernelName:Ui,backendName:"webgl",kernelFunc:Fj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mj=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,_j=ke({opSnippet:Mj}),Lj={kernelName:Gi,backendName:"webgl",kernelFunc:_j};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pj=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,zj=ke({opSnippet:Pj}),Bj={kernelName:ji,backendName:"webgl",kernelFunc:zj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vj=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{blockShape:r,paddings:i}=s;k(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const a=r.reduce((x,y)=>x*y),c=[[0,0]];c.push(...i);for(let x=1+r.length;x<o.shape.length;++x)c.push([0,0]);const l=[],u=qw({inputs:{x:o},backend:t,attrs:{paddings:c,constantValue:0}}),h=ca(u.shape,r,a,!1),d=la(h.length,r.length,!1),p=ua(u.shape,r,a,!1),f=te({inputs:{x:u},backend:t,attrs:{shape:h}}),m=Ot({inputs:{x:f},backend:t,attrs:{perm:d}}),g=te({inputs:{x:m},backend:t,attrs:{shape:p}});return l.push(u),l.push(f),l.push(m),l.forEach(x=>t.disposeIntermediateTensorInfo(x)),g},Wj={kernelName:Il,backendName:"webgl",kernelFunc:Vj};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uj(n){const{inputs:e,backend:t}=n,{indices:s,values:o,denseShape:r,defaultValue:i}=e;if(r.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${r.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${o.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const a=t.readSync(s.dataId),c=t.readSync(o.dataId),l=t.readSync(r.dataId),u=t.readSync(i.dataId)[0],[h,d,p,f,m]=TB(a,s.shape,s.dtype,c,o.dtype,l,u);return[t.makeTensorInfo(d,s.dtype,h),t.makeTensorInfo([d[0]],o.dtype,p),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),t.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const Gj={kernelName:Mg,backendName:"webgl",kernelFunc:Uj};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hj(n){const{inputs:e,backend:t}=n,{inputIndices:s,inputShape:o,newShape:r}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${o.shape}`);if(r.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const i=Array.from(t.readSync(o.dataId)),a=t.readSync(s.dataId),c=Array.from(t.readSync(r.dataId)),[l,u,h]=NB(a,s.shape,s.dtype,i,c);return[t.makeTensorInfo(u,s.dtype,l),t.makeTensorInfo([h.length],r.dtype,new Int32Array(h))]}const qj={kernelName:_g,backendName:"webgl",kernelFunc:Hj};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jj(n){const{inputs:e,backend:t}=n,{data:s,indices:o,segmentIds:r}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${o.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${r.shape}`);const i=t.readSync(s.dataId),a=t.readSync(o.dataId),c=t.readSync(r.dataId),[l,u]=xw(i,s.shape,s.dtype,a,c,!0);return t.makeTensorInfo(u,s.dtype,l)}const Kj={kernelName:Lg,backendName:"webgl",kernelFunc:jj};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xj(n){const{inputs:e,backend:t}=n,{data:s,indices:o,segmentIds:r}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${o.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${r.shape}`);const i=t.readSync(s.dataId),a=t.readSync(o.dataId),c=t.readSync(r.dataId),[l,u]=xw(i,s.shape,s.dtype,a,c);return t.makeTensorInfo(u,s.dtype,l)}const Yj={kernelName:Pg,backendName:"webgl",kernelFunc:Xj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jj(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:o,sparseValues:r,defaultValue:i}=e,{outputShape:a}=s,{sliceRank:c,numUpdates:l,sliceSize:u,strides:h,outputSize:d}=Io(r,o,a),p=!1;if(r.dtype==="string"){const x=t.bufferSync(o),y=t.bufferSync(r),w=ks(t.readSync(i.dataId)[0]),b=$B(x,y,a,d,u,l,c,h,w,p);return t.makeTensorInfo(a,b.dtype,b.values)}const f=new of(l,c,o.shape.length,r.shape.length,h,[d,1],p),m=t.runWebGLProgram(f,[r,o,i],r.dtype),g=te({inputs:{x:m},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(m),g}const Zj={kernelName:zg,backendName:"webgl",kernelFunc:Jj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qj(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{numOrSizeSplits:r,axis:i}=s,a=ve(i,o.shape)[0],c=gp(o,r,a),l=o.shape.length,u=new Array(l).fill(0),h=o.shape.slice();return c.map(d=>{const p=[...h];p[a]=d;const f=$r({inputs:{x:o},backend:t,attrs:{begin:u,size:p}});return u[a]+=d,f})}const eK={kernelName:$l,backendName:"webgl",kernelFunc:Qj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ng="return sqrt(x);",tK=ke({opSnippet:ng,packedOpSnippet:ng,cpuKernelImpl:EB}),nK={kernelName:Ki,backendName:"webgl",kernelFunc:tK};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sK="return x * x;",oK=ke({opSnippet:sK}),rK={kernelName:id,backendName:"webgl",kernelFunc:oK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sg="return (a - b) * (a - b);",iK=It({opSnippet:sg,packedOpSnippet:sg}),aK={kernelName:Xi,backendName:"webgl",kernelFunc:iK};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cK(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");const r=t.readSync(o.dataId),i=ss(r),a=RB(i,"string",s);return t.makeTensorInfo(o.shape,"string",a)}const lK={kernelName:ad,backendName:"webgl",kernelFunc:cK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uK({inputs:n,attrs:e,backend:t}){const{x:s}=n,o=gn+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,r=new _n(s.shape,o);return t.runWebGLProgram(r,[s],s.dtype)}const hK={kernelName:ea,backendName:"webgl",kernelFunc:uK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dK{constructor(e,t,s){this.variableNames=["x"],this.outputShape=s;const o=s.length,r=_e(s.length),i=_e(s.length);let a="";if(o===1)a="coords * strides + begin";else{let c=0;a=s.map((l,u)=>(c++,s.length===1?`coords * strides[${u}] + begin[${u}]`:`coords[${c-1}] * strides[${u}] + begin[${u}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${e});
      ${r} strides = ${r}(${t});

      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pK(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{begin:r,end:i,strides:a,beginMask:c,endMask:l,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:x,begin:y,end:w,strides:b}=Zd(o.shape,r,i,a,c,l,u,h,d);let v;if(m)v=te({inputs:{x:o},backend:t,attrs:{shape:f}});else if(g||x){k(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);const T=Xd(y,w,b),N=$r({inputs:{x:o},backend:t,attrs:{begin:y,size:T}});v=te({inputs:{x:N},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo(N)}else if(t.shouldExecuteOnCPU([o])){const N=t.readSync(o.dataId),$=we(o.shape,o.dtype,N),S=DB(p,$,b,y);v=t.makeTensorInfo(f,o.dtype,S.values)}else{const N=new dK(y,b,p);v=t.runWebGLProgram(N,[o],o.dtype)}const I=te({inputs:{x:v},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(v),I}const fK={kernelName:cd,backendName:"webgl",kernelFunc:pK};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mK(n){const{inputs:e,backend:t,attrs:s}=n,{separator:o,nGramWidths:r,leftPad:i,rightPad:a,padWidth:c,preserveShortSequences:l}=s,{data:u,dataSplits:h}=e,d=t.readSync(u.dataId),p=t.readSync(h.dataId),[f,m]=AB(d,p,o,r,i,a,c,l);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(h.shape,"int32",m)]}const gK={kernelName:Bg,backendName:"webgl",kernelFunc:mK};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xK(n){const{inputs:e,backend:t,attrs:s}=n,{skipEmpty:o}=s,{input:r,delimiter:i}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(r.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const a=t.readSync(r.dataId),c=t.readSync(i.dataId)[0],[l,u,h]=FB(a,c,o),d=u.length;return[t.makeTensorInfo([d,2],"int32",l),t.makeTensorInfo([d],"string",u),t.makeTensorInfo([2],"int32",new Int32Array(h))]}const yK={kernelName:Vg,backendName:"webgl",kernelFunc:xK};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bK(n){const{inputs:e,backend:t,attrs:s}=n,{numBuckets:o}=s,{input:r}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");const i=t.readSync(r.dataId),a=OB(i,o);return t.makeTensorInfo(r.shape,"int32",a)}const wK={kernelName:Wg,backendName:"webgl",kernelFunc:bK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vK="return tan(x);",CK=ke({opSnippet:vK}),IK={kernelName:Ji,backendName:"webgl",kernelFunc:CK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $K=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,SK=ke({opSnippet:$K}),kK={kernelName:Zi,backendName:"webgl",kernelFunc:SK};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TK(n){const{inputs:e,backend:t,attrs:s}=n,{tensor:o,indices:r,updates:i}=e,{sliceRank:a,numUpdates:c,sliceSize:l,strides:u,outputSize:h}=Io(i,r,o.shape),d=[h/l,l];if(h===0)return t.makeTensorInfo(o.shape,r.dtype);const p=te({inputs:{x:r},backend:t,attrs:{shape:[c,a]}}),f=te({inputs:{x:i},backend:t,attrs:{shape:[c,l]}}),m=te({inputs:{x:o},backend:t,attrs:{shape:d}}),g=new of(c,a,p.shape.length,f.shape.length,u,d,!1,!0),x=t.runWebGLProgram(g,[f,p,m],m.dtype),y=te({inputs:{x},backend:t,attrs:{shape:o.shape}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(x),y}const NK={kernelName:Fg,backendName:"webgl",kernelFunc:TK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EK{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let i=0;i<s.length;i++)s[i]=e[i]*t[i];this.outputShape=s,this.rank=s.length;const o=_e(this.rank),r=RK(e);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}}function RK(n){const e=n.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${n[0]})`;const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let o=0;o<n.length;o++)s.push(`imod(${t[o]}, ${n[o]})`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kw(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{reps:r}=s;if(o.dtype==="string"||o.shape.length>5){const c=t.readSync(o.dataId),l=o.dtype==="string"?c.map(d=>ks(d)):c,u=we(o.shape,o.dtype,l),h=_B(u,r);return t.makeTensorInfo(h.shape,h.dtype,h.values)}const i=new EK(o.shape,r);return t.runWebGLProgram(i,[o],o.dtype)}const DK={kernelName:Qi,backendName:"webgl",kernelFunc:Kw};class AK{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class FK{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hs(n,e){e!==null&&n.disposeIntermediateTensorInfo(e)}function og(n){let e=1;for(;e<n;)e*=2;return e}function OK(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{k:r,sorted:i}=s,a=W().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),c=W().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=o.shape,u=l[l.length-1];if(t.shouldExecuteOnCPU([o])||u<a||r>c){const S=t.readSync(o.dataId),[C,R]=LB(S,l,o.dtype,r,i);return[t.makeTensorInfo(C.shape,C.dtype,C.values),t.makeTensorInfo(R.shape,R.dtype,R.values)]}if(r===0)return l[l.length-1]=0,[t.makeTensorInfo(l,o.dtype,[]),t.makeTensorInfo(l,"int32",[])];if(u===1)return[o,$a({attrs:{shape:l,dtype:"int32",value:0},backend:t})];const h=t.texData.get(o.dataId),d=h!==null&&h.isPacked,p=d?t.unpackTensor(o):o,m=j(l)/u,g=te({inputs:{x:p},attrs:{shape:[m,u]},backend:t});d&&Hs(t,p);const x=og(r),y=og(u);let w=null;const b=()=>w===null?[g,g]:[g,w],v=(S,C,R)=>{const F=b(),z=new AK(R),B=[[u],[w===null?1:0],[Number.NEGATIVE_INFINITY],[S],[C]],H=w;w=t.runWebGLProgram(z,F,"int32",B),Hs(t,H)};for(let S=1;S<x;S*=2){const C=S*2;for(let R=S;R>=1;R/=2)v(C,R,[m,y])}for(let S=y;S>x;S/=2){const C=b(),R=new FK([m,S/2]),z=[[u],[w===null?1:0],[x]],M=w;w=t.runWebGLProgram(R,C,"int32",z),Hs(t,M);const B=x/2,H=B*2;for(let P=B;P>=1;P/=2)v(H,P,w.shape)}let I=w;w=$r({inputs:{x:w},backend:t,attrs:{begin:0,size:[m,r]}}),Hs(t,I);let T=Bw({inputs:{x:g,indices:w},backend:t,attrs:{axis:1,batchDims:1}});Hs(t,g);const N=l.slice(0,-1);N.push(r),I=w,w=te({inputs:{x:w},attrs:{shape:N},backend:t}),Hs(t,I);const $=T;return T=te({inputs:{x:T},attrs:{shape:N},backend:t}),Hs(t,$),[T,w]}const MK={kernelName:ld,backendName:"webgl",kernelFunc:OK};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _K{constructor(e,t,s,o,r,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const a=s==="nearest"?1:2;let c;switch(o){case"constant":c=1;break;case"reflect":c=2;break;case"wrap":c=3;break;case"nearest":c=4;break;default:c=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${c} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${c} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${c} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${r});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${r});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LK(n){const{inputs:e,backend:t,attrs:s}=n,{image:o,transforms:r}=e,{interpolation:i,fillMode:a,fillValue:c,outputShape:l}=s,[u,h,d,p]=o.shape,[f,m]=l??[h,d],g=[u,f,m,p],x=new _K(h,d,i,a,c,g);return t.runWebGLProgram(x,[o,r],"float32")}const PK={kernelName:ud,backendName:"webgl",kernelFunc:LK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zK(n){const{inputs:e,attrs:t,backend:s}=n,{axis:o}=t,{x:r}=e;va(r,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=s.readSync(r.dataId),{outputValues:a,outputShape:c,indices:l}=PB(i,o,r.shape,r.dtype);return[s.makeTensorInfo(c,r.dtype,a),s.makeTensorInfo([l.length],"int32",l)]}const BK={kernelName:hd,backendName:"webgl",kernelFunc:zK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VK(n){const{inputs:e,backend:t,attrs:s}=n,{value:o}=e;let{axis:r}=s;r<0&&(r+=o.shape.length);const i=o,a=i.shape.length,c=o.shape[r],l=new Array(a-1);let u=0;for(let m=0;m<a;m++)m!==r&&(l[u++]=i.shape[m]);const h=[],d=new Array(a).fill(0),p=i.shape.slice();p[r]=1;const f=new Array(c);for(let m=0;m<f.length;m++){d[r]=m;const g=$r({inputs:{x:i},backend:t,attrs:{begin:d,size:p}}),x=te({inputs:{x:g},backend:t,attrs:{shape:l}});f[m]=x,h.push(g)}return h.forEach(m=>t.disposeIntermediateTensorInfo(m)),f}const WK={kernelName:kl,backendName:"webgl",kernelFunc:VK};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UK{constructor(e,t){this.variableNames=["x","segmentIds"];const s=e.windowSize,o=e.batchSize,r=e.inSize,i=e.numSegments,a=i*Math.ceil(r/s);this.outputShape=[o,a];const c="0.0",l="sumValue",u=Math.floor(s/4)*4,h=s%4,d=`
        sumValue += dot(values, segFilter);
    `;let p="";r%s>0&&(p=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let f="";r%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${c};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${i})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${i})));

        float sumValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${u};
        if (${h===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${h===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${h===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${l});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GK(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,segmentIds:r}=e,{numSegments:i}=s,a=o.shape.length,c=[];let l=0;const u=Ye([l],a);let h=o;u!=null&&(h=Ot({inputs:{x:o},backend:t,attrs:{perm:u}}),c.push(h),l=tt(1,a)[0]);const d=Dy(h.shape,l,i),p=j([h.shape[l]]),f=te({inputs:{x:h},backend:t,attrs:{shape:[-1,p]}});c.push(f);const m=pd(o.dtype),g=(b,v,I,T,N)=>{const $=b.shape[0],S=b.shape[1],C=Ry(S,N),R={windowSize:C,inSize:S,batchSize:$,numSegments:N},F=new UK(R,v),z=t.compileAndRun(F,[b,I],T);if(c.push(z),z.shape[1]===N)return z;const M=jw({backend:t,attrs:{start:0,stop:N,step:1,dtype:"float32"}}),B=Kw({inputs:{x:M},backend:t,attrs:{reps:[S/C]}});return c.push(M),c.push(B),g(z,v,B,T,N)},x=g(f,"unsortedSegmentSum",r,m,i),y=te({inputs:{x},backend:t,attrs:{shape:d}});let w=y;if(u!=null){c.push(y);const b=_s(u);w=Ot({inputs:{x:w},backend:t,attrs:{perm:b}})}return c.forEach(b=>t.disposeIntermediateTensorInfo(b)),w}const HK={kernelName:Tl,backendName:"webgl",kernelFunc:GK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qK=[EV,DV,OV,LV,zV,WV,GV,qV,YV,ZV,tW,oW,aW,hW,fW,gW,yW,CW,$W,kW,RW,LW,zW,UW,HW,JW,QW,s4,dV,i4,h4,m4,v4,$4,k4,N4,R4,O4,L4,B4,W4,G4,q4,X4,J4,tU,sU,iU,lU,hU,mU,bU,IU,kU,EU,RU,AU,OU,_U,PU,BU,GU,jU,YU,ZU,tG,oG,cG,dG,hV,fG,l4,xG,wG,IG,fV,TG,DG,FG,LG,BG,GG,jG,JG,tH,oH,iH,uH,dH,fH,yH,wH,CH,$H,kH,RH,OH,PH,qH,xV,YH,QH,nq,rq,jW,cq,uq,dq,mq,bq,gV,vq,Iq,Sq,Tq,Nq,KW,WH,Dq,Mq,zq,bV,Uq,qq,Yq,Qq,sj,rj,cj,hj,fj,xj,wj,Ij,Tj,Rj,Oj,Lj,MW,GH,Bj,Wj,Gj,qj,Kj,Yj,Zj,eK,nK,rK,aK,lK,hK,fK,gK,yK,wK,UH,kV,IK,kK,NK,DK,MK,PK,TV,BK,WK,HK,lq];for(const n of qK)Gg(n);const jo="1.0.0",rg=(n,e={})=>{if(!n||n.length===0)return[];const t=Ie.getConfig(),{min:s,max:o,clampToUnit:r=t.featureEngineering.normalization.clampToUnit,minVariance:i=t.featureEngineering.normalization.minVariance}=e,a=s??Math.min(...n),l=(o??Math.max(...n))-a;if(l<i)return new Array(n.length).fill(.5);const u=n.map(h=>(h-a)/l);return r?u.map(h=>Math.max(0,Math.min(1,h))):u},rf=(n,e="sixFeatureV1")=>{const t=Ie.getConfig();if((e==="sixFeatureV1"?e:t.featureEngineering.timeEncoding.variant)==="none")return[];const o=n.getHours(),r=n.getDate(),i=n.getMonth()+1,a=Math.sin(2*Math.PI*o/24),c=Math.cos(2*Math.PI*o/24),l=Math.sin(2*Math.PI*(r-1)/31),u=Math.cos(2*Math.PI*(r-1)/31),h=Math.sin(2*Math.PI*(i-1)/12),d=Math.cos(2*Math.PI*(i-1)/12);return[a,c,l,u,h,d]},Tu=n=>{if(!n||n.length===0)return[];const e=Ie.getConfig(),t=new Set(e.taxonomy.positiveEmotions.map(r=>r.toLowerCase())),s=new Map;n.forEach(r=>{const i=r.timestamp.toISOString().split("T")[0];s.has(i)||s.set(i,[]),s.get(i).push(r)});const o=[];return s.forEach((r,i)=>{const a=new Map;r.forEach(x=>{x.emotions.forEach(y=>{const w=y.emotion.toLowerCase();a.has(w)||a.set(w,{totalIntensity:0,count:0});const b=a.get(w);b.totalIntensity+=y.intensity,b.count+=1})});const c={happy:0,sad:0,angry:0,anxious:0,calm:0,energetic:0,frustrated:0};a.forEach(({totalIntensity:x,count:y},w)=>{const b=x/y;w.includes("happy")||w.includes("joy")||t.has(w)?c.happy=Math.max(c.happy,b):w.includes("sad")||w.includes("down")?c.sad=Math.max(c.sad,b):w.includes("angry")||w.includes("mad")?c.angry=Math.max(c.angry,b):w.includes("anxious")||w.includes("worry")||w.includes("nervous")?c.anxious=Math.max(c.anxious,b):w.includes("calm")||w.includes("peaceful")||w.includes("relax")?c.calm=Math.max(c.calm,b):w.includes("energetic")||w.includes("excited")||w.includes("active")?c.energetic=Math.max(c.energetic,b):(w.includes("frustrated")||w.includes("annoyed"))&&(c.frustrated=Math.max(c.frustrated,b))});const l=new Map,u=["visual","auditory","tactile","vestibular","proprioceptive"];u.forEach(x=>{l.set(x,{seeking:0,avoiding:0,neutral:0,total:0})}),r.forEach(x=>{x.sensoryInputs.forEach(y=>{const w=(y.sensoryType||y.type||"visual").toLowerCase(),b=y.response.toLowerCase();if(l.has(w)){const v=l.get(w);v.total+=1,b.includes("seeking")||b.includes("craving")||b.includes("want")?v.seeking+=1:b.includes("avoiding")||b.includes("overwhelm")||b.includes("dislike")?v.avoiding+=1:v.neutral+=1}})});const h={};u.forEach(x=>{const y=l.get(x);y.total>0&&(y.seeking>=y.avoiding&&y.seeking>=y.neutral?h[x]="seeking":y.avoiding>=y.neutral?h[x]="avoiding":h[x]="neutral")});const d={},p=[...r].reverse().find(x=>x.environmentalData?.roomConditions);if(p?.environmentalData?.roomConditions){const x=p.environmentalData.roomConditions;x.lighting&&(x.lighting.toLowerCase().includes("bright")?d.lighting="bright":x.lighting.toLowerCase().includes("dim")||x.lighting.toLowerCase().includes("low")?d.lighting="dim":d.lighting="moderate"),typeof x.noiseLevel=="number"&&(x.noiseLevel>70?d.noise="loud":x.noiseLevel<40?d.noise="quiet":d.noise="moderate"),typeof x.temperature=="number"&&(x.temperature>75?d.temperature="hot":x.temperature<65?d.temperature="cold":d.temperature="comfortable")}const f=r.filter(x=>x.environmentalData?.classroom?.activity).map(x=>x.environmentalData.classroom.activity).filter((x,y,w)=>w.indexOf(x)===y),m=r.map(x=>[x.generalNotes,x.notes].filter(Boolean)).flat().join(" | "),g={id:`session_${i}_${r[0].studentId}`,studentId:r[0].studentId,date:`${i}T00:00:00.000Z`,emotion:c,sensory:h,environment:d,activities:f,notes:m};o.push(g)}),o.sort((r,i)=>new Date(r.date).getTime()-new Date(i.date).getTime()),o},ig=(n,e=7)=>{if(!n||n.length<e){const y=We([0,e,13]),w=We([0,7]);return{inputs:y,outputs:w,meta:{normalizers:{min:0,max:1},schemaVersion:jo}}}const t=["happy","sad","angry","anxious","calm","energetic","frustrated"],s=[],o=[],r=Ie.getConfig();for(let y=0;y<n.length-e+1;y++){const w=[];for(let I=y;I<y+e;I++){const T=n[I],N=t.map(S=>T.emotion[S]||0),$=rf(new Date(T.date));w.push([...N,...$])}const b=n[y+e-1],v=t.map(I=>b.emotion[I]||0);s.push(w.flat()),o.push(v)}if(s.length===0){const y=We([0,e,13]),w=We([0,7]);return{inputs:y,outputs:w,meta:{normalizers:{min:0,max:1},schemaVersion:jo}}}const i=s.flat(),a=rg(i,{clampToUnit:r.featureEngineering.normalization.clampToUnit,minVariance:r.featureEngineering.normalization.minVariance}),c=o.flat(),l=rg(c,{clampToUnit:r.featureEngineering.normalization.clampToUnit,minVariance:r.featureEngineering.normalization.minVariance}),u=[...i,...c],h=Math.min(...u),d=Math.max(...u),p=[];let f=0;for(let y=0;y<s.length;y++){const w=[];for(let b=0;b<e;b++){const v=[];for(let I=0;I<13;I++)v.push(a[f++]);w.push(v)}p.push(w)}const m=[];f=0;for(let y=0;y<o.length;y++){const w=[];for(let b=0;b<7;b++)w.push(l[f++]);m.push(w)}const g=HT(p),x=to(m);return{inputs:g,outputs:x,meta:{normalizers:{min:h,max:d},schemaVersion:jo}}},jK=n=>{if(!n||n.length===0){const r=We([0,12]),i=We([0,15]);return{inputs:r,outputs:i,meta:{schemaVersion:jo}}}const e=[],t=[];if(n.forEach(r=>{const i=[r.environment.lighting==="bright"?1:r.environment.lighting==="dim"?.5:0,r.environment.noise==="loud"?1:r.environment.noise==="moderate"?.5:0,r.environment.temperature==="hot"?1:r.environment.temperature==="cold"?0:.5,r.environment.crowded==="very"?1:r.environment.crowded==="moderate"?.5:0,r.environment.smells?1:0,r.environment.textures?1:0],a=rf(new Date(r.date)),c=[...i,...a],l=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];["visual","auditory","tactile","vestibular","proprioceptive"].forEach((h,d)=>{const p=r.sensory[h],f=d*3;p==="seeking"?l[f]=1:p==="avoiding"?l[f+1]=1:l[f+2]=1}),e.push(c),t.push(l)}),e.length===0){const r=We([0,12]),i=We([0,15]);return{inputs:r,outputs:i,meta:{schemaVersion:jo}}}const s=to(e),o=to(t);return{inputs:s,outputs:o,meta:{schemaVersion:jo}}};function Xw(n){if(Object.prototype.toString.call(n)!=="[object Object]")return!1;const e=Object.getPrototypeOf(n);return e===null||e===Object.prototype}function dh(n){return n instanceof Date&&!Number.isNaN(n.getTime())}function ph(n){return typeof Map<"u"&&n instanceof Map}function fh(n){return typeof Set<"u"&&n instanceof Set}function Ks(n,e){if(n==null)return n;const t=typeof n;if(t==="string"||t==="number"||t==="boolean")return n;if(t==="bigint")return{$type:"BigInt",value:n.toString()};if(t==="symbol")return{$type:"Symbol",value:String(n)};if(t==="function")return{$type:"Function",value:n.name||"anonymous"};if(dh(n))return{$type:"Date",value:n.toISOString()};if(fh(n))return{$type:"Set",value:Array.from(n).map(r=>Ks(r,e)).map(r=>({v:r,k:JSON.stringify(r)})).sort((r,i)=>r.k<i.k?-1:r.k>i.k?1:0).map(r=>r.v)};if(ph(n))return{$type:"Map",value:Array.from(n.entries()).map(([r,i])=>[Ks(r,e),Ks(i,e)]).map(r=>({e:r,k:JSON.stringify(r[0])})).sort((r,i)=>r.k<i.k?-1:r.k>i.k?1:0).map(r=>r.e)};if(Array.isArray(n)){const s=n.map(o=>Ks(o,e));return e?s.map(o=>({v:o,k:JSON.stringify(o)})).sort((o,r)=>o.k<r.k?-1:o.k>r.k?1:0).map(o=>o.v):s}if(Xw(n)){const s=Object.keys(n).sort(),o={};for(const r of s)o[r]=Ks(n[r],e);return o}try{const s=n.valueOf?.();if(s!==n&&s!==void 0)return Ks(s,e)}catch{}return{$type:n?.constructor?.name||"Object",value:String(n)}}function KK(n,e=!1){const t=Ks(n,e);return JSON.stringify(t)}function XK(n){if(typeof TextEncoder<"u")return new TextEncoder().encode(n);const e=[];for(let t=0;t<n.length;t++){const s=n.charCodeAt(t);if(s<128)e.push(s);else if(s<2048)e.push(192|s>>6),e.push(128|s&63);else if(s<55296||s>=57344)e.push(224|s>>12),e.push(128|s>>6&63),e.push(128|s&63);else{t++;const o=n.charCodeAt(t),r=65536+((s&1023)<<10|o&1023);e.push(240|r>>18),e.push(128|r>>12&63),e.push(128|r>>6&63),e.push(128|r&63)}}return new Uint8Array(e)}function Yw(n,e=!1){const t=typeof n=="string"?n:KK(n,e),s=XK(t);let o=2166136261;for(let i=0;i<s.length;i++)o^=s[i],o=(o>>>0)*16777619;return(o>>>0).toString(16).padStart(8,"0")}function YK(n){const e={arrays:0,arrayItems:0,objects:0,keys:0,primitives:0},t=s=>{if(s==null){e.primitives+=1;return}const o=typeof s;if(o==="string"||o==="number"||o==="boolean"||o==="bigint"||o==="symbol"||o==="function"){e.primitives+=1;return}if(dh(s)||fh(s)||ph(s)){if(dh(s)){e.objects+=1,e.keys+=1,e.primitives+=1;return}if(fh(s)){e.objects+=1,e.arrays+=1;const r=s.size;e.arrayItems+=r;for(const i of s)t(i);return}if(ph(s)){e.objects+=1,e.arrays+=1;const r=s.size;e.arrayItems+=r;for(const[i,a]of s)t(i),t(a);return}}if(Array.isArray(s)){e.arrays+=1,e.arrayItems+=s.length;for(const r of s)t(r);return}if(Xw(s)){e.objects+=1;const r=Object.keys(s);e.keys+=r.length;for(const i of r)t(s[i]);return}e.objects+=1,e.keys+=1};return t(n),e}function zo(n){const{namespace:e,input:t,version:s,normalizeArrayOrder:o=!1}=n;if(!e||typeof e!="string")throw new Error("createCacheKey: 'namespace' must be a non-empty string");const r=YK(t),i=Yw(t,o),a=[];return a.push(e),s&&a.push(`v${s}`),a.push(`c${r.arrays}`,`i${r.arrayItems}`,`o${r.objects}`,`k${r.keys}`,`p${r.primitives}`),a.push(i),a.join(":")}const Bo=new Map,Jw="model-eval",JK=300*1e3,ZK=300,gs=new Map;let Zw=JK;function QK(n){return zo({namespace:Jw,input:{mt:n.modelType,task:n.taskType,dataSig:n.dataSignature,cfgSig:n.configSignature},version:n.schemaVersion,normalizeArrayOrder:!1})}function e6(n,e){const t=Date.now();for(gs.has(n)&&gs.delete(n),gs.set(n,{ts:t,tags:e});gs.size>ZK;){const s=gs.keys().next().value;if(!s)break;gs.delete(s)}}function t6(n){const e=gs.get(n);return e?Date.now()-e.ts<=Zw?!0:(gs.delete(n),!1):!1}const n6="model-eval",ar="model-eval",s6=1;let Tc=typeof indexedDB<"u",ag=!1;function Qw(){return Tc?new Promise((n,e)=>{try{const t=indexedDB.open(n6,s6);t.onupgradeneeded=s=>{try{const o=s.target.result;o.objectStoreNames.contains(ar)||o.createObjectStore(ar,{keyPath:"id"})}catch(o){at.error("[modelEvaluation] onupgradeneeded failed",o)}},t.onsuccess=()=>n(t.result),t.onerror=()=>e(t.error)}catch(t){e(t)}}):Promise.reject(new Error("IndexedDB not available"))}async function o6(){if(Tc)try{const n=await Qw();await new Promise((e,t)=>{try{const r=n.transaction([ar],"readonly").objectStore(ar).openCursor();r.onerror=()=>t(r.error),r.onsuccess=()=>{const i=r.result;if(i){const a=i.value;if(a&&a.modelType){const c=Bo.get(a.modelType)??[];c.push(a),Bo.set(a.modelType,c)}i.continue()}else e()}}catch(s){t(s)}});for(const[e,t]of Bo.entries())t.sort((s,o)=>o.timestamp-s.timestamp),Bo.set(e,t)}catch(n){Tc=!1,at.warn("[modelEvaluation] Failed to initialize from IndexedDB. Falling back to memory only.",n)}}function r6(){ag||(ag=!0,o6().catch(n=>{at.warn("[modelEvaluation] Initialization load failed",n)}))}async function i6(n){if(Tc)try{const e=await Qw();await new Promise((t,s)=>{const i=e.transaction([ar],"readwrite").objectStore(ar).put(n);i.onsuccess=()=>t(),i.onerror=()=>s(i.error)})}catch(e){at.warn("[modelEvaluation] persistRun failed",e)}}function cg(n,e,t){try{return zo({namespace:n,input:e,version:t})}catch{try{const s=Yw(e);return[n,t?`v${t}`:void 0,s].filter(Boolean).join(":")}catch(s){return at.warn("[modelEvaluation] computeStableSignature failed; returning placeholder",s),`${n}:unknown`}}}function lg(n){if(r6(),!n||!n.id||!n.modelType||!n.timestamp){at.warn("[modelEvaluation] recordEvaluation called with invalid run payload",{hasRun:!!n});return}if(!n.dataSignature){const s=cg("model-eval:data",{id:n.id,ts:n.timestamp,mt:n.modelType},n.schemaVersion);n={...n,dataSignature:s}}if(!n.configSignature){const s=cg("model-eval:config",{id:n.id,task:n.taskType,mt:n.modelType},n.schemaVersion);n={...n,configSignature:s}}try{const s=QK({modelType:n.modelType,taskType:n.taskType,dataSignature:n.dataSignature,configSignature:n.configSignature,schemaVersion:n.schemaVersion});if(t6(s)){at.debug("[modelEvaluation] Skipping redundant evaluation record (cache fresh)",{key:s,ttlMs:Zw});return}const o=[Jw,String(n.modelType),String(n.taskType)];e6(s,o)}catch(s){at.warn("[modelEvaluation] eval cache key/touch failed; proceeding without skip",s)}const e=Bo.get(n.modelType)??[],t=e.findIndex(s=>s.id===n.id);t>=0?e[t]=n:e.push(n),e.sort((s,o)=>o.timestamp-s.timestamp),Bo.set(n.modelType,e),i6(n)}class a6{dbName="sensory-compass-ml";storeName="models";db=null;async init(){if(typeof indexedDB>"u"){console.warn("IndexedDB not available, ML models will not persist");return}return new Promise((e,t)=>{try{const s=indexedDB.open(this.dbName,1);s.onerror=()=>{console.warn("Failed to open IndexedDB:",s.error),e()},s.onsuccess=()=>{this.db=s.result,e()},s.onupgradeneeded=o=>{const r=o.target.result;r.objectStoreNames.contains(this.storeName)||r.createObjectStore(this.storeName,{keyPath:"name"})}}catch(s){console.warn("IndexedDB initialization failed:",s),e()}})}async saveModel(e,t,s){if(this.db||await this.init(),!this.db){console.warn("Cannot save model - IndexedDB not available");return}await t.save(mN(async o=>{const i=this.db.transaction([this.storeName],"readwrite").objectStore(this.storeName);return await new Promise((a,c)=>{const l=i.put({name:e,artifacts:o,metadata:s,timestamp:new Date});l.onsuccess=()=>a(),l.onerror=()=>c(l.error)}),{modelArtifactsInfo:{dateSaved:new Date,modelTopologyType:"JSON"}}}))}async loadModel(e){return this.db||await this.init(),this.db?new Promise((t,s)=>{const i=this.db.transaction([this.storeName],"readonly").objectStore(this.storeName).get(e);i.onsuccess=async()=>{const a=i.result;if(!a){t(null);return}const c=await cA(pN(a.artifacts));t({model:c,metadata:a.metadata})},i.onerror=()=>s(i.error)}):(console.warn("Cannot load model - IndexedDB not available"),null)}async deleteModel(e){if(this.db||await this.init(),!this.db){console.warn("Cannot delete model - IndexedDB not available");return}return new Promise((t,s)=>{const i=this.db.transaction([this.storeName],"readwrite").objectStore(this.storeName).delete(e);i.onsuccess=()=>t(),i.onerror=()=>s(i.error)})}async listModels(){return this.db||await this.init(),this.db?new Promise((e,t)=>{const r=this.db.transaction([this.storeName],"readonly").objectStore(this.storeName).getAll();r.onsuccess=()=>{const i=r.result.map(a=>a.metadata);e(i)},r.onerror=()=>t(r.error)}):(console.warn("Cannot list models - IndexedDB not available"),[])}}class c6{storage;models;isInitialized=!1;constructor(){this.storage=new a6,this.models=new Map}async init(){if(this.isInitialized)return;await this.storage.init();const e=["emotion-prediction","sensory-response","baseline-clustering"];for(const t of e){const s=await this.storage.loadModel(t);s&&this.models.set(t,s)}this.isInitialized=!0}createEmotionModel(){const e=gm({layers:[Cm({units:64,returnSequences:!0,inputShape:[7,13]}),Aa({rate:.2}),Cm({units:32,returnSequences:!1}),Aa({rate:.2}),Ar({units:16,activation:"relu"}),Ar({units:7,activation:"sigmoid"})]});return e.compile({optimizer:fs.adam(.001),loss:"meanSquaredError",metrics:["mse","mae"]}),e}createSensoryModel(){const e=gm({layers:[Ar({units:32,activation:"relu",inputShape:[12]}),Aa({rate:.2}),Ar({units:16,activation:"relu"}),Aa({rate:.2}),Ar({units:15,activation:"softmax"})]});return e.compile({optimizer:fs.adam(.001),loss:"categoricalCrossentropy",metrics:["accuracy"]}),e}async trainEmotionModel(e,t=50,s,o){const r=Tu(e),i=this.createEmotionModel(),{inputs:a,outputs:c,meta:l}=ig(r),u=await i.fit(a,c,{epochs:t,batchSize:32,validationSplit:.2,callbacks:s,shuffle:!0});try{const d=Ie.getConfig(),p=u.history.loss?.[u.history.loss.length-1],f=u.history.val_mse?.[u.history.val_mse.length-1]??u.history.mse?.[u.history.mse.length-1],m=u.history.val_mae?.[u.history.val_mae.length-1]??u.history.mae?.[u.history.mae.length-1],g=zo({namespace:"ml-training:data",input:{modelType:"emotion-prediction",dataPoints:e.length,epochs:t,preprocessingSchemaVersion:l?.schemaVersion},version:d.schemaVersion}),x=zo({namespace:"ml-training:config",input:{inputShape:[7,13],outputShape:[7],architecture:"LSTM"},version:d.schemaVersion}),y={id:`${Date.now()}-emotion`,modelType:"emotion-prediction",timestamp:Date.now(),dataSignature:g,configSignature:x,taskType:"regression",metrics:{regression:{mse:f,mae:m}},schemaVersion:d.schemaVersion,notes:l?.schemaVersion?`preprocessingSchemaVersion=${l.schemaVersion}`:void 0};lg(y)}catch{}const h={name:"emotion-prediction",version:"1.0.0",createdAt:new Date,lastTrainedAt:new Date,accuracy:u.history.val_mse?u.history.val_mse[u.history.val_mse.length-1]:void 0,loss:u.history.loss[u.history.loss.length-1],inputShape:[7,13],outputShape:[7],architecture:"LSTM",epochs:t,dataPoints:e.length,preprocessingSchemaVersion:l?.schemaVersion};await this.storage.saveModel("emotion-prediction",i,h),this.models.set("emotion-prediction",{model:i,metadata:h}),a.dispose(),c.dispose()}async trainSensoryModel(e,t=50,s,o){const r=Tu(e),i=this.createSensoryModel(),{inputs:a,outputs:c,meta:l}=jK(r),u=await i.fit(a,c,{epochs:t,batchSize:32,validationSplit:.2,callbacks:s,shuffle:!0});try{const d=Ie.getConfig(),p=u.history.loss?.[u.history.loss.length-1],f=u.history.val_accuracy?.[u.history.val_accuracy.length-1]??u.history.accuracy?.[u.history.accuracy.length-1]??u.history.acc?.[u.history.acc.length-1],m=zo({namespace:"ml-training:data",input:{modelType:"sensory-response",dataPoints:e.length,epochs:t,preprocessingSchemaVersion:l?.schemaVersion},version:d.schemaVersion}),g=zo({namespace:"ml-training:config",input:{inputShape:[12],outputShape:[15],architecture:"Dense"},version:d.schemaVersion}),x={id:`${Date.now()}-sensory`,modelType:"sensory-response",timestamp:Date.now(),dataSignature:m,configSignature:g,taskType:"classification",metrics:{classification:{accuracy:f}},schemaVersion:d.schemaVersion,notes:l?.schemaVersion?`preprocessingSchemaVersion=${l.schemaVersion}`:void 0};lg(x)}catch{}const h={name:"sensory-response",version:"1.0.0",createdAt:new Date,lastTrainedAt:new Date,accuracy:u.history.acc?u.history.acc[u.history.acc.length-1]:void 0,loss:u.history.loss[u.history.loss.length-1],inputShape:[12],outputShape:[15],architecture:"Dense",epochs:t,dataPoints:e.length,preprocessingSchemaVersion:l?.schemaVersion};await this.storage.saveModel("sensory-response",i,h),this.models.set("sensory-response",{model:i,metadata:h}),a.dispose(),c.dispose()}async predictEmotions(e,t=7){const s=Tu(e),o=this.models.get("emotion-prediction");if(!o)throw new Error("Emotion prediction model not found");const r=[],i=[...s];for(let a=0;a<t;a++){const{inputs:c,meta:l}=ig(i.slice(-7),7);if(c.shape[0]===0){c.dispose();break}const u=o.model.predict(c.slice([0,0,0],[1,-1,-1])),h=await u.array(),d=new Date(i[i.length-1].date);d.setDate(d.getDate()+1);const p=h[0].map(g=>g*10),f=(()=>{const g=p.reduce((y,w)=>y+w,0)/p.length;return p.reduce((y,w)=>y+Math.pow(w-g,2),0)/p.length})(),m=Math.max(0,Math.min(1,1/(1+f)));r.push({date:d,emotions:{happy:p[0],sad:p[1],angry:p[2],anxious:p[3],calm:p[4],energetic:p[5],frustrated:p[6]},confidence:m,confidenceInterval:{lower:Math.max(0,m-.1),upper:Math.min(1,m+.1)}}),i.push({id:`predicted-${a}`,studentId:i[0].studentId,date:d.toISOString(),emotion:{happy:p[0],sad:p[1],angry:p[2],anxious:p[3],calm:p[4],energetic:p[5],frustrated:p[6]},sensory:i[i.length-1].sensory,environment:i[i.length-1].environment,activities:[],notes:""}),c.dispose(),u.dispose()}return r}async predictSensoryResponse(e,t){const s=this.models.get("sensory-response");if(!s)throw new Error("Sensory response model not found");const o=[e.lighting==="bright"?1:e.lighting==="dim"?.5:0,e.noise==="loud"?1:e.noise==="moderate"?.5:0,e.temperature==="hot"?1:e.temperature==="cold"?0:.5,e.crowded==="very"?1:e.crowded==="moderate"?.5:0,e.smells?1:0,e.textures?1:0],r=rf(t),i=to([[...o,...r]]),a=s.model.predict(i),c=await a.array(),l=["visual","auditory","tactile","vestibular","proprioceptive"],u={visual:{seeking:0,avoiding:0,neutral:0},auditory:{seeking:0,avoiding:0,neutral:0},tactile:{seeking:0,avoiding:0,neutral:0},vestibular:{seeking:0,avoiding:0,neutral:0},proprioceptive:{seeking:0,avoiding:0,neutral:0}};l.forEach((w,b)=>{const v=b*3;u[w]={seeking:c[0][v],avoiding:c[0][v+1],neutral:c[0][v+2]}});const h=[],p=Ie.getConfig().patternAnalysis.concernFrequencyThreshold;e.noise==="loud"&&u.auditory.avoiding>p&&h.push({trigger:"Loud noise",probability:u.auditory.avoiding}),e.lighting==="bright"&&u.visual.avoiding>p&&h.push({trigger:"Bright lights",probability:u.visual.avoiding}),e.crowded==="very"&&u.tactile.avoiding>p&&h.push({trigger:"Crowded spaces",probability:u.tactile.avoiding}),i.dispose(),a.dispose();const f=c[0],m=Math.max(...f),x=-f.reduce((w,b)=>w+(b>0?b*Math.log(b):0),0)/Math.log(f.length||1),y=Math.max(0,Math.min(1,m*.6+(1-x)*.4));return{sensoryResponse:u,environmentalTriggers:h.sort((w,b)=>b.probability-w.probability),confidence:y}}async getModelStatus(){const e=new Map,t=["emotion-prediction","sensory-response","baseline-clustering"];for(const s of t){const o=this.models.get(s);e.set(s,o?.metadata||null)}return e}async deleteModel(e){await this.storage.deleteModel(e),this.models.delete(e)}async exportModel(e,t){const s=this.models.get(e);if(!s)throw new Error(`Model ${e} not found`);await s.model.save(`file://${t}`)}async performBaselineClustering(e,t=3){if(e.length<t)throw new Error("Not enough data points for clustering");const s=e.map(c=>{const l=c.emotions.length>0?c.emotions.reduce((m,g)=>m+g.intensity,0)/c.emotions.length:0,u=Ie.getConfig(),h=new Set((u.taxonomy?.positiveEmotions||[]).map(m=>m.toLowerCase())),d=c.emotions.length>0?c.emotions.filter(m=>h.has(m.emotion.toLowerCase())).length/c.emotions.length:0,p=c.sensoryInputs.length>0?c.sensoryInputs.filter(m=>m.response.toLowerCase().includes("seeking")).length/c.sensoryInputs.length:0,f=c.sensoryInputs.length>0?c.sensoryInputs.filter(m=>m.response.toLowerCase().includes("avoiding")).length/c.sensoryInputs.length:0;return[l/5,d,p,f]}),o=this.normalizeFeatures(s),{centroids:r,assignments:i}=await this.kMeansClustering(o,t),a=[];for(let c=0;c<t;c++){const l=o.filter((d,p)=>i[p]===c),u=l.length>0?l.reduce((d,p)=>d+this.euclideanDistance(p,r[c]),0)/l.length:0,h=this.describeCluster(r[c]);a.push({clusterId:c,centroid:r[c],description:h,anomalyScore:u,isNormal:u<.5})}return a}async kMeansClustering(e,t,s=100){const o=e.length,r=e[0].length,i=this.initializeCentroids(e,t),a=new Array(o).fill(0);let c=new Array(o).fill(-1);for(let l=0;l<s;l++){for(let u=0;u<o;u++){let h=1/0,d=0;for(let p=0;p<t;p++){const f=this.euclideanDistance(e[u],i[p]);f<h&&(h=f,d=p)}a[u]=d}if(a.every((u,h)=>u===c[h]))break;c=[...a];for(let u=0;u<t;u++){const h=e.filter((d,p)=>a[p]===u);h.length>0&&(i[u]=new Array(r).fill(0).map((d,p)=>h.reduce((f,m)=>f+m[p],0)/h.length))}}return{centroids:i,assignments:a}}initializeCentroids(e,t){const s=[],o=e.length;s.push([...e[Math.floor(Math.random()*o)]]);for(let r=1;r<t;r++){const i=e.map(u=>{const h=s.reduce((d,p)=>Math.min(d,this.euclideanDistance(u,p)),1/0);return h*h}),a=i.reduce((u,h)=>u+h,0);let c=Math.random()*a,l=0;for(let u=0;u<o;u++)if(c-=i[u],c<=0){l=u;break}s.push([...e[l]])}return s}euclideanDistance(e,t){return Math.sqrt(e.reduce((s,o,r)=>s+Math.pow(o-t[r],2),0))}normalizeFeatures(e){const t=e[0].length,s=new Array(t).fill(1/0),o=new Array(t).fill(-1/0);return e.forEach(r=>{r.forEach((i,a)=>{s[a]=Math.min(s[a],i),o[a]=Math.max(o[a],i)})}),e.map(r=>r.map((i,a)=>{const c=o[a]-s[a];return c===0?0:(i-s[a])/c}))}describeCluster(e){const[t,s,o,r]=e,i=Ie.getConfig(),a=Math.min(1,i.patternAnalysis.highIntensityThreshold/5),c=Math.max(0,(i.patternAnalysis.highIntensityThreshold-2)/5),l=i.insights.POSITIVE_EMOTION_TREND_THRESHOLD,u=i.insights.NEGATIVE_EMOTION_TREND_THRESHOLD,h=i.patternAnalysis.concernFrequencyThreshold;let d="";return t>a?d+="High emotional intensity":t<c?d+="Low emotional intensity":d+="Moderate emotional intensity",s>l?d+=", predominantly positive emotions":s<u?d+=", predominantly challenging emotions":d+=", mixed emotional states",o>h?d+=", high sensory seeking":r>h?d+=", high sensory avoiding":d+=", balanced sensory responses",d}}const Fo=new c6;function cr(n){if(!Array.isArray(n))return[];const e=[];for(let t=0;t<n.length;t++){const s=n[t];typeof s=="number"&&Number.isFinite(s)&&e.push(s)}return e}function ev(n){if(n.length===0)return 0;let e=0;for(let t=0;t<n.length;t++)e+=n[t];return e}function oi(n){const e=cr(n);return e.length===0?0:ev(e)/e.length}function l6(n,e=!0){const t=cr(n),s=t.length;if(s===0||s===1)return 0;const o=oi(t);let r=0;for(let a=0;a<s;a++){const c=t[a]-o;r+=c*c}const i=e?s-1:s;return i<=0?0:r/i}function tv(n,e,t){return Number.isFinite(n)?Math.min(Math.max(n,e),t):n>0?t:e}function mh(n){const e=[.9999999999998099,676.5203681218851,-1259.1392167224028,771.3234287776531,-176.6150291621406,12.507343278686905,-.13857109526572012,9984369578019572e-21,15056327351493116e-23];if(n<.5)return Math.log(Math.PI)-Math.log(Math.sin(Math.PI*n))-mh(1-n);n-=1;let t=e[0];for(let o=1;o<e.length;o++)t+=e[o]/(n+o);const s=n+e.length-.5;return .5*Math.log(2*Math.PI)+(n+.5)*Math.log(s)-s+Math.log(t)}function Ko(n){const e=cr(n).slice(),t=e.length;if(t===0)return 0;e.sort((o,r)=>o-r);const s=Math.floor(t/2);return t%2===1?e[s]:(e[s-1]+e[s])/2}function u6(n,e="normal"){const t=cr(n);if(t.length===0)return 0;const s=Ko(t),o=t.map(i=>Math.abs(i-s)),r=Ko(o);return r===0?0:e==="normal"?1.4826*r:r}function ug(n,e){const t=n.slice();if(t.length===0)return[];const s=Ko(cr(t)),o=1.4826,r=cr(t);let i=0;if(r.length>0){const c=Ko(r),l=r.map(h=>Math.abs(h-c));i=Ko(l)*o}if(!i||i===0)return new Array(t.length).fill(0);const a=new Array(t.length);for(let c=0;c<t.length;c++){const l=t[c];a[c]=Number.isFinite(l)?(l-s)/i:0}return a}function h6(n,e){const t=Math.min(n.length,e.length),s=[],o=[];for(let h=0;h<t;h++){const d=n[h],p=e[h];Number.isFinite(d)&&Number.isFinite(p)&&(s.push(d),o.push(p))}const r=s.length;if(r<2)return 0;const i=oi(s),a=oi(o);let c=0,l=0,u=0;for(let h=0;h<r;h++){const d=s[h]-i,p=o[h]-a;c+=d*p,l+=d*d,u+=p*p}return l<=0||u<=0?0:c/Math.sqrt(l*u)}function d6(n,e){if(!Number.isFinite(n))return NaN;if(!Number.isFinite(e)||e<=0)return .5;const t=Math.abs(n),s=Math.exp(mh((e+1)/2)-mh(e/2)-.5*Math.log(e*Math.PI)),o=p=>s*Math.pow(1+p*p/e,-((e+1)/2));function r(p,f,m){const g=(f+m)/2;return(m-f)/6*(p(f)+4*p(g)+p(m))}function i(p,f,m,g,x,y){const w=(f+m)/2,b=r(p,f,w),v=r(p,w,m),I=b+v-x;return y<=0||Math.abs(I)<=15*g?b+v+I/15:i(p,f,w,g/2,b,y-1)+i(p,w,m,g/2,v,y-1)}const a=1e-12,c=30,l=r(o,0,t),u=t===0?0:i(o,0,t,a,l,c),h=.5,d=n>=0?h+u:h-u;return tv(d,0,1)}function p6(n,e){if(!Number.isFinite(n)||!Number.isFinite(e)||e<3)return 1;const t=e-2,s=1-n*n;if(s<=0)return 0;const o=Math.abs(n*Math.sqrt(t)/Math.sqrt(s));let i=2*(1-d6(o,t));return Number.isFinite(i)||(i=1),tv(Math.max(i,1e-16),0,1)}function f6(n,e,t){const s=Math.min(n.length,e.length),o=[],r=[];for(let b=0;b<s;b++){const v=n[b],I=e[b];Number.isFinite(v)&&Number.isFinite(I)&&(o.push(v),r.push(I))}const i=o.length,a=i>0?Ko(r):0;if(i<2)return{slope:0,intercept:a,iterations:0,converged:!1,weights:new Array(s).fill(0)};const c=typeof t?.delta=="number"&&t.delta>0?t.delta:1.345,l=typeof t?.maxIter=="number"&&t.maxIter>0?Math.floor(t.maxIter):50,u=typeof t?.tol=="number"&&t.tol>0?t.tol:1e-6,h=oi(o),d=oi(r);let p=0,f=0;for(let b=0;b<i;b++){const v=o[b]-h;p+=v*(r[b]-d),f+=v*v}let m=f>0?p/f:0,g=d-m*h;const x=new Array(i).fill(1);let y=!1,w=0;for(let b=0;b<l;b++){w=b+1;const v=new Array(i);for(let P=0;P<i;P++)v[P]=r[P]-(g+m*o[P]);let I=u6(v,"normal");if(!I||I===0){const P=l6(v,!0);I=Math.sqrt(Math.max(P,1e-12))}for(let P=0;P<i;P++){const U=v[P],G=Math.abs(U),K=c*I;x[P]=G<=K?1:K/G}const T=ev(x);if(T<=0)break;let N=0,$=0;for(let P=0;P<i;P++){const U=x[P];N+=U*o[P],$+=U*r[P]}const S=N/T,C=$/T;let R=0,F=0;for(let P=0;P<i;P++){const U=x[P],G=o[P]-S;R+=U*G*G,F+=U*G*(r[P]-C)}const z=m,M=g;R>0&&(m=F/R),g=C-m*S;const B=Math.abs(m-z),H=Math.abs(g-M);if(B<u&&H<u){y=!0;break}}return{slope:m,intercept:g,iterations:w,converged:y,weights:x}}class m6{mlModelsInitialized=!1;constructor(){this.initializeMLModels()}async initializeMLModels(){try{await Fo.init(),this.mlModelsInitialized=!0}catch(e){at.error("Failed to initialize ML models:",e),this.mlModelsInitialized=!1}}async generatePredictiveInsights(e,t,s,o=[]){const r=Ie,i=typeof r.get=="function"?r.get():Ie.getConfig(),{enhancedAnalysis:a,timeWindows:c,alertSensitivity:l,analytics:u,insights:h,taxonomy:d,patternAnalysis:p}=i,f=[],m=this.analyzeEmotionTrend(e);if(m&&m.significance>=a.predictionConfidenceThreshold){const y={type:"prediction",title:"Emotional Well-being Forecast (Statistical)",description:`Based on current trends, emotional intensity is ${m.direction}`,confidence:m.significance,timeframe:"7-day forecast",prediction:{value:m.forecast.next7Days,trend:m.direction,accuracy:m.confidence},recommendations:this.getEmotionTrendRecommendations(m),severity:this.getTrendSeverity(m),source:"statistical"};f.push(y)}if(this.mlModelsInitialized&&s.length>=7)try{if((await Fo.getModelStatus()).get("emotion-prediction")){const w=await Fo.predictEmotions(s.slice(-14),7);if(w.length>0){const b=w.reduce((R,F)=>{const z=Object.values(F.emotions).reduce((M,B)=>M+B,0);return R+z/Object.keys(F.emotions).length},0)/w.length,v=e.slice(-7).reduce((R,F)=>R+F.intensity,0)/Math.max(e.slice(-7).length,1),I=1+a.trendThreshold,T=1-a.trendThreshold,N=b>=v*I?"increasing":b<=v*T?"decreasing":"stable",$=p.highIntensityThreshold,S=Math.max($-2,1),C=b>=$?"high":b<=S?"medium":"low";f.push({type:"prediction",title:"Emotional Well-being Forecast (ML)",description:`Machine learning predicts emotional patterns will be ${N}`,confidence:w[0].confidence,timeframe:"7-day forecast",prediction:{value:b,trend:N,accuracy:w[0].confidence},recommendations:this.getMLEmotionRecommendations(w,N),severity:C,source:"ml",mlPrediction:w})}}}catch(y){at.error("ML emotion prediction failed:",y)}const g=this.analyzeSensoryTrend(t);if(g&&g.significance>=a.predictionConfidenceThreshold&&f.push({type:"prediction",title:"Sensory Regulation Forecast (Statistical)",description:`Sensory seeking/avoiding patterns show ${g.direction} trend`,confidence:g.significance,timeframe:"14-day forecast",prediction:{value:g.forecast.next7Days,trend:g.direction,accuracy:g.confidence},recommendations:this.getSensoryTrendRecommendations(g),severity:this.getTrendSeverity(g),source:"statistical"}),this.mlModelsInitialized&&s.length>0)try{if((await Fo.getModelStatus()).get("sensory-response")&&s[s.length-1].environmentalData){const w={lighting:s[s.length-1].environmentalData?.roomConditions?.lighting||"moderate",noise:s[s.length-1].environmentalData?.roomConditions?.noiseLevel&&s[s.length-1].environmentalData.roomConditions.noiseLevel>70?"loud":s[s.length-1].environmentalData?.roomConditions?.noiseLevel&&s[s.length-1].environmentalData.roomConditions.noiseLevel<40?"quiet":"moderate",temperature:s[s.length-1].environmentalData?.roomConditions?.temperature&&s[s.length-1].environmentalData.roomConditions.temperature>26?"hot":s[s.length-1].environmentalData?.roomConditions?.temperature&&s[s.length-1].environmentalData.roomConditions.temperature<18?"cold":"comfortable",crowded:"moderate",smells:!1,textures:!1},b=await Fo.predictSensoryResponse(w,new Date);b&&f.push({type:"prediction",title:"Sensory Response Prediction (ML)",description:"Machine learning predicts sensory responses based on current environment",confidence:b.confidence,timeframe:"Current environment",recommendations:this.getMLSensoryRecommendations(b),severity:b.environmentalTriggers.length>2?"high":b.environmentalTriggers.length>0?"medium":"low",source:"ml",mlPrediction:b})}}catch(y){at.error("ML sensory prediction failed:",y)}o.forEach(y=>{const w=this.predictGoalAchievement(y);w&&f.push(w)});const x=this.assessRisks(e,t,s);return f.push(...x),f}analyzeTrendsWithStatistics(e){const t=Ie,s=typeof t.get=="function"?t.get():Ie.getConfig(),{enhancedAnalysis:o,analytics:r,timeWindows:i}=s;if(e.length<o.minSampleSize)return null;const a=[...e].sort((G,K)=>G.timestamp.getTime()-K.timestamp.getTime()),c=a.length,l=a.map((G,K)=>K),u=a.map(G=>G.value),h=o?.huber||{delta:1.345,maxIter:50,tol:1e-6},{slope:d,intercept:p}=f6(l,u,{maxIter:Number.isFinite(h.maxIter)?h.maxIter:50,tol:Number.isFinite(h.tol)?h.tol:1e-6,delta:Number.isFinite(h.delta)?h.delta:1.345}),f=Number.isFinite(p)?p:0,m=[],g=[];for(let G=0;G<c;G++){const K=u[G];Number.isFinite(K)&&(m.push(l[G]),g.push(K))}const x=m.length,y=new Array(c);for(let G=0;G<c;G++){const K=l[G],Y=Number.isFinite(d)?d*K+f:f;y[G]=Number.isFinite(Y)?Y:0}let w=0;if(x>=2){const G=g.reduce((X,ee)=>X+ee,0)/x;let K=0,Y=0;for(let X=0;X<x;X++){const ee=m[X],Q=g[X]-y[ee];K+=Q*Q;const oe=g[X]-G;Y+=oe*oe}w=Y===0?0:Math.max(0,Math.min(1,1-K/Y))}const b=dv(a[a.length-1].timestamp,a[0].timestamp),v=Math.max(1,b||0),I=Number.isFinite(d)?d*(c/v):0,T=Number(o?.qualityTargets?.pointsTarget),N=Number(o?.qualityTargets?.timeSpanDaysTarget),$=Number.isFinite(T)&&T>0?Math.min(1,c/T):0,S=Number.isFinite(N)&&N>0?Math.min(1,b/N):0,C=Math.max(0,w),R=$*.3+S*.3+C*.4,F=Number.isFinite(R)?R:0,z=Number(o?.trendThreshold)||0,M=Math.abs(I)<z?"stable":I>0?"increasing":"decreasing",B=y[y.length-1]??0,H=Number.isFinite(d)?d:0,P=B+H*(Number(i?.recentDataDays)||7),U=B+H*(Number(i?.defaultAnalysisDays)||30);return{metric:"Overall Trend",direction:M,rate:Number.isFinite(I)?I:0,significance:Number.isFinite(w)?w:0,confidence:F,forecast:{next7Days:Number.isFinite(P)?P:0,next30Days:Number.isFinite(U)?U:0,confidence:F}}}generateConfidenceExplanation(e,t,s,o){const r=Ie,i=typeof r.get=="function"?r.get():Ie.getConfig(),{enhancedAnalysis:a,timeWindows:c,insights:l,patternAnalysis:u}=i||{},h=[];let d="",p="low";if(typeof a?.minSampleSize=="number"&&(e<a.minSampleSize?h.push(`insufficientData:${e}:${a.minSampleSize}`):h.push(`sufficientData:${e}:${a.minSampleSize}`)),typeof c?.shortTermDays=="number"){const m=typeof c?.defaultAnalysisDays=="number"?c.defaultAnalysisDays:void 0;t<c.shortTermDays?h.push(m!=null?`shortTimespan:${t}:${m}`:`shortTimespan:${t}`):h.push(m!=null?`adequateTimespan:${t}:${m}`:`adequateTimespan:${t}`)}const f=a?.correlationSignificance;if(f&&typeof f.low=="number"&&typeof f.moderate=="number"&&typeof f.high=="number")s<f.low?h.push(`weakPattern:${s.toFixed(3)}:low=${f.low}`):s>=f.high?h.push(`strongPattern:${s.toFixed(3)}:high=${f.high}`):s>=f.moderate?h.push(`moderatePattern:${s.toFixed(3)}:moderate=${f.moderate}`):h.push(`lowPattern:${s.toFixed(3)}:low=${f.low}`);else if(typeof u?.correlationThreshold=="number"){const m=u.correlationThreshold,g=Math.max(.7,m+.4);s<m?h.push(`weakPattern:${s.toFixed(3)}:ct=${m}`):s>g?h.push(`strongPattern:${s.toFixed(3)}:ct=${m}`):h.push(`moderatePattern:ct=${m}`)}else h.push("moderatePattern");if(typeof l?.HIGH_CONFIDENCE_PATTERN_THRESHOLD=="number"){const m=l.HIGH_CONFIDENCE_PATTERN_THRESHOLD,g=m-.2;if(o>=m)if(p="high",typeof u?.correlationThreshold=="number"){const x=u.correlationThreshold,y=Math.max(.7,x+.4);d=s>y?"excellentData":"reliableInsight"}else d="reliableInsight";else o>=g?(p="medium",d="emergingTrend"):(p="low",d="needMoreData")}else p="low",d="needMoreData";return{level:p,explanation:d,factors:h}}detectAnomalies(e,t,s){const o=Ie,r=typeof o.get=="function"?o.get():Ie.getConfig(),{enhancedAnalysis:i,alertSensitivity:a}=r,c=[],l=e.map(m=>m.intensity),u=i.anomalyThreshold*a.anomalyMultiplier,h=i.anomalySeverityLevels||{medium:2.5,high:3},d=ug(l);e.forEach((m,g)=>{const x=Math.abs(d[g]??0);if(x>u){const y=x>=h.high?"high":x>=h.medium?"medium":"low";c.push({timestamp:m.timestamp,type:"emotion",severity:y,description:`Unusual ${m.emotion} intensity detected (${m.intensity}/5)`,deviationScore:x,recommendations:this.getAnomalyRecommendations("emotion",m.emotion,x)})}});const p=this.groupSensoryByDay(t),f=Object.values(p);if(f.length>0){const m=ug(f);Object.keys(p).forEach((x,y)=>{const w=p[x],b=Math.abs(m[y]??0);if(b>u){const v=b>=h.high?"high":b>=h.medium?"medium":"low";c.push({timestamp:new Date(x),type:"sensory",severity:v,description:`Unusual sensory activity level detected (${w} inputs)`,deviationScore:b,recommendations:this.getAnomalyRecommendations("sensory","frequency",b)})}})}return c.sort((m,g)=>g.timestamp.getTime()-m.timestamp.getTime())}generateCorrelationMatrix(e){const t=Ie,s=typeof t.get=="function"?t.get():Ie.getConfig(),{enhancedAnalysis:o,patternAnalysis:r,taxonomy:i}=s,a=["avgEmotionIntensity","positiveEmotionRatio","sensorySeekingRatio","noiseLevel","temperature","lightingQuality"],c=new Set((i?.positiveEmotions||[]).map(g=>g.toLowerCase())),l=e.map(g=>({avgEmotionIntensity:g.emotions.length>0?g.emotions.reduce((x,y)=>x+y.intensity,0)/g.emotions.length:0,positiveEmotionRatio:g.emotions.length>0?g.emotions.filter(x=>c.has(x.emotion.toLowerCase())).length/g.emotions.length:0,sensorySeekingRatio:g.sensoryInputs.length>0?g.sensoryInputs.filter(x=>x.response.toLowerCase().includes("seeking")).length/g.sensoryInputs.length:0,noiseLevel:g.environmentalData?.roomConditions?.noiseLevel||0,temperature:g.environmentalData?.roomConditions?.temperature||0,lightingQuality:this.convertLightingToNumeric(g.environmentalData?.roomConditions?.lighting)})),u=[],h=[],d=o?.correlationSignificance,p=Math.max(0,Math.min(1,d?.low??r.correlationThreshold??.3)),f=Math.max(p,Math.min(1,d?.moderate??p+.2)),m=Math.max(f,Math.min(1,d?.high??p+.4));return a.forEach((g,x)=>{u[x]=[],a.forEach((y,w)=>{const b=[],v=[];for(let N=0;N<l.length;N++){const $=l[N],S=$[g],C=$[y];typeof S=="number"&&Number.isFinite(S)&&typeof C=="number"&&Number.isFinite(C)&&(b.push(S),v.push(C))}const I=b.length,T=h6(b,v);if(u[x][w]=T,x<w&&Math.abs(T)>=p&&I>=o.minSampleSize){const N=p6(T,I),$=Math.abs(T),S=$>=m?"high":$>=f?"moderate":"low";h.push({factor1:g,factor2:y,correlation:T,pValue:N,significance:S})}})}),{factors:a,matrix:u,significantPairs:h.sort((g,x)=>Math.abs(x.correlation)-Math.abs(g.correlation))}}analyzeEmotionTrend(e){const t=e.map(s=>({value:s.intensity,timestamp:s.timestamp}));return this.analyzeTrendsWithStatistics(t)}analyzeSensoryTrend(e){const t=e.map(s=>({value:s.response.toLowerCase().includes("seeking")?1:s.response.toLowerCase().includes("avoiding")?-1:0,timestamp:s.timestamp}));return this.analyzeTrendsWithStatistics(t)}predictGoalAchievement(e){if(!e.dataPoints||e.dataPoints.length<3)return null;const t=e.dataPoints.map(c=>({value:c.value,timestamp:c.timestamp})),s=this.analyzeTrendsWithStatistics(t);if(!s)return null;const o=e.dataPoints[e.dataPoints.length-1].value,r=e.targetValue,i=r-o,a=s.rate>0?i/s.rate:-1;return{type:"prediction",title:`Goal Achievement Forecast: ${e.title}`,description:a>0?`Estimated ${Math.ceil(a)} days to achieve goal at current pace`:"Goal may require strategy adjustment based on current trend",confidence:s.significance,timeframe:"Goal completion forecast",prediction:{value:r,trend:s.direction,accuracy:s.significance},recommendations:this.getGoalRecommendations(e,s,a),severity:a<0?"high":a>60?"medium":"low"}}assessRisks(e,t,s){const o=Ie,r=typeof o.get=="function"?o.get():Ie.getConfig(),{timeWindows:i,enhancedAnalysis:a,alertSensitivity:c}=r,l=[],u={emotions:e.filter(g=>g.timestamp>=Vo(new Date,i.shortTermDays)),sensoryInputs:t.filter(g=>g.timestamp>=Vo(new Date,i.shortTermDays)),trackingEntries:s.filter(g=>g.timestamp>=Vo(new Date,i.shortTermDays))},h=Math.max(1,Math.floor(a?.riskAssessmentThreshold??3)),d=r?.enhancedAnalysis?.riskAssessment?.stressIntensityThreshold,p=r?.enhancedAnalysis?.riskAssessment?.stressEmotions,f=Array.isArray(p)?p.map(g=>g.toLowerCase()):[];let m=0;return typeof d=="number"&&f.length>0&&(m=u.emotions.filter(g=>g.intensity>=d&&f.includes(g.emotion.toLowerCase())).length),m>=h&&m>0&&l.push({type:"risk",title:"Stress Accumulation Risk",description:`${m} high-stress incidents in the past 2 weeks`,confidence:.8,timeframe:"Immediate attention needed",recommendations:["Implement immediate stress reduction strategies","Review and adjust current interventions","Consider environmental modifications","Schedule additional support sessions"],severity:"high"}),l}groupSensoryByDay(e){return e.reduce((t,s)=>{const o=hC(s.timestamp,"yyyy-MM-dd");return t[o]=(t[o]||0)+1,t},{})}convertLightingToNumeric(e){return{dim:1,normal:2,bright:3,fluorescent:2.5,natural:3.5}[e?.toLowerCase()||""]||2}getEmotionTrendRecommendations(e){return e.direction==="decreasing"?["Increase positive reinforcement strategies","Review environmental factors that may be contributing to stress","Consider additional sensory support tools","Schedule more frequent check-ins"]:e.direction==="increasing"?["Continue current successful strategies","Document what is working well","Gradually introduce new challenges","Share progress with student and family"]:["Monitor for changes in patterns","Maintain current support level","Be prepared to adjust strategies as needed"]}getSensoryTrendRecommendations(e){return e.rate>0?["Provide more structured sensory breaks","Introduce additional sensory tools","Consider sensory diet adjustments","Monitor for overstimulation"]:e.rate<0?["Reduce environmental stimuli","Provide more quiet spaces","Gradually reintroduce sensory experiences","Focus on calming strategies"]:["Maintain current sensory support level","Continue monitoring sensory preferences","Be responsive to daily variations"]}getGoalRecommendations(e,t,s){return s<0?["Review and adjust goal strategies","Break goal into smaller milestones","Identify and address barriers","Consider modifying timeline or approach"]:s>90?["Increase intervention frequency","Add additional support strategies","Review goal expectations","Provide more immediate reinforcement"]:["Continue current approach","Monitor progress regularly","Celebrate milestones reached","Maintain consistent support"]}getAnomalyRecommendations(e,t,s){return e==="emotion"?["Investigate potential triggers for this emotional spike","Provide immediate support and coping strategies","Monitor closely for additional unusual patterns","Consider environmental or schedule changes"]:e==="sensory"?["Review sensory environment for unusual factors","Check for changes in routine or schedule","Provide additional sensory regulation support","Monitor for illness or other physical factors"]:["Investigate potential causes","Provide additional support","Monitor closely","Document and track patterns"]}getTrendSeverity(e){const t=Ie,o=(typeof t.get=="function"?t.get():Ie.getConfig())?.enhancedAnalysis?.correlationSignificance,r=typeof o?.high=="number"?o.high:.7,i=typeof o?.moderate=="number"?o.moderate:.5;return e.direction==="decreasing"&&e.significance>=r?"high":e.direction==="decreasing"&&e.significance>=i?"medium":"low"}getMLEmotionRecommendations(e,t){const s=e.filter(i=>i.emotions.anxious>7).length,o=e.filter(i=>i.emotions.happy<3&&i.emotions.calm<3).length,r=[];return s>=3&&(r.push("ML predicts elevated anxiety - implement proactive calming strategies"),r.push("Schedule additional check-ins on high-anxiety days")),o>=4&&(r.push("ML indicates low positive emotions upcoming - increase engagement activities"),r.push("Prepare mood-boosting interventions")),t==="increasing"?r.push("ML shows increasing emotional intensity - monitor for triggers"):t==="decreasing"&&r.push("ML shows decreasing emotional engagement - check for withdrawal signs"),r.push("Compare ML predictions with actual outcomes to refine models"),r}getMLSensoryRecommendations(e){const t=[],s=Ie,r=(typeof s.get=="function"?s.get():Ie.getConfig())?.enhancedAnalysis?.correlationSignificance,i=typeof r?.high=="number"?r.high:.7;return Object.entries(e.sensoryResponse).forEach(([a,c])=>{c.avoiding>i?t.push(`High ${a} avoidance predicted - minimize ${a} stimuli`):c.seeking>i&&t.push(`High ${a} seeking predicted - provide ${a} input opportunities`)}),e.environmentalTriggers.forEach(a=>{a.probability>i&&t.push(`High probability of reaction to ${a.trigger} - prepare alternatives`)}),t}async analyzeBaseline(e){const t=Ie,s=typeof t.get=="function"?t.get():Ie.getConfig(),{enhancedAnalysis:o,patternAnalysis:r,timeWindows:i,alertSensitivity:a,analytics:c,insights:l,taxonomy:u}=s;if(!this.mlModelsInitialized||e.length<10)return[];try{return await Fo.performBaselineClustering(e,3)}catch(h){return at.error("Baseline clustering failed:",h),[]}}}const Fr=new m6;class g6{cache;ttl;configUnsubscribe;currentConfigHash;constructor(e,t){this.cache=e;const s=Ie.getConfig();this.ttl=t||s.cache.ttl,this.currentConfigHash=this.buildConfigHash(s),this.configUnsubscribe=Ie.subscribe(o=>{this.ttl=o.cache.ttl,this.currentConfigHash=this.buildConfigHash(o),o.cache.invalidateOnConfigChange&&this.invalidateAllCache()})}buildConfigHash(e){const t={patternAnalysis:e.patternAnalysis,enhancedAnalysis:e.enhancedAnalysis,timeWindows:e.timeWindows,alertSensitivity:e.alertSensitivity};return this.cache.getDataFingerprint(t)}destroy(){this.configUnsubscribe&&this.configUnsubscribe()}analyzeEmotionPatterns(e,t){const s=Ie.getConfig(),o=t??s.timeWindows.defaultAnalysisDays,r=this.cache.createKey("emotion-patterns",{fingerprint:this.cache.getDataFingerprint(e),timeframeDays:o,count:e.length,configHash:this.currentConfigHash}),i=this.cache.get(r);if(i)return i;const a=ka.analyzeEmotionPatterns(e,o),c=new Set;for(const u of e)u.studentId&&c.add(u.studentId);const l=["emotion-patterns",...Array.from(c,u=>`student-${u}`)];return this.cache.set(r,a,l),a}analyzeSensoryPatterns(e,t){const s=Ie.getConfig(),o=t??s.timeWindows.defaultAnalysisDays,r=this.cache.createKey("sensory-patterns",{fingerprint:this.cache.getDataFingerprint(e),timeframeDays:o,count:e.length,configHash:this.currentConfigHash}),i=this.cache.get(r);if(i)return i;const a=ka.analyzeSensoryPatterns(e,o),c=new Set;for(const u of e)u.studentId&&c.add(u.studentId);const l=["sensory-patterns",...Array.from(c,u=>`student-${u}`)];return this.cache.set(r,a,l),a}analyzeEnvironmentalCorrelations(e){const t=this.cache.createKey("env-correlations",{fingerprint:this.cache.getDataFingerprint(e),count:e.length,configHash:this.currentConfigHash}),s=this.cache.get(t);if(s)return s;const o=ka.analyzeEnvironmentalCorrelations(e),r=new Set;for(const a of e)a.studentId&&r.add(a.studentId);const i=["env-correlations",...Array.from(r,a=>`student-${a}`)];return this.cache.set(t,o,i),o}generateTriggerAlerts(e,t,s,o){const r=this.cache.createKey("trigger-alerts",{emotionFingerprint:this.cache.getDataFingerprint(e),sensoryFingerprint:this.cache.getDataFingerprint(t),trackingFingerprint:this.cache.getDataFingerprint(s),studentId:o,configHash:this.currentConfigHash}),i=this.cache.get(r);if(i)return i;const a=ka.generateTriggerAlerts(e,t,s,o),c=["trigger-alerts",`student-${o}`];return this.cache.set(r,a,c),a}async generatePredictiveInsights(e,t,s,o=[]){const r=this.cache.createKey("predictive-insights",{emotionFingerprint:this.cache.getDataFingerprint(e),sensoryFingerprint:this.cache.getDataFingerprint(t),trackingFingerprint:this.cache.getDataFingerprint(s),goalsFingerprint:this.cache.getDataFingerprint(o),configHash:this.currentConfigHash}),i=this.cache.get(r);if(i)return i;const a=await Fr.generatePredictiveInsights(e,t,s,o),c=new Set;for(const u of e)u.studentId&&c.add(u.studentId);for(const u of t)u.studentId&&c.add(u.studentId);for(const u of s)u.studentId&&c.add(u.studentId);const l=["predictive-insights",...Array.from(c,u=>`student-${u}`)];return this.cache.set(r,a,l),a}detectAnomalies(e,t,s){const o=this.cache.createKey("anomaly-detection",{emotionFingerprint:this.cache.getDataFingerprint(e),sensoryFingerprint:this.cache.getDataFingerprint(t),trackingFingerprint:this.cache.getDataFingerprint(s),configHash:this.currentConfigHash}),r=this.cache.get(o);if(r)return r;const i=Fr.detectAnomalies(e,t,s),a=new Set;for(const l of e)l.studentId&&a.add(l.studentId);for(const l of t)l.studentId&&a.add(l.studentId);for(const l of s)l.studentId&&a.add(l.studentId);const c=["anomaly-detection",...Array.from(a,l=>`student-${l}`)];return this.cache.set(o,i,c),i}analyzeTrendsWithStatistics(e){const t=this.cache.createKey("trend-analysis",{fingerprint:this.cache.getDataFingerprint(e),count:e.length,configHash:this.currentConfigHash}),s=this.cache.get(t);if(s!==void 0)return s;const o=Fr.analyzeTrendsWithStatistics(e);return this.cache.set(t,o,["trend-analysis"]),o}generateCorrelationMatrix(e){const t=this.cache.createKey("correlation-matrix",{fingerprint:this.cache.getDataFingerprint(e),count:e.length,configHash:this.currentConfigHash}),s=this.cache.get(t);if(s)return s;const o=Fr.generateCorrelationMatrix(e),r=new Set;for(const a of e)a.studentId&&r.add(a.studentId);const i=["correlation-matrix",...Array.from(r,a=>`student-${a}`)];return this.cache.set(t,o,i),o}generateConfidenceExplanation(e,t,s,o){const r=this.cache.createKey("confidence-explanation",{dataPoints:e,timeSpanDays:t,rSquared:Math.round(s*1e3)/1e3,confidence:Math.round(o*1e3)/1e3,configHash:this.currentConfigHash}),i=this.cache.get(r);if(i)return i;const a=Fr.generateConfidenceExplanation(e,t,s,o);return this.cache.set(r,a,["confidence-explanation"]),a}invalidateStudentCache(e){return this.cache.invalidateByTag(`student-${e}`)}invalidateAllCache(){const e=["emotion-patterns","sensory-patterns","env-correlations","trigger-alerts","predictive-insights","anomaly-detection","trend-analysis","correlation-matrix","confidence-explanation"];let t=0;return e.forEach(s=>{t+=this.cache.invalidateByTag(s)}),t}invalidateConfigurationCache(){return this.invalidateAllCache()}}function x6(n,e){return new g6(n,e)}function y6(n){return Number.isNaN(n)||n<0?0:n>1?1:n}function b6(n){return Math.round(n*100)/100}function w6(n){if(!n||n.length===0)return null;const e=n[n.length-1];return e&&e.timestamp?new Date(e.timestamp).getTime():null}function v6(n){if(n)return n;try{return Ie.getConfig()?.confidence||Gt.confidence}catch{return Gt.confidence}}function C6(n){if(n)return n;try{return Ie.getConfig()?.insights||Gt.insights}catch{return Gt.insights}}function I6(){try{return Ie.getConfig()||Gt}catch{return Gt}}function $6(n,e,t,s){const o=v6(s),r=o.THRESHOLDS,i=o.WEIGHTS,a=r.EMOTION_COUNT??r.EMOTION_ENTRIES??1,c=r.SENSORY_COUNT??r.SENSORY_ENTRIES??1,l=r.TRACKING_COUNT??r.TRACKING_ENTRIES??1,u=i.EMOTIONS??i.EMOTION??0,h=i.SENSORY??0,d=i.TRACKING??0,p=i.RECENCY_BOOST??0,f=Math.min(n.length/Math.max(1,a),1)*u,m=Math.min(e.length/Math.max(1,c),1)*h,g=Math.min(t.length/Math.max(1,l),1)*d,x=w6(t),y=r.DAYS_SINCE_LAST_ENTRY??0,w=(()=>{if(x==null||!Number.isFinite(y)||y<=0)return!1;const v=Date.now(),I=1440*60*1e3,T=v-x;return T<0?!1:Math.floor(T/I)<y})(),b=y6(f+m+g+(w?p:0));return b6(b)}function gh(...n){if(n.length>=3&&n[0]&&typeof n[0]=="object"&&"patterns"in n[0]){const u=n[0],h=n[1],d=n[2],p=C6(n[3]),f=I6(),m=[];if(d.length===0)return["No tracking data available yet. Start by creating your first tracking session to begin pattern analysis."];if(d.length<p.MIN_SESSIONS_FOR_FULL_ANALYTICS&&m.push(`Limited data available (${d.length} sessions). Analytics will improve as more data is collected.`),u.patterns.filter(g=>g.confidence>p.HIGH_CONFIDENCE_PATTERN_THRESHOLD).slice(0,p.MAX_PATTERNS_TO_SHOW).forEach(g=>m.push(`Pattern detected: ${g.description} (${Math.round(g.confidence*100)}% confidence)`)),u.correlations.filter(g=>g.significance==="high").slice(0,p.MAX_CORRELATIONS_TO_SHOW).forEach(g=>m.push(`Strong correlation found: ${g.description}`)),u.predictiveInsights.slice(0,p.MAX_PREDICTIONS_TO_SHOW).forEach(g=>m.push(`Prediction: ${g.description} (${Math.round(g.confidence*100)}% confidence)`)),h.length>=p.RECENT_EMOTION_COUNT){const g=h.slice(-p.RECENT_EMOTION_COUNT),x=f.POSITIVE_EMOTIONS??Gt.POSITIVE_EMOTIONS,w=g.filter(b=>x.has(b.emotion.toLowerCase())).length/g.length;w>p.POSITIVE_EMOTION_TREND_THRESHOLD?m.push(`Positive trend: ${Math.round(w*100)}% of recent emotions have been positive.`):w<p.NEGATIVE_EMOTION_TREND_THRESHOLD&&m.push(`Consider reviewing strategies - only ${Math.round(w*100)}% of recent emotions have been positive.`)}return m.length===0&&m.push("Analytics are active and monitoring patterns. Continue collecting data for more detailed insights."),m}const e=n[0],t=n[1],s=n[2],o=n[3],r=n[4],i=n[5]??Ie.getConfig().insights,a=[];if(s.length<i.MIN_SESSIONS_FOR_FULL_ANALYTICS&&a.push(`Limited data available (${s.length} sessions). Continue collecting data for better insights.`),o.filter(u=>u.confidence>=i.HIGH_CONFIDENCE_PATTERN_THRESHOLD).slice(0,i.MAX_PATTERNS_TO_SHOW).forEach(u=>{const h=Math.round(u.confidence*100);a.push(`Pattern detected (${u.type}): ${u.pattern} (${h}% confidence). ${u.description}`)}),r.slice().sort((u,h)=>Math.abs(h.correlation-u.correlation)).slice(0,i.MAX_CORRELATIONS_TO_SHOW).forEach(u=>{a.push(`Correlation: ${u.factor1} ↔ ${u.factor2} (r=${typeof u.correlation=="number"?u.correlation.toFixed(2):"0.00"}, ${u.significance}). ${u.description}`)}),e.length>0){const u=e.slice(-Math.max(1,i.RECENT_EMOTION_COUNT)),h=k6(u.map(d=>d.emotion.toLowerCase()));h&&a.push(`Recent emotions most frequently observed: ${h.key} (${h.count} of last ${u.length}).`)}if(t.length>0){const u=t.slice(-Math.max(1,Math.min(10,t.length))),h=u.filter(p=>p.response.toLowerCase().includes("seeking")).length,d=u.filter(p=>p.response.toLowerCase().includes("avoiding")).length;h>d&&h>0?a.push("Recent sensory pattern leans toward seeking behavior. Consider structured sensory breaks."):d>h&&d>0&&a.push("Recent sensory pattern shows avoidance. Provide access to low-stimulation spaces.")}return a.slice(0,Math.max(i.MAX_PATTERNS_TO_SHOW,i.MAX_CORRELATIONS_TO_SHOW,i.MAX_PREDICTIONS_TO_SHOW,5))}function S6(...n){if(Array.isArray(n[0])){const a=n[0]??[],c=n[1]??[],l=n[2]??[],u=n[3],d={patterns:[...a,...c],correlations:l,predictiveInsights:[]};return gh(d,u.emotions,u.entries)}const e=n[0],t=n[1]??void 0,s=(e.patterns??[]).slice(),o=(e.correlations??[]).slice(),r=(e.emotions??[]).slice(),i=(e.trackingEntries??[]).slice();return gh({patterns:s,correlations:o,predictiveInsights:[]},r,i,t?.insightConfig)}function k6(n){if(n.length===0)return null;const e=n.reduce((o,r)=>(o[r]=(o[r]??0)+1,o),{});let t="",s=0;for(const[o,r]of Object.entries(e))r>s&&(t=o,s=r);return t?{key:t,count:s}:null}async function T6(n){const e=Ie.getConfig(),{entries:t,emotions:s}=n,o=n.results?.patterns??[],r=n.results?.correlations??[],i=n.results?.predictiveInsights??[],a=$6(s,n.sensoryInputs??[],t,e.confidence),c=gh({patterns:o,correlations:r,predictiveInsights:i},s,t,e.insights),l=t.length>=e.insights.MIN_SESSIONS_FOR_FULL_ANALYTICS;return{insights:c,confidence:a,hasMinimumData:l,computedAt:new Date().toISOString(),tags:n.tags}}let xh=Gt.cache.ttl??3e5,yh=Gt.cache.maxSize??200;const xs=[],Lo={storage:new Map,get(n){const e=this.storage.get(n);if(e&&e.expires>Date.now())return e.data;this.storage.delete(n)},set(n,e,t=[]){for(this.storage.has(n)||xs.push(n),this.storage.set(n,{data:e,expires:Date.now()+xh,tags:t});xs.length>yh;){const s=xs.shift();s&&this.storage.delete(s)}},has(n){return this.get(n)!==void 0},invalidateByTag(n){let e=0;for(const[t,s]of this.storage.entries())s.tags&&s.tags.includes(n)&&(this.storage.delete(t),e++);if(e>0){const t=xs.filter(s=>this.storage.has(s));xs.length=0,xs.push(...t)}return e},getDataFingerprint(n){const e=o=>{if(o==null)return"null";if(typeof o!="object")return String(o);if(Array.isArray(o))return`[${o.map(e).join(",")}]`;const r=o;return`{${Object.keys(r).sort().map(a=>`${a}:${e(r[a])}`).join(",")}}`},t=e(n);let s=0;for(let o=0;o<t.length;o++){const r=t.charCodeAt(o);s=(s<<5)-s+r,s=s&s}return Math.abs(s).toString(36)},createKey(n,e){const t=Object.keys(e).sort().map(s=>`${s}:${JSON.stringify(e[s])}`).join(":");return`${n}:${t}`}},Or=x6(Lo),Nu=[];let Eu=!1;const ps=n=>{Nu.push(n),Eu||(Eu=!0,setTimeout(()=>{try{for(;Nu.length;)postMessage(Nu.shift())}finally{Eu=!1}},30))};let an=null;async function N6(n){const e=n.data;let t;if(e&&e.type==="Insights/Compute"&&e.payload){const{inputs:s,config:o}=e.payload;t={entries:s.entries,emotions:s.emotions,sensoryInputs:s.sensoryInputs,cacheKey:e.cacheKey,config:o??null},typeof e.ttlSeconds=="number"&&e.ttlSeconds>0&&(xh=Math.max(1e3,Math.floor(e.ttlSeconds*1e3)))}else t=e;try{const s=`worker_msg_${t?.cacheKey||"nocache"}_${new Date().getMinutes()}`;Lo.has(s)||(at.debug("[analytics.worker] onmessage",{hasConfig:!!t?.config,cacheKey:t?.cacheKey??null,entries:t?.entries?.length??0,emotions:t?.emotions?.length??0,sensory:t?.sensoryInputs?.length??0}),Lo.set(s,!0,["logging"]))}catch{}if(t.config&&(an=t.config,typeof an.cache?.ttl=="number"&&an.cache.ttl>0&&(xh=an.cache.ttl),typeof an.cache?.maxSize=="number"&&an.cache.maxSize>0))for(yh=an.cache.maxSize;xs.length>yh;){const s=xs.shift();s&&Lo.storage.delete(s)}if((t.emotions?.length??0)===0&&(t.sensoryInputs?.length??0)===0&&(t.entries?.length??0)===0){ps({type:"complete",cacheKey:t.cacheKey??void 0,payload:{patterns:[],correlations:[],predictiveInsights:[],anomalies:[],insights:[],cacheKey:t.cacheKey??void 0,updatedCharts:["insightList"]},chartsUpdated:["insightList"]});return}try{const s=an?.timeWindows?.defaultAnalysisDays??Gt.timeWindows.defaultAnalysisDays;ps({type:"progress",cacheKey:t.cacheKey,progress:{stage:"start",percent:5}});const o=t.emotions.length>0?Or.analyzeEmotionPatterns(t.emotions,s):[],r=t.sensoryInputs.length>0?Or.analyzeSensoryPatterns(t.sensoryInputs,s):[],i=[...o,...r];ps({type:"partial",cacheKey:t.cacheKey,payload:{patterns:i,cacheKey:t.cacheKey,updatedCharts:["patternHighlights"]},chartsUpdated:["patternHighlights"],progress:{stage:"patterns",percent:30}});let a=[];const c=an?.analytics?.MIN_TRACKING_FOR_CORRELATION??Gt.analytics.MIN_TRACKING_FOR_CORRELATION;t.entries.length>=c&&(a=Or.analyzeEnvironmentalCorrelations(t.entries)),ps({type:"partial",cacheKey:t.cacheKey,payload:{correlations:a,environmentalCorrelations:a,cacheKey:t.cacheKey,updatedCharts:["correlationMatrix"]},chartsUpdated:["correlationMatrix"],progress:{stage:"correlations",percent:55}});let l=[],u=[];const h=an?.analytics?.MIN_TRACKING_FOR_ENHANCED??Gt.analytics.MIN_TRACKING_FOR_ENHANCED;t.entries.length>=h&&(l=await Or.generatePredictiveInsights(t.emotions,t.sensoryInputs,t.entries,[]),ps({type:"partial",cacheKey:t.cacheKey,payload:{predictiveInsights:l,cacheKey:t.cacheKey,updatedCharts:["predictiveTimeline"]},chartsUpdated:["predictiveTimeline"],progress:{stage:"predictiveInsights",percent:75}}),u=Or.detectAnomalies(t.emotions,t.sensoryInputs,t.entries),ps({type:"partial",cacheKey:t.cacheKey,payload:{anomalies:u,cacheKey:t.cacheKey,updatedCharts:["anomalyTimeline"]},chartsUpdated:["anomalyTimeline"],progress:{stage:"anomalies",percent:85}}));let d;if((an?.features?.enableSummaryFacade??Gt.features?.enableSummaryFacade)===!0){d=(await T6({entries:t.entries,emotions:t.emotions,sensoryInputs:t.sensoryInputs,results:{patterns:[...o,...r],correlations:a,predictiveInsights:l}})).insights;try{const g=`_logged_facade_used_${new Date().getMinutes()}`;Lo.has(g)||(at.debug("[analytics.worker] Using summary facade for insights",{entries:t.entries?.length??0,emotions:t.emotions?.length??0,sensory:t.sensoryInputs?.length??0}),Lo.set(g,!0,["logging"]))}catch{}}else d=S6({patterns:[...o,...r],correlations:a,emotions:t.emotions,sensoryInputs:t.sensoryInputs,trackingEntries:t.entries},{insightConfig:an?.insights??Gt.insights});const f={patterns:i,correlations:a,environmentalCorrelations:a,predictiveInsights:l,anomalies:u,insights:d,cacheKey:t.cacheKey,updatedCharts:["insightList"]};ps({type:"complete",cacheKey:t.cacheKey,payload:f,chartsUpdated:["insightList"],progress:{stage:"complete",percent:100}})}catch(s){try{at.error("[analytics.worker] error",s)}catch{}at.error("Error in analytics worker:",s),ps({type:"error",cacheKey:t.cacheKey,error:"Failed to analyze data.",payload:{patterns:[],correlations:[],predictiveInsights:[],anomalies:[],insights:["An error occurred during analysis. Please try again."],cacheKey:t.cacheKey,updatedCharts:["insightList"]},chartsUpdated:["insightList"]})}}if(typeof self<"u"&&"onmessage"in self){try{self.addEventListener("error",n=>{try{postMessage({type:"error",error:n.message,cacheKey:void 0,payload:{patterns:[],correlations:[],predictiveInsights:[],anomalies:[],insights:["Worker runtime error encountered."],updatedCharts:["insightList"]}})}catch{}}),self.addEventListener("unhandledrejection",n=>{const e=typeof n?.reason=="string"?n.reason:n?.reason?.message??"Unhandled rejection in worker";try{postMessage({type:"error",error:String(e),cacheKey:void 0,payload:{patterns:[],correlations:[],predictiveInsights:[],anomalies:[],insights:["Worker unhandled rejection."],updatedCharts:["insightList"]}})}catch{}})}catch{}try{postMessage({type:"progress",progress:{stage:"ready",percent:1}})}catch{}self.onmessage=N6}

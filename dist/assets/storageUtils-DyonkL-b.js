import{l as g}from"./logger-Bi5o39IC.js";const f={getStorageInfo(){let t=0;for(const e in localStorage)localStorage.hasOwnProperty(e)&&(t+=localStorage[e].length+e.length);return{used:t,available:t<5e6}},clearOldTrackingData(t=30){try{const e=new Date;e.setDate(e.getDate()-t);const r="sensoryTracker_entries",a=localStorage.getItem(r);if(a){const s=JSON.parse(a).filter(o=>new Date(o.timestamp)>e);localStorage.setItem(r,JSON.stringify(s))}const n="sensoryTracker_alerts",l=localStorage.getItem(n);if(l){const s=JSON.parse(l).filter(o=>new Date(o.timestamp)>e);localStorage.setItem(n,JSON.stringify(s))}}catch(e){g.error("Error clearing old data:",e)}},compressData(t){return JSON.stringify(t)},safeSetItem(t,e){try{localStorage.setItem(t,e)}catch(r){if(r instanceof DOMException&&(r.code===22||r.code===1014||r.name==="QuotaExceededError"||r.name==="NS_ERROR_DOM_QUOTA_REACHED")){this.clearOldTrackingData();try{localStorage.setItem(t,e)}catch{this.clearNonEssentialData(),localStorage.setItem(t,e)}}else throw r}},clearNonEssentialData(){const t=["sensoryTracker_students","sensoryTracker_goals","sensoryTracker_dataVersion"];for(const e in localStorage)localStorage.hasOwnProperty(e)&&e.startsWith("sensoryTracker_")&&!t.includes(e)&&localStorage.removeItem(e)}};export{f as storageUtils};

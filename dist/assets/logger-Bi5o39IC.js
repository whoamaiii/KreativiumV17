const r={BASE_URL:"/",DEV:!1,MODE:"production",PROD:!0,SSR:!1,VITE_ENABLE_GEMMA_DEMO:"true",VITE_GEMMA_BASE_URL:"http://127.0.0.1:8000"};var a=(n=>(n[n.DEBUG=0]="DEBUG",n[n.INFO=1]="INFO",n[n.WARN=2]="WARN",n[n.ERROR=3]="ERROR",n[n.NONE=4]="NONE",n))(a||{});class s{config;static instance;constructor(){const t=(()=>{try{return r}catch{return}})(),e=!!(t&&t.PROD);this.config={level:e?3:0,enableConsole:!e,enableRemote:!1}}static getInstance(){return s.instance||(s.instance=new s),s.instance}init(t){this.config.level=t}setLogLevel(t){this.config.level=t}shouldLog(t){return t>=this.config.level}formatMessage(t){return`[${new Date().toISOString()}] [${t}]`}debug(t,...e){this.shouldLog(0)&&this.config.enableConsole&&console.log(this.formatMessage("DEBUG"),t,...e)}info(t,...e){this.shouldLog(1)&&this.config.enableConsole&&console.info(this.formatMessage("INFO"),t,...e)}warn(t,...e){this.shouldLog(2)&&this.config.enableConsole&&console.warn(this.formatMessage("WARN"),t,...e)}error(t,...e){if(this.shouldLog(3)){this.config.enableConsole&&console.error(this.formatMessage("ERROR"),t,...e);const i=e.map(o=>o instanceof Error?{message:o.message,stack:o.stack,name:o.name}:o);this.config.enableRemote&&this.config.remoteEndpoint&&this.sendToRemote(t,i)}}async sendToRemote(t,e){try{await fetch(this.config.remoteEndpoint,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({timestamp:new Date().toISOString(),level:"ERROR",message:t,data:e,userAgent:navigator.userAgent,url:window.location.href})})}catch{}}configure(t){this.config={...this.config,...t}}}const c=s.getInstance();export{a as L,c as l};
